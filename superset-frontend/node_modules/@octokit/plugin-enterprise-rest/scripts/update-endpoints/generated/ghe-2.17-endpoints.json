[
  {
    "name": "List global hooks",
    "scope": "enterpriseAdmin",
    "id": "listGlobalHooks",
    "method": "GET",
    "url": "/admin/hooks",
    "isDeprecated": false,
    "description": "",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/enterprise-admin/global_webhooks/#list-global-hooks",
    "previews": [{ "name": "superpro" }],
    "headers": [
      {
        "name": "accept",
        "value": "application/vnd.github.superpro-preview+json"
      }
    ],
    "parameters": [
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"type\":\"Global\",\"id\":1,\"name\":\"web\",\"active\":true,\"events\":[\"organization\",\"user\"],\"config\":{\"url\":\"https://example.com\",\"content_type\":\"json\",\"insecure_ssl\":\"0\",\"secret\":\"********\"},\"updated_at\":\"2017-12-07T00:14:59Z\",\"created_at\":\"2017-12-07T00:14:59Z\",\"url\":\"https://api.github.com/admin/hooks/1\",\"ping_url\":\"https://api.github.com/admin/hooks/1/pings\"}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Create a global hook",
    "scope": "enterpriseAdmin",
    "id": "createGlobalHook",
    "method": "POST",
    "url": "/admin/hooks",
    "isDeprecated": false,
    "description": "",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/enterprise-admin/global_webhooks/#create-a-global-hook",
    "previews": [{ "name": "superpro" }],
    "headers": [
      {
        "name": "accept",
        "value": "application/vnd.github.superpro-preview+json"
      }
    ],
    "parameters": [
      {
        "name": "name",
        "description": "Must be passed as \"web\".",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "config",
        "description": "Key/value pairs to provide settings for this webhook. [These are defined below](https://developer.github.com/enterprise/2.17/v3/enterprise-admin/global_webhooks/#create-hook-config-params).",
        "in": "BODY",
        "type": "object",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "config.url",
        "description": "The URL to which the payloads will be delivered.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "config.content_type",
        "description": "The media type used to serialize the payloads. Supported values include `json` and `form`. The default is `form`.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "config.secret",
        "description": "If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value in the [`X-Hub-Signature`](https://developer.github.com/enterprise/2.17/webhooks/#delivery-headers) header.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "config.insecure_ssl",
        "description": "Determines whether the SSL certificate of the host for `url` will be verified when delivering payloads. Supported values include `0` (verification is performed) and `1` (verification is not performed). The default is `0`. **We strongly recommend not setting this to `1` as you are subject to man-in-the-middle and other attacks.**",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "events",
        "description": "The [events](https://developer.github.com/enterprise/2.17/v3/activity/events/types/) that trigger this webhook. A global webhook can be triggered by `user` and `organization` events. Default: `user` and `organization`.",
        "in": "BODY",
        "type": "string[]",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "active",
        "description": "Determines if notifications are sent when the webhook is triggered. Set to `true` to send notifications.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 201,
        "description": "response",
        "examples": [
          {
            "data": "{\"type\":\"Global\",\"id\":1,\"name\":\"web\",\"active\":true,\"events\":[\"organization\",\"user\"],\"config\":{\"url\":\"https://example.com\",\"content_type\":\"json\",\"insecure_ssl\":\"0\",\"secret\":\"********\"},\"updated_at\":\"2017-12-07T00:14:59Z\",\"created_at\":\"2017-12-07T00:14:59Z\",\"url\":\"https://api.github.com/admin/hooks/1\",\"ping_url\":\"https://api.github.com/admin/hooks/1/pings\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Get single global hook",
    "scope": "enterpriseAdmin",
    "id": "getGlobalHook",
    "method": "GET",
    "url": "/admin/hooks/{hook_id}",
    "isDeprecated": false,
    "description": "",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/enterprise-admin/global_webhooks/#get-single-global-hook",
    "previews": [{ "name": "superpro" }],
    "headers": [
      {
        "name": "accept",
        "value": "application/vnd.github.superpro-preview+json"
      }
    ],
    "parameters": [
      {
        "name": "hook_id",
        "description": "hook_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"type\":\"Global\",\"id\":1,\"name\":\"web\",\"active\":true,\"events\":[\"organization\",\"user\"],\"config\":{\"url\":\"https://example.com\",\"content_type\":\"json\",\"insecure_ssl\":\"0\",\"secret\":\"********\"},\"updated_at\":\"2017-12-07T00:14:59Z\",\"created_at\":\"2017-12-07T00:14:59Z\",\"url\":\"https://api.github.com/admin/hooks/1\",\"ping_url\":\"https://api.github.com/admin/hooks/1/pings\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Edit a global hook",
    "scope": "enterpriseAdmin",
    "id": "updateGlobalHook",
    "method": "PATCH",
    "url": "/admin/hooks/{hook_id}",
    "isDeprecated": false,
    "description": "Parameters that are not provided will be overwritten with the default value or removed if no default exists.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/enterprise-admin/global_webhooks/#edit-a-global-hook",
    "previews": [{ "name": "superpro" }],
    "headers": [
      {
        "name": "accept",
        "value": "application/vnd.github.superpro-preview+json"
      }
    ],
    "parameters": [
      {
        "name": "hook_id",
        "description": "hook_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "config",
        "description": "Key/value pairs to provide settings for this webhook. [These are defined below](https://developer.github.com/enterprise/2.17/v3/enterprise-admin/global_webhooks/#update-hook-config-params).",
        "in": "BODY",
        "type": "object",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "config.url",
        "description": "The URL to which the payloads will be delivered.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "config.content_type",
        "description": "The media type used to serialize the payloads. Supported values include `json` and `form`. The default is `form`.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "config.secret",
        "description": "If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value in the [`X-Hub-Signature`](https://developer.github.com/enterprise/2.17/webhooks/#delivery-headers) header.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "config.insecure_ssl",
        "description": "Determines whether the SSL certificate of the host for `url` will be verified when delivering payloads. Supported values include `0` (verification is performed) and `1` (verification is not performed). The default is `0`. **We strongly recommend not setting this to `1` as you are subject to man-in-the-middle and other attacks.**",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "events",
        "description": "The [events](https://developer.github.com/enterprise/2.17/v3/activity/events/types/) that trigger this webhook. A global webhook can be triggered by `user` and `organization` events. Default: `user` and `organization`.",
        "in": "BODY",
        "type": "string[]",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "active",
        "description": "Determines if notifications are sent when the webhook is triggered. Set to `true` to send notifications.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"type\":\"Global\",\"id\":1,\"name\":\"web\",\"active\":true,\"events\":[\"organization\"],\"config\":{\"url\":\"https://example.com\",\"content_type\":\"form\",\"insecure_ssl\":\"0\"},\"updated_at\":\"2017-12-07T00:14:59Z\",\"created_at\":\"2017-12-07T00:14:59Z\",\"url\":\"https://api.github.com/admin/hooks/1\",\"ping_url\":\"https://api.github.com/admin/hooks/1/pings\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Delete a global hook",
    "scope": "enterpriseAdmin",
    "id": "deleteGlobalHook",
    "method": "DELETE",
    "url": "/admin/hooks/{hook_id}",
    "isDeprecated": false,
    "description": "",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/enterprise-admin/global_webhooks/#delete-a-global-hook",
    "previews": [{ "name": "superpro" }],
    "headers": [
      {
        "name": "accept",
        "value": "application/vnd.github.superpro-preview+json"
      }
    ],
    "parameters": [
      {
        "name": "hook_id",
        "description": "hook_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [],
    "renamed": null
  },
  {
    "name": "Ping a global hook",
    "scope": "enterpriseAdmin",
    "id": "pingGlobalHook",
    "method": "POST",
    "url": "/admin/hooks/{hook_id}/pings",
    "isDeprecated": false,
    "description": "This will trigger a [ping event](https://developer.github.com/enterprise/2.17/webhooks/#ping-event) to be sent to the hook.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/enterprise-admin/global_webhooks/#ping-a-global-hook",
    "previews": [{ "name": "superpro" }],
    "headers": [
      {
        "name": "accept",
        "value": "application/vnd.github.superpro-preview+json"
      }
    ],
    "parameters": [
      {
        "name": "hook_id",
        "description": "hook_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [],
    "renamed": null
  },
  {
    "name": "Delete a public key",
    "scope": "enterpriseAdmin",
    "id": "deletePublicKey",
    "method": "DELETE",
    "url": "/admin/keys/{key_ids}",
    "isDeprecated": false,
    "description": "",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/enterprise-admin/users/#delete-a-public-key",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "key_ids",
        "description": "key_ids parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [],
    "renamed": null
  },
  {
    "name": "Update LDAP mapping for a team",
    "scope": "enterpriseAdmin",
    "id": "updateLdapMappingForTeam",
    "method": "PATCH",
    "url": "/admin/ldap/teams/{team_id}/mapping",
    "isDeprecated": false,
    "description": "Updates the [distinguished name](https://www.ldap.com/ldap-dns-and-rdns) (DN) of the LDAP entry to map to a team. [LDAP synchronization](https://help.github.com/enterprise/admin/guides/user-management/using-ldap/#enabling-ldap-sync) must be enabled to map LDAP entries to a team. Use the [Create team](https://developer.github.com/enterprise/2.17/v3/teams/#create-team) endpoint to create a team with LDAP mapping.\n\nIf you pass the `hellcat-preview` media type, you can also update the LDAP mapping of a child team.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/enterprise-admin/ldap/#update-ldap-mapping-for-a-team",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "team_id",
        "description": "team_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "ldap_dn",
        "description": "The [distinguished name](https://www.ldap.com/ldap-dns-and-rdns) (DN) of the LDAP entry to map to a team.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"ldap_dn\":\"cn=Enterprise Ops,ou=teams,dc=github,dc=com\",\"id\":1,\"node_id\":\"MDQ6VGVhbTE=\",\"url\":\"https://api.github.com/teams/1\",\"html_url\":\"https://api.github.com/teams/justice-league\",\"name\":\"Justice League\",\"slug\":\"justice-league\",\"description\":\"A great team.\",\"privacy\":\"closed\",\"permission\":\"admin\",\"members_url\":\"https://api.github.com/teams/1/members{/member}\",\"repositories_url\":\"https://api.github.com/teams/1/repos\",\"parent\":null}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Sync LDAP mapping for a team",
    "scope": "enterpriseAdmin",
    "id": "syncLdapMappingForTeam",
    "method": "POST",
    "url": "/admin/ldap/teams/{team_id}/sync",
    "isDeprecated": false,
    "description": "Note that this API call does not automatically initiate an LDAP sync. Rather, if a `201` is returned, the sync job is queued successfully, and is performed when the instance is ready.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/enterprise-admin/ldap/#sync-ldap-mapping-for-a-team",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "team_id",
        "description": "team_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 201,
        "description": "response",
        "examples": [{ "data": "{\"status\":\"queued\"}" }]
      }
    ],
    "renamed": null
  },
  {
    "name": "Update LDAP mapping for a user",
    "scope": "enterpriseAdmin",
    "id": "updateLdapMappingForUser",
    "method": "PATCH",
    "url": "/admin/ldap/users/{username}/mapping",
    "isDeprecated": false,
    "description": "",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/enterprise-admin/ldap/#update-ldap-mapping-for-a-user",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "username",
        "description": "username parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "ldap_dn",
        "description": "The [distinguished name](https://www.ldap.com/ldap-dns-and-rdns) (DN) of the LDAP entry to map to a team.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"ldap_dn\":\"uid=asdf,ou=users,dc=github,dc=com\",\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Sync LDAP mapping for a user",
    "scope": "enterpriseAdmin",
    "id": "syncLdapMappingForUser",
    "method": "POST",
    "url": "/admin/ldap/users/{username}/sync",
    "isDeprecated": false,
    "description": "Note that this API call does not automatically initiate an LDAP sync. Rather, if a `201` is returned, the sync job is queued successfully, and is performed when the instance is ready.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/enterprise-admin/ldap/#sync-ldap-mapping-for-a-user",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "username",
        "description": "username parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 201,
        "description": "response",
        "examples": [{ "data": "{\"status\":\"queued\"}" }]
      }
    ],
    "renamed": null
  },
  {
    "name": "Create an organization",
    "scope": "enterpriseAdmin",
    "id": "createOrg",
    "method": "POST",
    "url": "/admin/organizations",
    "isDeprecated": false,
    "description": "",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/enterprise-admin/orgs/#create-an-organization",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "login",
        "description": "The organization's username.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "admin",
        "description": "The login of the user who will manage this organization.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "profile_name",
        "description": "The organization's display name.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 201,
        "description": "response",
        "examples": [
          {
            "data": "{\"login\":\"github\",\"id\":1,\"node_id\":\"MDEyOk9yZ2FuaXphdGlvbjE=\",\"url\":\"https://api.github.com/orgs/github\",\"repos_url\":\"https://api.github.com/orgs/github/repos\",\"events_url\":\"https://api.github.com/orgs/github/events\",\"hooks_url\":\"https://api.github.com/orgs/github/hooks\",\"issues_url\":\"https://api.github.com/orgs/github/issues\",\"members_url\":\"https://api.github.com/orgs/github/members{/member}\",\"public_members_url\":\"https://api.github.com/orgs/github/public_members{/member}\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"description\":\"A great organization\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Rename an organization",
    "scope": "enterpriseAdmin",
    "id": "renameOrg",
    "method": "PATCH",
    "url": "/admin/organizations/{org}",
    "isDeprecated": false,
    "description": "",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/enterprise-admin/orgs/#rename-an-organization",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "org parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "login",
        "description": "The organization's new name.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 202,
        "description": "response",
        "examples": [
          {
            "data": "{\"message\":\"Job queued to rename organization. It may take a few minutes to complete.\",\"url\":\"https://<hostname>/api/v3/organizations/1\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "List pre-receive environments",
    "scope": "enterpriseAdmin",
    "id": "listPreReceiveEnvironments",
    "method": "GET",
    "url": "/admin/pre-receive-environments",
    "isDeprecated": false,
    "description": "",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/enterprise-admin/pre_receive_environments/#list-pre-receive-environments",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"id\":1,\"name\":\"Default\",\"image_url\":\"githubenterprise://internal\",\"url\":\"https://github.example.com/api/v3/admin/pre-receive-environments/1\",\"html_url\":\"https://github.example.com/admin/pre-receive-environments/1\",\"default_environment\":true,\"created_at\":\"2016-05-20T11:35:45-05:00\",\"hooks_count\":14,\"download\":{\"url\":\"https://github.example.com/api/v3/admin/pre-receive-environments/1/downloads/latest\",\"state\":\"not_started\",\"downloaded_at\":\"2016-05-26T07:42:53-05:00\",\"message\":null}},{\"id\":2,\"name\":\"DevTools Hook Env\",\"image_url\":\"https://my_file_server/path/to/devtools_env.tar.gz\",\"url\":\"https://github.example.com/api/v3/admin/pre-receive-environments/2\",\"html_url\":\"https://github.example.com/admin/pre-receive-environments/2\",\"default_environment\":false,\"created_at\":\"2016-05-20T11:35:45-05:00\",\"hooks_count\":1,\"download\":{\"url\":\"https://github.example.com/api/v3/admin/pre-receive-environments/2/downloads/latest\",\"state\":\"success\",\"downloaded_at\":\"2016-05-26T07:42:53-05:00\",\"message\":null}}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Create a pre-receive environment",
    "scope": "enterpriseAdmin",
    "id": "createPreReceiveEnvironment",
    "method": "POST",
    "url": "/admin/pre-receive-environments",
    "isDeprecated": false,
    "description": "",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/enterprise-admin/pre_receive_environments/#create-a-pre-receive-environment",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "name",
        "description": "The new pre-receive environment's name.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "image_url",
        "description": "URL from which to download a tarball of this environment.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 201,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":2,\"name\":\"DevTools Hook Env\",\"image_url\":\"https://my_file_server/path/to/devtools_env.tar.gz\",\"url\":\"https://github.example.com/api/v3/admin/pre-receive-environments/2\",\"html_url\":\"https://github.example.com/admin/pre-receive-environments/2\",\"default_environment\":false,\"created_at\":\"2016-05-20T11:35:45-05:00\",\"hooks_count\":1,\"download\":{\"url\":\"https://github.example.com/api/v3/admin/pre-receive-environments/2/downloads/latest\",\"state\":\"not_started\",\"downloaded_at\":null,\"message\":null}}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Get a single pre-receive environment",
    "scope": "enterpriseAdmin",
    "id": "getPreReceiveEnvironment",
    "method": "GET",
    "url": "/admin/pre-receive-environments/{pre_receive_environment_id}",
    "isDeprecated": false,
    "description": "",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/enterprise-admin/pre_receive_environments/#get-a-single-pre-receive-environment",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "pre_receive_environment_id",
        "description": "pre_receive_environment_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":2,\"name\":\"DevTools Hook Env\",\"image_url\":\"https://my_file_server/path/to/devtools_env.tar.gz\",\"url\":\"https://github.example.com/api/v3/admin/pre-receive-environments/2\",\"html_url\":\"https://github.example.com/admin/pre-receive-environments/2\",\"default_environment\":false,\"created_at\":\"2016-05-20T11:35:45-05:00\",\"hooks_count\":1,\"download\":{\"url\":\"https://github.example.com/api/v3/admin/pre-receive-environments/2/downloads/latest\",\"state\":\"success\",\"downloaded_at\":\"2016-05-26T07:42:53-05:00\",\"message\":null}}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Edit a pre-receive environment",
    "scope": "enterpriseAdmin",
    "id": "updatePreReceiveEnvironment",
    "method": "PATCH",
    "url": "/admin/pre-receive-environments/{pre_receive_environment_id}",
    "isDeprecated": false,
    "description": "If you attempt to modify the default environment, you will get a response like this:",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/enterprise-admin/pre_receive_environments/#edit-a-pre-receive-environment",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "pre_receive_environment_id",
        "description": "pre_receive_environment_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "name",
        "description": "This pre-receive environment's new name.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "image_url",
        "description": "URL from which to download a tarball of this environment.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":2,\"name\":\"DevTools Hook Env\",\"image_url\":\"https://my_file_server/path/to/devtools_env.tar.gz\",\"url\":\"https://github.example.com/api/v3/admin/pre-receive-environments/2\",\"html_url\":\"https://github.example.com/admin/pre-receive-environments/2\",\"default_environment\":false,\"created_at\":\"2016-05-20T11:35:45-05:00\",\"hooks_count\":1,\"download\":{\"url\":\"https://github.example.com/api/v3/admin/pre-receive-environments/2/downloads/latest\",\"state\":\"success\",\"downloaded_at\":\"2016-05-26T07:42:53-05:00\",\"message\":null}}"
          }
        ]
      },
      {
        "code": 422,
        "description": "Client Errors",
        "examples": [
          {
            "data": "{\"message\":\"Validation Failed\",\"errors\":[{\"resource\":\"PreReceiveEnvironment\",\"code\":\"custom\",\"message\":\"Cannot modify or delete the default environment\"}]}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Delete a pre-receive environment",
    "scope": "enterpriseAdmin",
    "id": "deletePreReceiveEnvironment",
    "method": "DELETE",
    "url": "/admin/pre-receive-environments/{pre_receive_environment_id}",
    "isDeprecated": false,
    "description": "If you attempt to delete an environment that cannot be deleted, you will get a response like this:\n\nThe possible error messages are:\n\n*   _Cannot modify or delete the default environment_\n*   _Cannot delete environment that has hooks_\n*   _Cannot delete environment when download is in progress_",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/enterprise-admin/pre_receive_environments/#delete-a-pre-receive-environment",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "pre_receive_environment_id",
        "description": "pre_receive_environment_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 422,
        "description": "Client Errors",
        "examples": [
          {
            "data": "{\"message\":\"Validation Failed\",\"errors\":[{\"resource\":\"PreReceiveEnvironment\",\"code\":\"custom\",\"message\":\"Cannot modify or delete the default environment\"}]}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Trigger a pre-receive environment download",
    "scope": "enterpriseAdmin",
    "id": "triggerPreReceiveEnvironmentDownload",
    "method": "POST",
    "url": "/admin/pre-receive-environments/{pre_receive_environment_id}/downloads",
    "isDeprecated": false,
    "description": "Triggers a new download of the environment tarball from the environment's `image_url`. When the download is finished, the newly downloaded tarball will overwrite the existing environment.\n\nIf a download cannot be triggered, you will get a reponse like this:\n\nThe possible error messages are:\n\n*   _Cannot modify or delete the default environment_\n*   _Can not start a new download when a download is in progress_",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/enterprise-admin/pre_receive_environments/#trigger-a-pre-receive-environment-download",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "pre_receive_environment_id",
        "description": "pre_receive_environment_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 202,
        "description": "response",
        "examples": [
          {
            "data": "{\"url\":\"https://github.example.com/api/v3/admin/pre-receive-environments/3/downloads/latest\",\"state\":\"not_started\",\"downloaded_at\":null,\"message\":null}"
          }
        ]
      },
      {
        "code": 422,
        "description": "Client Errors",
        "examples": [
          {
            "data": "{\"message\":\"Validation Failed\",\"errors\":[{\"resource\":\"PreReceiveEnvironment\",\"code\":\"custom\",\"message\":\"Can not start a new download when a download is in progress\"}]}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Get a pre-receive environment's download status",
    "scope": "enterpriseAdmin",
    "id": "getPreReceiveEnvironmentDownloadStatus",
    "method": "GET",
    "url": "/admin/pre-receive-environments/{pre_receive_environment_id}/downloads/latest",
    "isDeprecated": false,
    "description": "In addition to seeing the download status at the `/admin/pre-receive-environments/:pre_receive_environment_id`, there is also a separate endpoint for just the status.\n\nPossible values for `state` are `not_started`, `in_progress`, `success`, `failed`.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/enterprise-admin/pre_receive_environments/#get-a-pre-receive-environments-download-status",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "pre_receive_environment_id",
        "description": "pre_receive_environment_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "state",
        "description": "The state of the most recent download.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "downloaded_at",
        "description": "The time when the most recent download started.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "message",
        "description": "On failure, this will have any error messages produced.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"url\":\"https://github.example.com/api/v3/admin/pre-receive-environments/3/downloads/latest\",\"state\":\"success\",\"downloaded_at\":\"2016-05-26T07:42:53-05:00\",\"message\":null}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "List pre-receive hooks",
    "scope": "enterpriseAdmin",
    "id": "listPreReceiveHooks",
    "method": "GET",
    "url": "/admin/pre-receive-hooks",
    "isDeprecated": false,
    "description": "",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/enterprise-admin/pre_receive_hooks/#list-pre-receive-hooks",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"id\":1,\"name\":\"Check Commits\",\"enforcement\":\"disabled\",\"script\":\"scripts/commmit_check.sh\",\"script_repository\":{\"id\":595,\"full_name\":\"DevIT/hooks\",\"url\":\"https://github.example.com/api/v3/repos/DevIT/hooks\",\"html_url\":\"https://github.example.com/DevIT/hooks\"},\"environment\":{\"id\":2,\"name\":\"DevTools Hook Env\",\"image_url\":\"https://my_file_server/path/to/devtools_env.tar.gz\",\"url\":\"https://github.example.com/api/v3/admin/pre-receive-environments/2\",\"html_url\":\"https://github.example.com/admin/pre-receive-environments/2\",\"default_environment\":false,\"created_at\":\"2016-05-20T11:35:45-05:00\",\"hooks_count\":1,\"download\":{\"url\":\"https://github.example.com/api/v3/admin/pre-receive-environments/2/downloads/latest\",\"state\":\"success\",\"downloaded_at\":\"2016-05-26T07:42:53-05:00\",\"message\":null}},\"allow_downstream_configuration\":false}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Create a pre-receive hook",
    "scope": "enterpriseAdmin",
    "id": "createPreReceiveHook",
    "method": "POST",
    "url": "/admin/pre-receive-hooks",
    "isDeprecated": false,
    "description": "",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/enterprise-admin/pre_receive_hooks/#create-a-pre-receive-hook",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "name",
        "description": "The name of the hook.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "script",
        "description": "The script that the hook runs.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "script_repository",
        "description": "The GitHub repository where the script is kept.",
        "in": "BODY",
        "type": "object",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "environment",
        "description": "The pre-receive environment where the script is executed.",
        "in": "BODY",
        "type": "object",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "enforcement",
        "description": "The state of enforcement for this hook. default: `disabled`",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "allow_downstream_configuration",
        "description": "Whether enforcement can be overridden at the org or repo level. default: `false`",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 201,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":1,\"name\":\"Check Commits\",\"enforcement\":\"disabled\",\"script\":\"scripts/commmit_check.sh\",\"script_repository\":{\"id\":595,\"full_name\":\"DevIT/hooks\",\"url\":\"https://github.example.com/api/v3/repos/DevIT/hooks\",\"html_url\":\"https://github.example.com/DevIT/hooks\"},\"environment\":{\"id\":2,\"name\":\"DevTools Hook Env\",\"image_url\":\"https://my_file_server/path/to/devtools_env.tar.gz\",\"url\":\"https://github.example.com/api/v3/admin/pre-receive-environments/2\",\"html_url\":\"https://github.example.com/admin/pre-receive-environments/2\",\"default_environment\":false,\"created_at\":\"2016-05-20T11:35:45-05:00\",\"hooks_count\":1,\"download\":{\"url\":\"https://github.example.com/api/v3/admin/pre-receive-environments/2/downloads/latest\",\"state\":\"success\",\"downloaded_at\":\"2016-05-26T07:42:53-05:00\",\"message\":null}},\"allow_downstream_configuration\":false}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Get a single pre-receive hook",
    "scope": "enterpriseAdmin",
    "id": "getPreReceiveHook",
    "method": "GET",
    "url": "/admin/pre-receive-hooks/{pre_receive_hook_id}",
    "isDeprecated": false,
    "description": "",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/enterprise-admin/pre_receive_hooks/#get-a-single-pre-receive-hook",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "pre_receive_hook_id",
        "description": "pre_receive_hook_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":1,\"name\":\"Check Commits\",\"enforcement\":\"disabled\",\"script\":\"scripts/commmit_check.sh\",\"script_repository\":{\"id\":595,\"full_name\":\"DevIT/hooks\",\"url\":\"https://github.example.com/api/v3/repos/DevIT/hooks\",\"html_url\":\"https://github.example.com/DevIT/hooks\"},\"environment\":{\"id\":2,\"name\":\"DevTools Hook Env\",\"image_url\":\"https://my_file_server/path/to/devtools_env.tar.gz\",\"url\":\"https://github.example.com/api/v3/admin/pre-receive-environments/2\",\"html_url\":\"https://github.example.com/admin/pre-receive-environments/2\",\"default_environment\":false,\"created_at\":\"2016-05-20T11:35:45-05:00\",\"hooks_count\":1,\"download\":{\"url\":\"https://github.example.com/api/v3/admin/pre-receive-environments/2/downloads/latest\",\"state\":\"success\",\"downloaded_at\":\"2016-05-26T07:42:53-05:00\",\"message\":null}},\"allow_downstream_configuration\":false}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Edit a pre-receive hook",
    "scope": "enterpriseAdmin",
    "id": "updatePreReceiveHook",
    "method": "PATCH",
    "url": "/admin/pre_receive_hooks/{pre_receive_hook_id}",
    "isDeprecated": false,
    "description": "",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/enterprise-admin/pre_receive_hooks/#edit-a-pre-receive-hook",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "pre_receive_hook_id",
        "description": "pre_receive_hook_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":1,\"name\":\"Check Commits\",\"enforcement\":\"disabled\",\"script\":\"scripts/commmit_check.sh\",\"script_repository\":{\"id\":595,\"full_name\":\"DevIT/hooks\",\"url\":\"https://github.example.com/api/v3/repos/DevIT/hooks\",\"html_url\":\"https://github.example.com/DevIT/hooks\"},\"environment\":{\"id\":1,\"name\":\"Default\",\"image_url\":\"githubenterprise://internal\",\"url\":\"https://github.example.com/api/v3/admin/pre-receive-environments/1\",\"html_url\":\"https://github.example.com/admin/pre-receive-environments/1\",\"default_environment\":true,\"created_at\":\"2016-05-20T11:35:45-05:00\",\"hooks_count\":1,\"download\":{\"url\":\"https://github.example.com/api/v3/admin/pre-receive-environments/1/downloads/latest\",\"state\":\"success\",\"downloaded_at\":\"2016-05-26T07:42:53-05:00\",\"message\":null}},\"allow_downstream_configuration\":true}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Delete a pre-receive hook",
    "scope": "enterpriseAdmin",
    "id": "deletePreReceiveHook",
    "method": "DELETE",
    "url": "/admin/pre_receive_hooks/{pre_receive_hook_id}",
    "isDeprecated": false,
    "description": "",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/enterprise-admin/pre_receive_hooks/#delete-a-pre-receive-hook",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "pre_receive_hook_id",
        "description": "pre_receive_hook_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [],
    "renamed": null
  },
  {
    "name": "List personal access tokens",
    "scope": "enterpriseAdmin",
    "id": "listPersonalAccessTokens",
    "method": "GET",
    "url": "/admin/tokens",
    "isDeprecated": false,
    "description": "Lists personal access tokens for all users, including admin users.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/enterprise-admin/users/#list-personal-access-tokens",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"id\":2,\"url\":\"https://enterprise.octocat.com/api/v3/authorizations/2\",\"app\":{\"name\":\"My personal access token\",\"url\":\"https://developer.github.com/enterprise/v3/enterprise-admin/users/#list-personal-access-tokens\",\"client_id\":\"00000000000000000000\"},\"token\":\"\",\"hashed_token\":\"23cffb2fab1b0a62747863eba88cb9327e561f2f7a0c8661c0d9b83146cb8d45\",\"token_last_eight\":\"848f9f8a\",\"note\":\"My personal access token\",\"note_url\":null,\"created_at\":\"2019-04-24T21:49:02Z\",\"updated_at\":\"2019-04-24T21:49:02Z\",\"scopes\":[\"admin:business\",\"admin:gpg_key\",\"admin:org\",\"admin:org_hook\",\"admin:pre_receive_hook\",\"admin:public_key\",\"admin:repo_hook\",\"delete_repo\",\"gist\",\"notifications\",\"repo\",\"user\",\"write:discussion\"],\"fingerprint\":null}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Delete a personal access token",
    "scope": "enterpriseAdmin",
    "id": "deletePersonalAccessToken",
    "method": "DELETE",
    "url": "/admin/tokens/{token_id}",
    "isDeprecated": false,
    "description": "Deletes a personal access token. Returns a `403 - Forbidden` status when a personal access token is in use. For example, if you access this endpoint with the same personal access token that you are trying to delete, you will receive this error.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/enterprise-admin/users/#delete-a-personal-access-token",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "token_id",
        "description": "token_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [],
    "renamed": null
  },
  {
    "name": "Create a new user",
    "scope": "enterpriseAdmin",
    "id": "createUser",
    "method": "POST",
    "url": "/admin/users",
    "isDeprecated": false,
    "description": "If an external authentication mechanism is used, the login name should match the login name in the external system. If you are using LDAP authentication, you should also [update the LDAP mapping](https://developer.github.com/enterprise/2.17/v3/enterprise-admin/ldap/#update-ldap-mapping-for-a-user) for the user.\n\nThe login name will be normalized to only contain alphanumeric characters or single hyphens. For example, if you send `\"octo_cat\"` as the login, a user named `\"octo-cat\"` will be created.\n\nIf the login name or email address is already associated with an account, the server will return a `422` response.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/enterprise-admin/users/#create-a-new-user",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "login",
        "description": "The user's username.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "email",
        "description": "**Required for built-in authentication.** The user's email address. This parameter can be omitted when using CAS, LDAP, or SAML. For details on built-in and centrally-managed authentication, see the the [GitHub Enterprise Server authentication guide](https://help.github.com/enterprise/2.17/admin/guides/user-management/authenticating-users-for-your-github-enterprise-server-instance/).",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 201,
        "description": "response",
        "examples": [
          {
            "data": "{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Rename an existing user",
    "scope": "enterpriseAdmin",
    "id": "renameUser",
    "method": "PATCH",
    "url": "/admin/users/{username}",
    "isDeprecated": false,
    "description": "",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/enterprise-admin/users/#rename-an-existing-user",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "username",
        "description": "username parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "login",
        "description": "The user's new username.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 202,
        "description": "response",
        "examples": [
          {
            "data": "{\"message\":\"Job queued to rename user. It may take a few minutes to complete.\",\"url\":\"https://api.github.com/user/1\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Delete a user",
    "scope": "enterpriseAdmin",
    "id": "deleteUser",
    "method": "DELETE",
    "url": "/admin/users/{username}",
    "isDeprecated": false,
    "description": "Deleting a user will delete all their repositories, gists, applications, and personal settings. [Suspending a user](https://developer.github.com/enterprise/2.17/v3/enterprise-admin/users/#suspend-a-user) is often a better option.\n\nYou can delete any user account except your own.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/enterprise-admin/users/#delete-a-user",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "username",
        "description": "username parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [],
    "renamed": null
  },
  {
    "name": "Create an impersonation OAuth token",
    "scope": "enterpriseAdmin",
    "id": "createImpersonationOAuthToken",
    "method": "POST",
    "url": "/admin/users/{username}/authorizations",
    "isDeprecated": false,
    "description": "",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/enterprise-admin/users/#create-an-impersonation-oauth-token",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "username",
        "description": "username parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "scopes",
        "description": "A list of [scopes](https://developer.github.com/enterprise/2.17/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).",
        "in": "BODY",
        "type": "string[]",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 201,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":1,\"url\":\"https://api.github.com/authorizations/1\",\"scopes\":[\"public_repo\"],\"token\":\"abcdefgh12345678\",\"token_last_eight\":\"12345678\",\"hashed_token\":\"25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8\",\"app\":{\"url\":\"http://my-github-app.com\",\"name\":\"my github app\",\"client_id\":\"abcde12345fghij67890\"},\"note\":\"optional note\",\"note_url\":\"http://optional/note/url\",\"updated_at\":\"2011-09-06T20:39:23Z\",\"created_at\":\"2011-09-06T17:26:27Z\",\"fingerprint\":\"jklmnop12345678\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Delete an impersonation OAuth token",
    "scope": "enterpriseAdmin",
    "id": "deleteImpersonationOAuthToken",
    "method": "DELETE",
    "url": "/admin/users/{username}/authorizations",
    "isDeprecated": false,
    "description": "",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/enterprise-admin/users/#delete-an-impersonation-oauth-token",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "username",
        "description": "username parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [],
    "renamed": null
  },
  {
    "name": "Get the authenticated GitHub App",
    "scope": "apps",
    "id": "getAuthenticated",
    "method": "GET",
    "url": "/app",
    "isDeprecated": false,
    "description": "Returns the GitHub App associated with the authentication credentials used. To see how many app installations are associated with this GitHub App, see the `installations_count` in the response. For more details about your app's installations, see the \"[List installations](https://developer.github.com/enterprise/2.17/v3/apps/#list-installations)\" endpoint.\n\nYou must use a [JWT](https://developer.github.com/enterprise/2.17/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/apps/#get-the-authenticated-github-app",
    "previews": [{ "name": "machine-man" }],
    "headers": [
      {
        "name": "accept",
        "value": "application/vnd.github.machine-man-preview+json"
      }
    ],
    "parameters": [],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":1,\"slug\":\"octoapp\",\"node_id\":\"MDExOkludGVncmF0aW9uMQ==\",\"owner\":{\"login\":\"github\",\"id\":1,\"node_id\":\"MDEyOk9yZ2FuaXphdGlvbjE=\",\"url\":\"https://api.github.com/orgs/github\",\"repos_url\":\"https://api.github.com/orgs/github/repos\",\"events_url\":\"https://api.github.com/orgs/github/events\",\"hooks_url\":\"https://api.github.com/orgs/github/hooks\",\"issues_url\":\"https://api.github.com/orgs/github/issues\",\"members_url\":\"https://api.github.com/orgs/github/members{/member}\",\"public_members_url\":\"https://api.github.com/orgs/github/public_members{/member}\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"description\":\"A great organization\"},\"name\":\"Octocat App\",\"description\":\"\",\"external_url\":\"https://example.com\",\"html_url\":\"https://github.com/apps/octoapp\",\"created_at\":\"2017-07-08T16:18:44-04:00\",\"updated_at\":\"2017-07-08T16:18:44-04:00\",\"permissions\":{\"metadata\":\"read\",\"contents\":\"read\",\"issues\":\"write\",\"single_file\":\"write\"},\"events\":[\"push\",\"pull_request\"],\"installations_count\":3}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Create a GitHub App from a manifest",
    "scope": "apps",
    "id": "createFromManifest",
    "method": "POST",
    "url": "/app-manifests/{code}/conversions",
    "isDeprecated": false,
    "description": "Use this endpoint to complete the handshake necessary when implementing the [GitHub App Manifest flow](https://developer.github.com/enterprise/2.17/apps/building-github-apps/creating-github-apps-from-a-manifest/). When you create a GitHub App with the manifest flow, you receive a temporary `code` used to retrieve the GitHub App's `id`, `pem` (private key), and `webhook_secret`.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/apps/#create-a-github-app-from-a-manifest",
    "previews": [{ "name": "fury" }],
    "headers": [
      { "name": "accept", "value": "application/vnd.github.fury-preview+json" }
    ],
    "parameters": [
      {
        "name": "code",
        "description": "code parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":1,\"node_id\":\"MDM6QXBwNTk=\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"name\":\"octoapp\",\"description\":null,\"external_url\":\"https://www.example.com\",\"html_url\":\"https://github.com/apps/octoapp\",\"created_at\":\"2018-09-13T12:28:37Z\",\"updated_at\":\"2018-09-13T12:28:37Z\",\"client_id\":\"Iv1.8a61f9b3a7aba766\",\"client_secret\":\"1726be1638095a19edd134c77bde3aa2ece1e5d8\",\"webhook_secret\":\"e340154128314309424b7c8e90325147d99fdafa\",\"pem\":\"-----BEGIN RSA PRIVATE KEY-----\\nMIIEowIBAAKCAQEAuEPzOUE+kiEH1WLiMeBytTEF856j0hOVcSUSUkZxKvqczkWM\\n9vo1gDyC7ZXhdH9fKh32aapba3RSsp4ke+giSmYTk2mGR538ShSDxh0OgpJmjiKP\\nX0Bj4j5sFqfXuCtl9SkH4iueivv4R53ktqM+n6hk98l6hRwC39GVIblAh2lEM4L/\\n6WvYwuQXPMM5OG2Ryh2tDZ1WS5RKfgq+9ksNJ5Q9UtqtqHkO+E63N5OK9sbzpUUm\\noNaOl3udTlZD3A8iqwMPVxH4SxgATBPAc+bmjk6BMJ0qIzDcVGTrqrzUiywCTLma\\nszdk8GjzXtPDmuBgNn+o6s02qVGpyydgEuqmTQIDAQABAoIBACL6AvkjQVVLn8kJ\\ndBYznJJ4M8ECo+YEgaFwgAHODT0zRQCCgzd+Vxl4YwHmKV2Lr+y2s0drZt8GvYva\\nKOK8NYYZyi15IlwFyRXmvvykF1UBpSXluYFDH7KaVroWMgRreHcIys5LqVSIb6Bo\\ngDmK0yBLPp8qR29s2b7ScZRtLaqGJiX+j55rNzrZwxHkxFHyG9OG+u9IsBElcKCP\\nkYCVE8ZdYexfnKOZbgn2kZB9qu0T/Mdvki8yk3I2bI6xYO24oQmhnT36qnqWoCBX\\nNuCNsBQgpYZeZET8mEAUmo9d+ABmIHIvSs005agK8xRaP4+6jYgy6WwoejJRF5yd\\nNBuF7aECgYEA50nZ4FiZYV0vcJDxFYeY3kYOvVuKn8OyW+2rg7JIQTremIjv8FkE\\nZnwuF9ZRxgqLxUIfKKfzp/5l5LrycNoj2YKfHKnRejxRWXqG+ZETfxxlmlRns0QG\\nJ4+BYL0CoanDSeA4fuyn4Bv7cy/03TDhfg/Uq0Aeg+hhcPE/vx3ebPsCgYEAy/Pv\\neDLssOSdeyIxf0Brtocg6aPXIVaLdus+bXmLg77rJIFytAZmTTW8SkkSczWtucI3\\nFI1I6sei/8FdPzAl62/JDdlf7Wd9K7JIotY4TzT7Tm7QU7xpfLLYIP1bOFjN81rk\\n77oOD4LsXcosB/U6s1blPJMZ6AlO2EKs10UuR1cCgYBipzuJ2ADEaOz9RLWwi0AH\\nPza2Sj+c2epQD9ZivD7Zo/Sid3ZwvGeGF13JyR7kLEdmAkgsHUdu1rI7mAolXMaB\\n1pdrsHureeLxGbRM6za3tzMXWv1Il7FQWoPC8ZwXvMOR1VQDv4nzq7vbbA8z8c+c\\n57+8tALQHOTDOgQIzwK61QKBgERGVc0EJy4Uag+VY8J4m1ZQKBluqo7TfP6DQ7O8\\nM5MX73maB/7yAX8pVO39RjrhJlYACRZNMbK+v/ckEQYdJSSKmGCVe0JrGYDuPtic\\nI9+IGfSorf7KHPoMmMN6bPYQ7Gjh7a++tgRFTMEc8956Hnt4xGahy9NcglNtBpVN\\n6G8jAoGBAMCh028pdzJa/xeBHLLaVB2sc0Fe7993WlsPmnVE779dAz7qMscOtXJK\\nfgtriltLSSD6rTA9hUAsL/X62rY0wdXuNdijjBb/qvrx7CAV6i37NK1CjABNjsfG\\nZM372Ac6zc1EqSrid2IjET1YqyIW2KGLI1R2xbQc98UGlt48OdWu\\n-----END RSA PRIVATE KEY-----\\n\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "List installations",
    "scope": "apps",
    "id": "listInstallations",
    "method": "GET",
    "url": "/app/installations",
    "isDeprecated": false,
    "description": "You must use a [JWT](https://developer.github.com/enterprise/2.17/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.\n\nThe permissions the installation has are included under the `permissions` key.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/apps/#list-installations",
    "previews": [{ "name": "machine-man" }],
    "headers": [
      {
        "name": "accept",
        "value": "application/vnd.github.machine-man-preview+json"
      }
    ],
    "parameters": [
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "The permissions the installation has are included under the `permissions` key.",
        "examples": [
          {
            "data": "[{\"id\":1,\"account\":{\"login\":\"github\",\"id\":1,\"node_id\":\"MDEyOk9yZ2FuaXphdGlvbjE=\",\"url\":\"https://api.github.com/orgs/github\",\"repos_url\":\"https://api.github.com/orgs/github/repos\",\"events_url\":\"https://api.github.com/orgs/github/events\",\"hooks_url\":\"https://api.github.com/orgs/github/hooks\",\"issues_url\":\"https://api.github.com/orgs/github/issues\",\"members_url\":\"https://api.github.com/orgs/github/members{/member}\",\"public_members_url\":\"https://api.github.com/orgs/github/public_members{/member}\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"description\":\"A great organization\"},\"access_tokens_url\":\"https://api.github.com/installations/1/access_tokens\",\"repositories_url\":\"https://api.github.com/installation/repositories\",\"html_url\":\"https://github.com/organizations/github/settings/installations/1\",\"app_id\":1,\"target_id\":1,\"target_type\":\"Organization\",\"permissions\":{\"metadata\":\"read\",\"contents\":\"read\",\"issues\":\"write\",\"single_file\":\"write\"},\"events\":[\"push\",\"pull_request\"],\"single_file_name\":\"config.yml\",\"repository_selection\":\"selected\"}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Get an installation",
    "scope": "apps",
    "id": "getInstallation",
    "method": "GET",
    "url": "/app/installations/{installation_id}",
    "isDeprecated": false,
    "description": "You must use a [JWT](https://developer.github.com/enterprise/2.17/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/apps/#get-an-installation",
    "previews": [{ "name": "machine-man" }],
    "headers": [
      {
        "name": "accept",
        "value": "application/vnd.github.machine-man-preview+json"
      }
    ],
    "parameters": [
      {
        "name": "installation_id",
        "description": "installation_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":1,\"account\":{\"login\":\"github\",\"id\":1,\"node_id\":\"MDEyOk9yZ2FuaXphdGlvbjE=\",\"url\":\"https://api.github.com/orgs/github\",\"repos_url\":\"https://api.github.com/orgs/github/repos\",\"events_url\":\"https://api.github.com/orgs/github/events\",\"hooks_url\":\"https://api.github.com/orgs/github/hooks\",\"issues_url\":\"https://api.github.com/orgs/github/issues\",\"members_url\":\"https://api.github.com/orgs/github/members{/member}\",\"public_members_url\":\"https://api.github.com/orgs/github/public_members{/member}\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"description\":\"A great organization\"},\"access_tokens_url\":\"https://api.github.com/installations/1/access_tokens\",\"repositories_url\":\"https://api.github.com/installation/repositories\",\"html_url\":\"https://github.com/organizations/github/settings/installations/1\",\"app_id\":1,\"target_id\":1,\"target_type\":\"Organization\",\"permissions\":{\"metadata\":\"read\",\"contents\":\"read\",\"issues\":\"write\",\"single_file\":\"write\"},\"events\":[\"push\",\"pull_request\"],\"single_file_name\":\"config.yml\",\"repository_selection\":\"selected\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Delete an installation",
    "scope": "apps",
    "id": "deleteInstallation",
    "method": "DELETE",
    "url": "/app/installations/{installation_id}",
    "isDeprecated": false,
    "description": "Uninstalls a GitHub App on a user, organization, or business account.\n\nYou must use a [JWT](https://developer.github.com/enterprise/2.17/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/apps/#delete-an-installation",
    "previews": [{ "name": "gambit" }, { "name": "machine-man" }],
    "headers": [
      {
        "name": "accept",
        "value": "application/vnd.github.gambit-preview+json,application/vnd.github.machine-man-preview+json"
      }
    ],
    "parameters": [
      {
        "name": "installation_id",
        "description": "installation_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [],
    "renamed": null
  },
  {
    "name": "Create a new installation token",
    "scope": "apps",
    "id": "createInstallationToken",
    "method": "POST",
    "url": "/app/installations/{installation_id}/access_tokens",
    "isDeprecated": false,
    "description": "Creates an installation access token that enables a GitHub App to make authenticated API requests for the app's installation on an organization or individual account. Installation tokens expire one hour from the time you create them. Using an expired token produces a status code of `401 - Unauthorized`, and requires creating a new installation token.\n\nBy default the installation token has access to all repositories that the installation can access. To restrict the access to specific repositories, you can provide the `repository_ids` when creating the token. When you omit `repository_ids`, the response does not contain the `repositories` key.\n\nYou must use a [JWT](https://developer.github.com/enterprise/2.17/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.\n\nThis example grants the token \"Read and write\" permission to `issues` and \"Read\" permission to `contents`, and restricts the token's access to the repository with an `id` of 1296269.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/apps/#create-a-new-installation-token",
    "previews": [{ "name": "machine-man" }],
    "headers": [
      {
        "name": "accept",
        "value": "application/vnd.github.machine-man-preview+json"
      }
    ],
    "parameters": [
      {
        "name": "installation_id",
        "description": "installation_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repository_ids",
        "description": "The `id`s of the repositories that the installation token can access. Providing repository `id`s restricts the access of an installation token to specific repositories. You can use the \"[List repositories](https://developer.github.com/enterprise/2.17/v3/apps/installations/#list-repositories)\" endpoint to get the `id` of all repositories that an installation can access. For example, you can select specific repositories when creating an installation token to restrict the number of repositories that can be cloned using the token.",
        "in": "BODY",
        "type": "integer[]",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "permissions",
        "description": "The permissions granted to the access token. The permissions object includes the permission names and their access type. For a complete list of permissions and allowable values, see \"[GitHub App permissions](https://developer.github.com/enterprise/2.17/apps/building-github-apps/creating-github-apps-using-url-parameters/#github-app-permissions).\"",
        "in": "BODY",
        "type": "object",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 201,
        "description": "response",
        "examples": [
          {
            "data": "{\"token\":\"v1.1f699f1069f60xxx\",\"expires_at\":\"2016-07-11T22:14:10Z\",\"repositories\":[{\"id\":1296269,\"node_id\":\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\"name\":\"Hello-World\",\"full_name\":\"octocat/Hello-World\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"private\":false,\"html_url\":\"https://github.com/octocat/Hello-World\",\"description\":\"This your first repo!\",\"fork\":false,\"url\":\"https://api.github.com/repos/octocat/Hello-World\",\"archive_url\":\"http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\"assignees_url\":\"http://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\"blobs_url\":\"http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\"branches_url\":\"http://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\"collaborators_url\":\"http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\"comments_url\":\"http://api.github.com/repos/octocat/Hello-World/comments{/number}\",\"commits_url\":\"http://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\"compare_url\":\"http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\"contents_url\":\"http://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\"contributors_url\":\"http://api.github.com/repos/octocat/Hello-World/contributors\",\"deployments_url\":\"http://api.github.com/repos/octocat/Hello-World/deployments\",\"downloads_url\":\"http://api.github.com/repos/octocat/Hello-World/downloads\",\"events_url\":\"http://api.github.com/repos/octocat/Hello-World/events\",\"forks_url\":\"http://api.github.com/repos/octocat/Hello-World/forks\",\"git_commits_url\":\"http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\"git_refs_url\":\"http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\"git_tags_url\":\"http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\"git_url\":\"git:github.com/octocat/Hello-World.git\",\"issue_comment_url\":\"http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\"issue_events_url\":\"http://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\"issues_url\":\"http://api.github.com/repos/octocat/Hello-World/issues{/number}\",\"keys_url\":\"http://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\"labels_url\":\"http://api.github.com/repos/octocat/Hello-World/labels{/name}\",\"languages_url\":\"http://api.github.com/repos/octocat/Hello-World/languages\",\"merges_url\":\"http://api.github.com/repos/octocat/Hello-World/merges\",\"milestones_url\":\"http://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\"notifications_url\":\"http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\"pulls_url\":\"http://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\"releases_url\":\"http://api.github.com/repos/octocat/Hello-World/releases{/id}\",\"ssh_url\":\"git@github.com:octocat/Hello-World.git\",\"stargazers_url\":\"http://api.github.com/repos/octocat/Hello-World/stargazers\",\"statuses_url\":\"http://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\"subscribers_url\":\"http://api.github.com/repos/octocat/Hello-World/subscribers\",\"subscription_url\":\"http://api.github.com/repos/octocat/Hello-World/subscription\",\"tags_url\":\"http://api.github.com/repos/octocat/Hello-World/tags\",\"teams_url\":\"http://api.github.com/repos/octocat/Hello-World/teams\",\"trees_url\":\"http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\"clone_url\":\"https://github.com/octocat/Hello-World.git\",\"mirror_url\":\"git:git.example.com/octocat/Hello-World\",\"hooks_url\":\"http://api.github.com/repos/octocat/Hello-World/hooks\",\"svn_url\":\"https://svn.github.com/octocat/Hello-World\",\"homepage\":\"https://github.com\",\"language\":null,\"forks_count\":9,\"stargazers_count\":80,\"watchers_count\":80,\"size\":108,\"default_branch\":\"master\",\"open_issues_count\":0,\"topics\":[\"octocat\",\"atom\",\"electron\",\"api\"],\"has_issues\":true,\"has_projects\":true,\"has_wiki\":true,\"has_pages\":false,\"has_downloads\":true,\"archived\":false,\"disabled\":false,\"pushed_at\":\"2011-01-26T19:06:43Z\",\"created_at\":\"2011-01-26T19:01:12Z\",\"updated_at\":\"2011-01-26T19:14:43Z\",\"permissions\":{\"admin\":false,\"push\":false,\"pull\":true},\"allow_rebase_merge\":true,\"allow_squash_merge\":true,\"allow_merge_commit\":true,\"subscribers_count\":42,\"network_count\":0,\"anonymous_access_enabled\":false}]}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "List your grants",
    "scope": "oauthAuthorizations",
    "id": "listGrants",
    "method": "GET",
    "url": "/applications/grants",
    "isDeprecated": false,
    "description": "You can use this API to list the set of OAuth applications that have been granted access to your account. Unlike the [list your authorizations](https://developer.github.com/enterprise/2.17/v3/oauth_authorizations/#list-your-authorizations) API, this API does not manage individual tokens. This API will return one entry for each OAuth application that has been granted access to your account, regardless of the number of tokens an application has generated for your user. The list of OAuth applications returned matches what is shown on [the application authorizations settings screen within GitHub](https://github.com/settings/applications#authorized). The `scopes` returned are the union of scopes authorized for the application. For example, if an application has one token with `repo` scope and another token with `user` scope, the grant will return `[\"repo\", \"user\"]`.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/oauth_authorizations/#list-your-grants",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"id\":1,\"url\":\"https://api.github.com/applications/grants/1\",\"app\":{\"url\":\"http://my-github-app.com\",\"name\":\"my github app\",\"client_id\":\"abcde12345fghij67890\"},\"created_at\":\"2011-09-06T17:26:27Z\",\"updated_at\":\"2011-09-06T20:39:23Z\",\"scopes\":[\"public_repo\"]}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Get a single grant",
    "scope": "oauthAuthorizations",
    "id": "getGrant",
    "method": "GET",
    "url": "/applications/grants/{grant_id}",
    "isDeprecated": false,
    "description": "",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/oauth_authorizations/#get-a-single-grant",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "grant_id",
        "description": "grant_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":1,\"url\":\"https://api.github.com/applications/grants/1\",\"app\":{\"url\":\"http://my-github-app.com\",\"name\":\"my github app\",\"client_id\":\"abcde12345fghij67890\"},\"created_at\":\"2011-09-06T17:26:27Z\",\"updated_at\":\"2011-09-06T20:39:23Z\",\"scopes\":[\"public_repo\"]}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Delete a grant",
    "scope": "oauthAuthorizations",
    "id": "deleteGrant",
    "method": "DELETE",
    "url": "/applications/grants/{grant_id}",
    "isDeprecated": false,
    "description": "Deleting an OAuth application's grant will also delete all OAuth tokens associated with the application for your user. Once deleted, the application has no access to your account and is no longer listed on [the application authorizations settings screen within GitHub](https://github.com/settings/applications#authorized).",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/oauth_authorizations/#delete-a-grant",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "grant_id",
        "description": "grant_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [],
    "renamed": null
  },
  {
    "name": "Revoke a grant for an application",
    "scope": "oauthAuthorizations",
    "id": "revokeGrantForApplication",
    "method": "DELETE",
    "url": "/applications/{client_id}/grants/{access_token}",
    "isDeprecated": false,
    "description": "OAuth application owners can revoke a grant for their OAuth application and a specific user. You must use [Basic Authentication](https://developer.github.com/enterprise/2.17/v3/auth#basic-authentication) for this method, where the username is the OAuth application `client_id` and the password is its `client_secret`. You must also provide a valid token as `:access_token` and the grant for the token's owner will be deleted.\n\nDeleting an OAuth application's grant will also delete all OAuth tokens associated with the application for the user. Once deleted, the application will have no access to the user's account and will no longer be listed on [the application authorizations settings screen within GitHub](https://github.com/settings/applications#authorized).",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/oauth_authorizations/#revoke-a-grant-for-an-application",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "client_id",
        "description": "client_id parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "access_token",
        "description": "access_token parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [],
    "renamed": null
  },
  {
    "name": "Check an authorization",
    "scope": "oauthAuthorizations",
    "id": "checkAuthorization",
    "method": "GET",
    "url": "/applications/{client_id}/tokens/{access_token}",
    "isDeprecated": false,
    "description": "OAuth applications can use a special API method for checking OAuth token validity without running afoul of normal rate limits for failed login attempts. Authentication works differently with this particular endpoint. You must use [Basic Authentication](https://developer.github.com/enterprise/2.17/v3/auth#basic-authentication) when accessing it, where the username is the OAuth application `client_id` and the password is its `client_secret`. Invalid tokens will return `404 NOT FOUND`.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/oauth_authorizations/#check-an-authorization",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "client_id",
        "description": "client_id parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "access_token",
        "description": "access_token parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":1,\"url\":\"https://api.github.com/authorizations/1\",\"scopes\":[\"public_repo\"],\"token\":\"abcdefgh12345678\",\"token_last_eight\":\"12345678\",\"hashed_token\":\"25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8\",\"app\":{\"url\":\"http://my-github-app.com\",\"name\":\"my github app\",\"client_id\":\"abcde12345fghij67890\"},\"note\":\"optional note\",\"note_url\":\"http://optional/note/url\",\"updated_at\":\"2011-09-06T20:39:23Z\",\"created_at\":\"2011-09-06T17:26:27Z\",\"fingerprint\":\"jklmnop12345678\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false}}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Reset an authorization",
    "scope": "oauthAuthorizations",
    "id": "resetAuthorization",
    "method": "POST",
    "url": "/applications/{client_id}/tokens/{access_token}",
    "isDeprecated": false,
    "description": "OAuth applications can use this API method to reset a valid OAuth token without end user involvement. Applications must save the \"token\" property in the response, because changes take effect immediately. You must use [Basic Authentication](https://developer.github.com/enterprise/2.17/v3/auth#basic-authentication) when accessing it, where the username is the OAuth application `client_id` and the password is its `client_secret`. Invalid tokens will return `404 NOT FOUND`.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/oauth_authorizations/#reset-an-authorization",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "client_id",
        "description": "client_id parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "access_token",
        "description": "access_token parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":1,\"url\":\"https://api.github.com/authorizations/1\",\"scopes\":[\"public_repo\"],\"token\":\"abcdefgh12345678\",\"token_last_eight\":\"12345678\",\"hashed_token\":\"25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8\",\"app\":{\"url\":\"http://my-github-app.com\",\"name\":\"my github app\",\"client_id\":\"abcde12345fghij67890\"},\"note\":\"optional note\",\"note_url\":\"http://optional/note/url\",\"updated_at\":\"2011-09-06T20:39:23Z\",\"created_at\":\"2011-09-06T17:26:27Z\",\"fingerprint\":\"jklmnop12345678\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false}}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Revoke an authorization for an application",
    "scope": "oauthAuthorizations",
    "id": "revokeAuthorizationForApplication",
    "method": "DELETE",
    "url": "/applications/{client_id}/tokens/{access_token}",
    "isDeprecated": false,
    "description": "OAuth application owners can revoke a single token for an OAuth application. You must use [Basic Authentication](https://developer.github.com/enterprise/2.17/v3/auth#basic-authentication) for this method, where the username is the OAuth application `client_id` and the password is its `client_secret`.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/oauth_authorizations/#revoke-an-authorization-for-an-application",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "client_id",
        "description": "client_id parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "access_token",
        "description": "access_token parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [],
    "renamed": null
  },
  {
    "name": "Get a single GitHub App",
    "scope": "apps",
    "id": "getBySlug",
    "method": "GET",
    "url": "/apps/{app_slug}",
    "isDeprecated": false,
    "description": "**Note**: The `:app_slug` is just the URL-friendly name of your GitHub App. You can find this on the settings page for your GitHub App (e.g., `https://github.com/settings/apps/:app_slug`).\n\nIf the GitHub App you specify is public, you can access this endpoint without authenticating. If the GitHub App you specify is private, you must authenticate with a [personal access token](https://help.github.com/articles/creating-a-personal-access-token-for-the-command-line/) or an [installation access token](https://developer.github.com/enterprise/2.17/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-an-installation) to access this endpoint.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/apps/#get-a-single-github-app",
    "previews": [{ "name": "machine-man" }],
    "headers": [
      {
        "name": "accept",
        "value": "application/vnd.github.machine-man-preview+json"
      }
    ],
    "parameters": [
      {
        "name": "app_slug",
        "description": "app_slug parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":1,\"node_id\":\"MDExOkludGVncmF0aW9uMQ==\",\"owner\":{\"login\":\"github\",\"id\":1,\"node_id\":\"MDEyOk9yZ2FuaXphdGlvbjE=\",\"url\":\"https://api.github.com/orgs/github\",\"repos_url\":\"https://api.github.com/orgs/github/repos\",\"events_url\":\"https://api.github.com/orgs/github/events\",\"hooks_url\":\"https://api.github.com/orgs/github/hooks\",\"issues_url\":\"https://api.github.com/orgs/github/issues\",\"members_url\":\"https://api.github.com/orgs/github/members{/member}\",\"public_members_url\":\"https://api.github.com/orgs/github/public_members{/member}\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"description\":\"A great organization\"},\"name\":\"Octocat App\",\"description\":\"\",\"external_url\":\"https://example.com\",\"html_url\":\"https://github.com/apps/octoapp\",\"created_at\":\"2017-07-08T16:18:44-04:00\",\"updated_at\":\"2017-07-08T16:18:44-04:00\",\"permissions\":{\"metadata\":\"read\",\"contents\":\"read\",\"issues\":\"write\",\"single_file\":\"write\"},\"events\":[\"push\",\"pull_request\"]}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "List your authorizations",
    "scope": "oauthAuthorizations",
    "id": "listAuthorizations",
    "method": "GET",
    "url": "/authorizations",
    "isDeprecated": false,
    "description": "",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/oauth_authorizations/#list-your-authorizations",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"id\":1,\"url\":\"https://api.github.com/authorizations/1\",\"scopes\":[\"public_repo\"],\"token\":\"\",\"token_last_eight\":\"12345678\",\"hashed_token\":\"25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8\",\"app\":{\"url\":\"http://my-github-app.com\",\"name\":\"my github app\",\"client_id\":\"abcde12345fghij67890\"},\"note\":\"optional note\",\"note_url\":\"http://optional/note/url\",\"updated_at\":\"2011-09-06T20:39:23Z\",\"created_at\":\"2011-09-06T17:26:27Z\",\"fingerprint\":\"jklmnop12345678\"}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Create a new authorization",
    "scope": "oauthAuthorizations",
    "id": "createAuthorization",
    "method": "POST",
    "url": "/authorizations",
    "isDeprecated": false,
    "description": "Creates OAuth tokens using [Basic Authentication](https://developer.github.com/enterprise/2.17/v3/auth#basic-authentication). If you have two-factor authentication setup, Basic Authentication for this endpoint requires that you use a one-time password (OTP) and your username and password instead of tokens. For more information, see \"[Working with two-factor authentication](https://developer.github.com/enterprise/2.17/v3/auth/#working-with-two-factor-authentication).\"\n\nYou can use this endpoint to create multiple OAuth tokens instead of implementing the [web flow](https://developer.github.com/enterprise/2.17/apps/building-oauth-apps/authorizing-oauth-apps/).\n\nTo create tokens for a particular OAuth application using this endpoint, you must authenticate as the user you want to create an authorization for and provide the app's client ID and secret, found on your OAuth application's settings page. If your OAuth application intends to create multiple tokens for one user, use `fingerprint` to differentiate between them.\n\nYou can also create tokens on GitHub from the [personal access tokens settings](https://github.com/settings/tokens) page. Read more about these tokens in [the GitHub Help documentation](https://help.github.com/articles/creating-an-access-token-for-command-line-use).",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/oauth_authorizations/#create-a-new-authorization",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "scopes",
        "description": "A list of scopes that this authorization is in.",
        "in": "BODY",
        "type": "string[]",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "note",
        "description": "A note to remind you what the OAuth token is for. Tokens not associated with a specific OAuth application (i.e. personal access tokens) must have a unique note.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "note_url",
        "description": "A URL to remind you what app the OAuth token is for.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "client_id",
        "description": "The 20 character OAuth app client key for which to create the token.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "client_secret",
        "description": "The 40 character OAuth app client secret for which to create the token.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "fingerprint",
        "description": "A unique string to distinguish an authorization from others created for the same client ID and user.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 201,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":1,\"url\":\"https://api.github.com/authorizations/1\",\"scopes\":[\"public_repo\"],\"token\":\"abcdefgh12345678\",\"token_last_eight\":\"12345678\",\"hashed_token\":\"25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8\",\"app\":{\"url\":\"http://my-github-app.com\",\"name\":\"my github app\",\"client_id\":\"abcde12345fghij67890\"},\"note\":\"optional note\",\"note_url\":\"http://optional/note/url\",\"updated_at\":\"2011-09-06T20:39:23Z\",\"created_at\":\"2011-09-06T17:26:27Z\",\"fingerprint\":\"\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Get-or-create an authorization for a specific app",
    "scope": "oauthAuthorizations",
    "id": "getOrCreateAuthorizationForApp",
    "method": "PUT",
    "url": "/authorizations/clients/{client_id}",
    "isDeprecated": false,
    "description": "Creates a new authorization for the specified OAuth application, only if an authorization for that application doesn't already exist for the user. The URL includes the 20 character client ID for the OAuth app that is requesting the token. It returns the user's existing authorization for the application if one is present. Otherwise, it creates and returns a new one.\n\nIf you have two-factor authentication setup, Basic Authentication for this endpoint requires that you use a one-time password (OTP) and your username and password instead of tokens. For more information, see \"[Working with two-factor authentication](https://developer.github.com/enterprise/2.17/v3/auth/#working-with-two-factor-authentication).\"",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/oauth_authorizations/#get-or-create-an-authorization-for-a-specific-app",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "client_id",
        "description": "client_id parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "client_secret",
        "description": "The 40 character OAuth app client secret associated with the client ID specified in the URL.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "scopes",
        "description": "A list of scopes that this authorization is in.",
        "in": "BODY",
        "type": "string[]",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "note",
        "description": "A note to remind you what the OAuth token is for.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "note_url",
        "description": "A URL to remind you what app the OAuth token is for.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "fingerprint",
        "description": "A unique string to distinguish an authorization from others created for the same client and user. If provided, this API is functionally equivalent to [Get-or-create an authorization for a specific app and fingerprint](https://developer.github.com/enterprise/2.17/v3/oauth_authorizations/#get-or-create-an-authorization-for-a-specific-app-and-fingerprint).",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "Response if returning an existing token",
        "examples": [
          {
            "data": "{\"id\":1,\"url\":\"https://api.github.com/authorizations/1\",\"scopes\":[\"public_repo\"],\"token\":\"\",\"token_last_eight\":\"12345678\",\"hashed_token\":\"25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8\",\"app\":{\"url\":\"http://my-github-app.com\",\"name\":\"my github app\",\"client_id\":\"abcde12345fghij67890\"},\"note\":\"optional note\",\"note_url\":\"http://optional/note/url\",\"updated_at\":\"2011-09-06T20:39:23Z\",\"created_at\":\"2011-09-06T17:26:27Z\",\"fingerprint\":\"\"}"
          }
        ]
      },
      {
        "code": 201,
        "description": "Response if returning a new token",
        "examples": [
          {
            "data": "{\"id\":1,\"url\":\"https://api.github.com/authorizations/1\",\"scopes\":[\"public_repo\"],\"token\":\"abcdefgh12345678\",\"token_last_eight\":\"12345678\",\"hashed_token\":\"25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8\",\"app\":{\"url\":\"http://my-github-app.com\",\"name\":\"my github app\",\"client_id\":\"abcde12345fghij67890\"},\"note\":\"optional note\",\"note_url\":\"http://optional/note/url\",\"updated_at\":\"2011-09-06T20:39:23Z\",\"created_at\":\"2011-09-06T17:26:27Z\",\"fingerprint\":\"\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Get-or-create an authorization for a specific app and fingerprint",
    "scope": "oauthAuthorizations",
    "id": "getOrCreateAuthorizationForAppAndFingerprint",
    "method": "PUT",
    "url": "/authorizations/clients/{client_id}/{fingerprint}",
    "isDeprecated": false,
    "description": "This method will create a new authorization for the specified OAuth application, only if an authorization for that application and fingerprint do not already exist for the user. The URL includes the 20 character client ID for the OAuth app that is requesting the token. `fingerprint` is a unique string to distinguish an authorization from others created for the same client ID and user. It returns the user's existing authorization for the application if one is present. Otherwise, it creates and returns a new one.\n\nIf you have two-factor authentication setup, Basic Authentication for this endpoint requires that you use a one-time password (OTP) and your username and password instead of tokens. For more information, see \"[Working with two-factor authentication](https://developer.github.com/enterprise/2.17/v3/auth/#working-with-two-factor-authentication).\"",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/oauth_authorizations/#get-or-create-an-authorization-for-a-specific-app-and-fingerprint",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "client_id",
        "description": "client_id parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "fingerprint",
        "description": "fingerprint parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "client_secret",
        "description": "The 40 character OAuth app client secret associated with the client ID specified in the URL.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "scopes",
        "description": "A list of scopes that this authorization is in.",
        "in": "BODY",
        "type": "string[]",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "note",
        "description": "A note to remind you what the OAuth token is for.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "note_url",
        "description": "A URL to remind you what app the OAuth token is for.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "Response if returning an existing token",
        "examples": [
          {
            "data": "{\"id\":1,\"url\":\"https://api.github.com/authorizations/1\",\"scopes\":[\"public_repo\"],\"token\":\"\",\"token_last_eight\":\"12345678\",\"hashed_token\":\"25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8\",\"app\":{\"url\":\"http://my-github-app.com\",\"name\":\"my github app\",\"client_id\":\"abcde12345fghij67890\"},\"note\":\"optional note\",\"note_url\":\"http://optional/note/url\",\"updated_at\":\"2011-09-06T20:39:23Z\",\"created_at\":\"2011-09-06T17:26:27Z\",\"fingerprint\":\"jklmnop12345678\"}"
          }
        ]
      },
      {
        "code": 201,
        "description": "Response if returning a new token",
        "examples": [
          {
            "data": "{\"id\":1,\"url\":\"https://api.github.com/authorizations/1\",\"scopes\":[\"public_repo\"],\"token\":\"abcdefgh12345678\",\"token_last_eight\":\"12345678\",\"hashed_token\":\"25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8\",\"app\":{\"url\":\"http://my-github-app.com\",\"name\":\"my github app\",\"client_id\":\"abcde12345fghij67890\"},\"note\":\"optional note\",\"note_url\":\"http://optional/note/url\",\"updated_at\":\"2011-09-06T20:39:23Z\",\"created_at\":\"2011-09-06T17:26:27Z\",\"fingerprint\":\"jklmnop12345678\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Get-or-create an authorization for a specific app and fingerprint",
    "scope": "oauthAuthorizations",
    "id": "getOrCreateAuthorizationForAppFingerprint",
    "method": "PUT",
    "url": "/authorizations/clients/{client_id}/{fingerprint}",
    "isDeprecated": false,
    "description": "This method will create a new authorization for the specified OAuth application, only if an authorization for that application and fingerprint do not already exist for the user. The URL includes the 20 character client ID for the OAuth app that is requesting the token. `fingerprint` is a unique string to distinguish an authorization from others created for the same client ID and user. It returns the user's existing authorization for the application if one is present. Otherwise, it creates and returns a new one.\n\nIf you have two-factor authentication setup, Basic Authentication for this endpoint requires that you use a one-time password (OTP) and your username and password instead of tokens. For more information, see \"[Working with two-factor authentication](https://developer.github.com/enterprise/2.17/v3/auth/#working-with-two-factor-authentication).\"",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/oauth_authorizations/#get-or-create-an-authorization-for-a-specific-app-and-fingerprint",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "client_id",
        "description": "client_id parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "fingerprint",
        "description": "fingerprint parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "client_secret",
        "description": "The 40 character OAuth app client secret associated with the client ID specified in the URL.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "scopes",
        "description": "A list of scopes that this authorization is in.",
        "in": "BODY",
        "type": "string[]",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "note",
        "description": "A note to remind you what the OAuth token is for.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "note_url",
        "description": "A URL to remind you what app the OAuth token is for.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "Response if returning an existing token",
        "examples": [
          {
            "data": "{\"id\":1,\"url\":\"https://api.github.com/authorizations/1\",\"scopes\":[\"public_repo\"],\"token\":\"\",\"token_last_eight\":\"12345678\",\"hashed_token\":\"25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8\",\"app\":{\"url\":\"http://my-github-app.com\",\"name\":\"my github app\",\"client_id\":\"abcde12345fghij67890\"},\"note\":\"optional note\",\"note_url\":\"http://optional/note/url\",\"updated_at\":\"2011-09-06T20:39:23Z\",\"created_at\":\"2011-09-06T17:26:27Z\",\"fingerprint\":\"jklmnop12345678\"}"
          }
        ]
      },
      {
        "code": 201,
        "description": "Response if returning a new token",
        "examples": [
          {
            "data": "{\"id\":1,\"url\":\"https://api.github.com/authorizations/1\",\"scopes\":[\"public_repo\"],\"token\":\"abcdefgh12345678\",\"token_last_eight\":\"12345678\",\"hashed_token\":\"25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8\",\"app\":{\"url\":\"http://my-github-app.com\",\"name\":\"my github app\",\"client_id\":\"abcde12345fghij67890\"},\"note\":\"optional note\",\"note_url\":\"http://optional/note/url\",\"updated_at\":\"2011-09-06T20:39:23Z\",\"created_at\":\"2011-09-06T17:26:27Z\",\"fingerprint\":\"jklmnop12345678\"}"
          }
        ]
      }
    ],
    "renamed": {
      "before": {
        "scope": "oauthAuthorizations",
        "id": "getOrCreateAuthorizationForAppFingerprint"
      },
      "after": {
        "scope": "oauthAuthorizations",
        "id": "getOrCreateAuthorizationForAppAndFingerprint"
      },
      "date": "2018-12-27",
      "note": "`idName` changed for \"Get-or-create an authorization for a specific app and fingerprint\". It now includes `-and-`"
    }
  },
  {
    "name": "Get a single authorization",
    "scope": "oauthAuthorizations",
    "id": "getAuthorization",
    "method": "GET",
    "url": "/authorizations/{authorization_id}",
    "isDeprecated": false,
    "description": "",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/oauth_authorizations/#get-a-single-authorization",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "authorization_id",
        "description": "authorization_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":1,\"url\":\"https://api.github.com/authorizations/1\",\"scopes\":[\"public_repo\"],\"token\":\"\",\"token_last_eight\":\"12345678\",\"hashed_token\":\"25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8\",\"app\":{\"url\":\"http://my-github-app.com\",\"name\":\"my github app\",\"client_id\":\"abcde12345fghij67890\"},\"note\":\"optional note\",\"note_url\":\"http://optional/note/url\",\"updated_at\":\"2011-09-06T20:39:23Z\",\"created_at\":\"2011-09-06T17:26:27Z\",\"fingerprint\":\"jklmnop12345678\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Update an existing authorization",
    "scope": "oauthAuthorizations",
    "id": "updateAuthorization",
    "method": "PATCH",
    "url": "/authorizations/{authorization_id}",
    "isDeprecated": false,
    "description": "If you have two-factor authentication setup, Basic Authentication for this endpoint requires that you use a one-time password (OTP) and your username and password instead of tokens. For more information, see \"[Working with two-factor authentication](https://developer.github.com/enterprise/2.17/v3/auth/#working-with-two-factor-authentication).\"\n\nYou can only send one of these scope keys at a time.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/oauth_authorizations/#update-an-existing-authorization",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "authorization_id",
        "description": "authorization_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "scopes",
        "description": "Replaces the authorization scopes with these.",
        "in": "BODY",
        "type": "string[]",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "add_scopes",
        "description": "A list of scopes to add to this authorization.",
        "in": "BODY",
        "type": "string[]",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "remove_scopes",
        "description": "A list of scopes to remove from this authorization.",
        "in": "BODY",
        "type": "string[]",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "note",
        "description": "A note to remind you what the OAuth token is for. Tokens not associated with a specific OAuth application (i.e. personal access tokens) must have a unique note.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "note_url",
        "description": "A URL to remind you what app the OAuth token is for.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "fingerprint",
        "description": "A unique string to distinguish an authorization from others created for the same client ID and user.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":1,\"url\":\"https://api.github.com/authorizations/1\",\"scopes\":[\"public_repo\"],\"token\":\"\",\"token_last_eight\":\"12345678\",\"hashed_token\":\"25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8\",\"app\":{\"url\":\"http://my-github-app.com\",\"name\":\"my github app\",\"client_id\":\"abcde12345fghij67890\"},\"note\":\"optional note\",\"note_url\":\"http://optional/note/url\",\"updated_at\":\"2011-09-06T20:39:23Z\",\"created_at\":\"2011-09-06T17:26:27Z\",\"fingerprint\":\"jklmnop12345678\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Delete an authorization",
    "scope": "oauthAuthorizations",
    "id": "deleteAuthorization",
    "method": "DELETE",
    "url": "/authorizations/{authorization_id}",
    "isDeprecated": false,
    "description": "",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/oauth_authorizations/#delete-an-authorization",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "authorization_id",
        "description": "authorization_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [],
    "renamed": null
  },
  {
    "name": "List all codes of conduct",
    "scope": "codesOfConduct",
    "id": "listConductCodes",
    "method": "GET",
    "url": "/codes_of_conduct",
    "isDeprecated": false,
    "description": "",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/codes_of_conduct/#list-all-codes-of-conduct",
    "previews": [{ "name": "scarlet-witch" }],
    "headers": [
      {
        "name": "accept",
        "value": "application/vnd.github.scarlet-witch-preview+json"
      }
    ],
    "parameters": [],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"key\":\"citizen_code_of_conduct\",\"name\":\"Citizen Code of Conduct\",\"url\":\"https://api.github.com/codes_of_conduct/citizen_code_of_conduct\"},{\"key\":\"contributor_covenant\",\"name\":\"Contributor Covenant\",\"url\":\"https://api.github.com/codes_of_conduct/contributor_covenant\"}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Get an individual code of conduct",
    "scope": "codesOfConduct",
    "id": "getConductCode",
    "method": "GET",
    "url": "/codes_of_conduct/{key}",
    "isDeprecated": false,
    "description": "",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/codes_of_conduct/#get-an-individual-code-of-conduct",
    "previews": [{ "name": "scarlet-witch" }],
    "headers": [
      {
        "name": "accept",
        "value": "application/vnd.github.scarlet-witch-preview+json"
      }
    ],
    "parameters": [
      {
        "name": "key",
        "description": "key parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"key\":\"contributor_covenant\",\"name\":\"Contributor Covenant\",\"url\":\"https://api.github.com/codes_of_conduct/contributor_covenant\",\"body\":\"# Contributor Covenant Code of Conduct\\n\\n## Our Pledge\\n\\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.\\n\\n## Our Standards\\n\\nExamples of behavior that contributes to creating a positive environment include:\\n\\n* Using welcoming and inclusive language\\n* Being respectful of differing viewpoints and experiences\\n* Gracefully accepting constructive criticism\\n* Focusing on what is best for the community\\n* Showing empathy towards other community members\\n\\nExamples of unacceptable behavior by participants include:\\n\\n* The use of sexualized language or imagery and unwelcome sexual attention or advances\\n* Trolling, insulting/derogatory comments, and personal or political attacks\\n* Public or private harassment\\n* Publishing others' private information, such as a physical or electronic address, without explicit permission\\n* Other conduct which could reasonably be considered inappropriate in a professional setting\\n\\n## Our Responsibilities\\n\\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response\\n                  to any instances of unacceptable behavior.\\n\\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\\n\\n## Scope\\n\\nThis Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address,\\n                  posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\\n\\n## Enforcement\\n\\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at [EMAIL]. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.\\n\\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.\\n\\n## Attribution\\n\\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]\\n\\n[homepage]: http://contributor-covenant.org\\n[version]: http://contributor-covenant.org/version/1/4/\\n\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Create a content attachment",
    "scope": "apps",
    "id": "createContentAttachment",
    "method": "POST",
    "url": "/content_references/{content_reference_id}/attachments",
    "isDeprecated": false,
    "description": "Creates an attachment under a content reference URL in the body or comment of an issue or pull request. Use the `id` of the content reference from the [`content_reference` event](https://developer.github.com/enterprise/2.17/v3/activity/events/types/#contentreferenceevent) to create an attachment.\n\nThe app must create a content attachment within six hours of the content reference URL being posted. See \"[Using content attachments](https://developer.github.com/enterprise/2.17/apps/using-content-attachments/)\" for details about content attachments.\n\nYou must use an [installation access token](https://developer.github.com/enterprise/2.17/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-an-installation) to access this endpoint.\n\nThis example creates a content attachment for the domain `https://errors.ai/`.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/apps/installations/#create-a-content-attachment",
    "previews": [{ "name": "corsair" }],
    "headers": [
      {
        "name": "accept",
        "value": "application/vnd.github.corsair-preview+json"
      }
    ],
    "parameters": [
      {
        "name": "content_reference_id",
        "description": "content_reference_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "title",
        "description": "The title of the content attachment displayed in the body or comment of an issue or pull request.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "body",
        "description": "The body text of the content attachment displayed in the body or comment of an issue or pull request. This parameter supports markdown.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":101,\"title\":\"[A-1234] Error found in core/models.py file'\",\"body\":\"You have used an email that already exists for the user_email_uniq field.\\n ## DETAILS:\\n\\nThe (email)=(Octocat@github.com) already exists.\\n\\n The error was found in core/models.py in get_or_create_user at line 62.\\n\\n self.save()\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Get",
    "scope": "emojis",
    "id": "get",
    "method": "GET",
    "url": "/emojis",
    "isDeprecated": false,
    "description": "Lists all the emojis available to use on GitHub Enterprise Server.\n\n",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/emojis/#emojis",
    "previews": [],
    "headers": [],
    "parameters": [],
    "responses": [],
    "renamed": null
  },
  {
    "name": "Get license information",
    "scope": "enterpriseAdmin",
    "id": "getLicenseInformation",
    "method": "GET",
    "url": "/enterprise/settings/license",
    "isDeprecated": false,
    "description": "",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/enterprise-admin/license/#get-license-information",
    "previews": [],
    "headers": [],
    "parameters": [],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"seats\":1400,\"seats_used\":1316,\"seats_available\":84,\"kind\":\"standard\",\"days_until_expiration\":365,\"expire_at\":\"2016/02/06 12:41:52 -0600\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Get statistics",
    "scope": "enterpriseAdmin",
    "id": "getTypeStats",
    "method": "GET",
    "url": "/enterprise/stats/{type}",
    "isDeprecated": false,
    "description": "There are a variety of types to choose from:\n\n| Type         | Description                                                                                         |\n| ------------ | --------------------------------------------------------------------------------------------------- |\n| `issues`     | The number of open and closed issues.                                                               |\n| `hooks`      | The number of active and inactive hooks.                                                            |\n| `milestones` | The number of open and closed milestones.                                                           |\n| `orgs`       | The number of organizations, teams, team members, and disabled organizations.                       |\n| `comments`   | The number of comments on issues, pull requests, commits, and gists.                                |\n| `pages`      | The number of GitHub Pages sites.                                                                   |\n| `users`      | The number of suspended and admin users.                                                            |\n| `gists`      | The number of private and public gists.                                                             |\n| `pulls`      | The number of merged, mergeable, and unmergeable pull requests.                                     |\n| `repos`      | The number of organization-owned repositories, root repositories, forks, pushed commits, and wikis. |\n| `all`        | All of the statistics listed above.                                                                 |\n\nThese statistics are cached and will be updated approximately every 10 minutes.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/enterprise-admin/admin_stats/#get-statistics",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "type",
        "description": "type parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"repos\":{\"total_repos\":212,\"root_repos\":194,\"fork_repos\":18,\"org_repos\":51,\"total_pushes\":3082,\"total_wikis\":15},\"hooks\":{\"total_hooks\":27,\"active_hooks\":23,\"inactive_hooks\":4},\"pages\":{\"total_pages\":36},\"orgs\":{\"total_orgs\":33,\"disabled_orgs\":0,\"total_teams\":60,\"total_team_members\":314},\"users\":{\"total_users\":254,\"admin_users\":45,\"suspended_users\":21},\"pulls\":{\"total_pulls\":86,\"merged_pulls\":60,\"mergeable_pulls\":21,\"unmergeable_pulls\":3},\"issues\":{\"total_issues\":179,\"open_issues\":83,\"closed_issues\":96},\"milestones\":{\"total_milestones\":7,\"open_milestones\":6,\"closed_milestones\":1},\"gists\":{\"total_gists\":178,\"private_gists\":151,\"public_gists\":25},\"comments\":{\"total_commit_comments\":6,\"total_gist_comments\":28,\"total_issue_comments\":366,\"total_pull_request_comments\":30}}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "List public events",
    "scope": "activity",
    "id": "listPublicEvents",
    "method": "GET",
    "url": "/events",
    "isDeprecated": false,
    "description": "We delay the public events feed by five minutes, which means the most recent event returned by the public events API actually occurred at least five minutes ago.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/activity/events/#list-public-events",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [],
    "renamed": null
  },
  {
    "name": "List feeds",
    "scope": "activity",
    "id": "listFeeds",
    "method": "GET",
    "url": "/feeds",
    "isDeprecated": false,
    "description": "GitHub Enterprise Server provides several timeline resources in [Atom](http://en.wikipedia.org/wiki/Atom_(standard)) format. The Feeds API lists all the feeds available to the authenticated user:\n\n*   **Timeline**: The GitHub Enterprise Server global public timeline\n*   **User**: The public timeline for any user, using [URI template](https://developer.github.com/enterprise/2.17/v3/#hypermedia)\n*   **Current user public**: The public timeline for the authenticated user\n*   **Current user**: The private timeline for the authenticated user\n*   **Current user actor**: The private timeline for activity created by the authenticated user\n*   **Current user organizations**: The private timeline for the organizations the authenticated user is a member of.\n\n**Note**: Private feeds are only returned when [authenticating via Basic Auth](https://developer.github.com/enterprise/2.17/v3/#basic-authentication) since current feed URIs use the older, non revocable auth tokens.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/activity/feeds/#list-feeds",
    "previews": [],
    "headers": [],
    "parameters": [],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"timeline_url\":\"https://github.com/timeline\",\"user_url\":\"https://github.com/{user}\",\"current_user_public_url\":\"https://github.com/octocat\",\"current_user_url\":\"https://github.com/octocat.private?token=abc123\",\"current_user_actor_url\":\"https://github.com/octocat.private.actor?token=abc123\",\"current_user_organization_url\":\"\",\"current_user_organization_urls\":[\"https://github.com/organizations/github/octocat.private.atom?token=abc123\"],\"_links\":{\"timeline\":{\"href\":\"https://github.com/timeline\",\"type\":\"application/atom+xml\"},\"user\":{\"href\":\"https://github.com/{user}\",\"type\":\"application/atom+xml\"},\"current_user_public\":{\"href\":\"https://github.com/octocat\",\"type\":\"application/atom+xml\"},\"current_user\":{\"href\":\"https://github.com/octocat.private?token=abc123\",\"type\":\"application/atom+xml\"},\"current_user_actor\":{\"href\":\"https://github.com/octocat.private.actor?token=abc123\",\"type\":\"application/atom+xml\"},\"current_user_organization\":{\"href\":\"\",\"type\":\"\"},\"current_user_organizations\":[{\"href\":\"https://github.com/organizations/github/octocat.private.atom?token=abc123\",\"type\":\"application/atom+xml\"}]}}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "List the authenticated user's gists or if called anonymously, this will return all public gists",
    "scope": "gists",
    "id": "list",
    "method": "GET",
    "url": "/gists",
    "isDeprecated": false,
    "description": "",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/gists/#list-a-users-gists",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "since",
        "description": "This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`. Only gists updated at or after this time are returned.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"url\":\"https://api.github.com/gists/aa5a315d61ae9438b18d\",\"forks_url\":\"https://api.github.com/gists/aa5a315d61ae9438b18d/forks\",\"commits_url\":\"https://api.github.com/gists/aa5a315d61ae9438b18d/commits\",\"id\":\"aa5a315d61ae9438b18d\",\"node_id\":\"MDQ6R2lzdGFhNWEzMTVkNjFhZTk0MzhiMThk\",\"git_pull_url\":\"https://gist.github.com/aa5a315d61ae9438b18d.git\",\"git_push_url\":\"https://gist.github.com/aa5a315d61ae9438b18d.git\",\"html_url\":\"https://gist.github.com/aa5a315d61ae9438b18d\",\"files\":{\"hello_world.rb\":{\"filename\":\"hello_world.rb\",\"type\":\"application/x-ruby\",\"language\":\"Ruby\",\"raw_url\":\"https://gist.githubusercontent.com/octocat/6cad326836d38bd3a7ae/raw/db9c55113504e46fa076e7df3a04ce592e2e86d8/hello_world.rb\",\"size\":167}},\"public\":true,\"created_at\":\"2010-04-14T02:15:15Z\",\"updated_at\":\"2011-06-20T11:34:15Z\",\"description\":\"Hello World Examples\",\"comments\":0,\"user\":null,\"comments_url\":\"https://api.github.com/gists/aa5a315d61ae9438b18d/comments/\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"truncated\":false}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Create a gist",
    "scope": "gists",
    "id": "create",
    "method": "POST",
    "url": "/gists",
    "isDeprecated": false,
    "description": "Allows you to add a new gist with one or more files.\n\n**Note:** Don't name your files \"gistfile\" with a numerical suffix. This is the format of the automatic naming scheme that Gist uses internally.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/gists/#create-a-gist",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "files",
        "description": "The filenames and content of each file in the gist. The keys in the `files` object represent the filename and have the type `string`.",
        "in": "BODY",
        "type": "object",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "files.content",
        "description": "The content of the file.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "description",
        "description": "A descriptive name for this gist.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "public",
        "description": "When `true`, the gist will be public and available for anyone to see.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 201,
        "description": "response",
        "examples": [
          {
            "data": "{\"url\":\"https://api.github.com/gists/aa5a315d61ae9438b18d\",\"forks_url\":\"https://api.github.com/gists/aa5a315d61ae9438b18d/forks\",\"commits_url\":\"https://api.github.com/gists/aa5a315d61ae9438b18d/commits\",\"id\":\"aa5a315d61ae9438b18d\",\"node_id\":\"MDQ6R2lzdGFhNWEzMTVkNjFhZTk0MzhiMThk\",\"git_pull_url\":\"https://gist.github.com/aa5a315d61ae9438b18d.git\",\"git_push_url\":\"https://gist.github.com/aa5a315d61ae9438b18d.git\",\"html_url\":\"https://gist.github.com/aa5a315d61ae9438b18d\",\"files\":{\"hello_world.rb\":{\"filename\":\"hello_world.rb\",\"type\":\"application/x-ruby\",\"language\":\"Ruby\",\"raw_url\":\"https://gist.githubusercontent.com/octocat/6cad326836d38bd3a7ae/raw/db9c55113504e46fa076e7df3a04ce592e2e86d8/hello_world.rb\",\"size\":167,\"truncated\":false,\"content\":\"class HelloWorld\\n   def initialize(name)\\n      @name = name.capitalize\\n   end\\n   def sayHi\\n      puts \\\"Hello !\\\"\\n   end\\nend\\n\\nhello = HelloWorld.new(\\\"World\\\")\\nhello.sayHi\"},\"hello_world.py\":{\"filename\":\"hello_world.py\",\"type\":\"application/x-python\",\"language\":\"Python\",\"raw_url\":\"https://gist.githubusercontent.com/octocat/e29f3839074953e1cc2934867fa5f2d2/raw/99c1bf3a345505c2e6195198d5f8c36267de570b/hello_world.py\",\"size\":199,\"truncated\":false,\"content\":\"class HelloWorld:\\n\\n    def __init__(self, name):\\n        self.name = name.capitalize()\\n       \\n    def sayHi(self):\\n        print \\\"Hello \\\" + self.name + \\\"!\\\"\\n\\nhello = HelloWorld(\\\"world\\\")\\nhello.sayHi()\"},\"hello_world_ruby.txt\":{\"filename\":\"hello_world_ruby.txt\",\"type\":\"text/plain\",\"language\":\"Text\",\"raw_url\":\"https://gist.githubusercontent.com/octocat/e29f3839074953e1cc2934867fa5f2d2/raw/9e4544db60e01a261aac098592b11333704e9082/hello_world_ruby.txt\",\"size\":46,\"truncated\":false,\"content\":\"Run `ruby hello_world.rb` to print Hello World\"},\"hello_world_python.txt\":{\"filename\":\"hello_world_python.txt\",\"type\":\"text/plain\",\"language\":\"Text\",\"raw_url\":\"https://gist.githubusercontent.com/octocat/e29f3839074953e1cc2934867fa5f2d2/raw/076b4b78c10c9b7e1e0b73ffb99631bfc948de3b/hello_world_python.txt\",\"size\":48,\"truncated\":false,\"content\":\"Run `python hello_world.py` to print Hello World\"}},\"public\":true,\"created_at\":\"2010-04-14T02:15:15Z\",\"updated_at\":\"2011-06-20T11:34:15Z\",\"description\":\"Hello World Examples\",\"comments\":0,\"user\":null,\"comments_url\":\"https://api.github.com/gists/aa5a315d61ae9438b18d/comments/\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"truncated\":false,\"forks\":[{\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"url\":\"https://api.github.com/gists/dee9c42e4998ce2ea439\",\"id\":\"dee9c42e4998ce2ea439\",\"created_at\":\"2011-04-14T16:00:49Z\",\"updated_at\":\"2011-04-14T16:00:49Z\"}],\"history\":[{\"url\":\"https://api.github.com/gists/aa5a315d61ae9438b18d/57a7f021a713b1c5a6a199b54cc514735d2d462f\",\"version\":\"57a7f021a713b1c5a6a199b54cc514735d2d462f\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"change_status\":{\"deletions\":0,\"additions\":180,\"total\":180},\"committed_at\":\"2010-04-14T02:15:15Z\"}]}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "List all public gists",
    "scope": "gists",
    "id": "listPublic",
    "method": "GET",
    "url": "/gists/public",
    "isDeprecated": false,
    "description": "List all public gists sorted by most recently updated to least recently updated.\n\nNote: With [pagination](https://developer.github.com/enterprise/2.17/v3/#pagination), you can fetch up to 3000 gists. For example, you can fetch 100 pages with 30 gists per page or 30 pages with 100 gists per page.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/gists/#list-all-public-gists",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "since",
        "description": "This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`. Only gists updated at or after this time are returned.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"url\":\"https://api.github.com/gists/aa5a315d61ae9438b18d\",\"forks_url\":\"https://api.github.com/gists/aa5a315d61ae9438b18d/forks\",\"commits_url\":\"https://api.github.com/gists/aa5a315d61ae9438b18d/commits\",\"id\":\"aa5a315d61ae9438b18d\",\"node_id\":\"MDQ6R2lzdGFhNWEzMTVkNjFhZTk0MzhiMThk\",\"git_pull_url\":\"https://gist.github.com/aa5a315d61ae9438b18d.git\",\"git_push_url\":\"https://gist.github.com/aa5a315d61ae9438b18d.git\",\"html_url\":\"https://gist.github.com/aa5a315d61ae9438b18d\",\"files\":{\"hello_world.rb\":{\"filename\":\"hello_world.rb\",\"type\":\"application/x-ruby\",\"language\":\"Ruby\",\"raw_url\":\"https://gist.githubusercontent.com/octocat/6cad326836d38bd3a7ae/raw/db9c55113504e46fa076e7df3a04ce592e2e86d8/hello_world.rb\",\"size\":167}},\"public\":true,\"created_at\":\"2010-04-14T02:15:15Z\",\"updated_at\":\"2011-06-20T11:34:15Z\",\"description\":\"Hello World Examples\",\"comments\":0,\"user\":null,\"comments_url\":\"https://api.github.com/gists/aa5a315d61ae9438b18d/comments/\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"truncated\":false}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "List starred gists",
    "scope": "gists",
    "id": "listStarred",
    "method": "GET",
    "url": "/gists/starred",
    "isDeprecated": false,
    "description": "List the authenticated user's starred gists:",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/gists/#list-starred-gists",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "since",
        "description": "This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`. Only gists updated at or after this time are returned.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"url\":\"https://api.github.com/gists/aa5a315d61ae9438b18d\",\"forks_url\":\"https://api.github.com/gists/aa5a315d61ae9438b18d/forks\",\"commits_url\":\"https://api.github.com/gists/aa5a315d61ae9438b18d/commits\",\"id\":\"aa5a315d61ae9438b18d\",\"node_id\":\"MDQ6R2lzdGFhNWEzMTVkNjFhZTk0MzhiMThk\",\"git_pull_url\":\"https://gist.github.com/aa5a315d61ae9438b18d.git\",\"git_push_url\":\"https://gist.github.com/aa5a315d61ae9438b18d.git\",\"html_url\":\"https://gist.github.com/aa5a315d61ae9438b18d\",\"files\":{\"hello_world.rb\":{\"filename\":\"hello_world.rb\",\"type\":\"application/x-ruby\",\"language\":\"Ruby\",\"raw_url\":\"https://gist.githubusercontent.com/octocat/6cad326836d38bd3a7ae/raw/db9c55113504e46fa076e7df3a04ce592e2e86d8/hello_world.rb\",\"size\":167}},\"public\":true,\"created_at\":\"2010-04-14T02:15:15Z\",\"updated_at\":\"2011-06-20T11:34:15Z\",\"description\":\"Hello World Examples\",\"comments\":0,\"user\":null,\"comments_url\":\"https://api.github.com/gists/aa5a315d61ae9438b18d/comments/\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"truncated\":false}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Get a single gist",
    "scope": "gists",
    "id": "get",
    "method": "GET",
    "url": "/gists/{gist_id}",
    "isDeprecated": false,
    "description": "",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/gists/#get-a-single-gist",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "gist_id",
        "description": "gist_id parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"url\":\"https://api.github.com/gists/aa5a315d61ae9438b18d\",\"forks_url\":\"https://api.github.com/gists/aa5a315d61ae9438b18d/forks\",\"commits_url\":\"https://api.github.com/gists/aa5a315d61ae9438b18d/commits\",\"id\":\"aa5a315d61ae9438b18d\",\"node_id\":\"MDQ6R2lzdGFhNWEzMTVkNjFhZTk0MzhiMThk\",\"git_pull_url\":\"https://gist.github.com/aa5a315d61ae9438b18d.git\",\"git_push_url\":\"https://gist.github.com/aa5a315d61ae9438b18d.git\",\"html_url\":\"https://gist.github.com/aa5a315d61ae9438b18d\",\"files\":{\"hello_world.rb\":{\"filename\":\"hello_world.rb\",\"type\":\"application/x-ruby\",\"language\":\"Ruby\",\"raw_url\":\"https://gist.githubusercontent.com/octocat/6cad326836d38bd3a7ae/raw/db9c55113504e46fa076e7df3a04ce592e2e86d8/hello_world.rb\",\"size\":167,\"truncated\":false,\"content\":\"class HelloWorld\\n   def initialize(name)\\n      @name = name.capitalize\\n   end\\n   def sayHi\\n      puts \\\"Hello !\\\"\\n   end\\nend\\n\\nhello = HelloWorld.new(\\\"World\\\")\\nhello.sayHi\"},\"hello_world.py\":{\"filename\":\"hello_world.py\",\"type\":\"application/x-python\",\"language\":\"Python\",\"raw_url\":\"https://gist.githubusercontent.com/octocat/e29f3839074953e1cc2934867fa5f2d2/raw/99c1bf3a345505c2e6195198d5f8c36267de570b/hello_world.py\",\"size\":199,\"truncated\":false,\"content\":\"class HelloWorld:\\n\\n    def __init__(self, name):\\n        self.name = name.capitalize()\\n       \\n    def sayHi(self):\\n        print \\\"Hello \\\" + self.name + \\\"!\\\"\\n\\nhello = HelloWorld(\\\"world\\\")\\nhello.sayHi()\"},\"hello_world_ruby.txt\":{\"filename\":\"hello_world_ruby.txt\",\"type\":\"text/plain\",\"language\":\"Text\",\"raw_url\":\"https://gist.githubusercontent.com/octocat/e29f3839074953e1cc2934867fa5f2d2/raw/9e4544db60e01a261aac098592b11333704e9082/hello_world_ruby.txt\",\"size\":46,\"truncated\":false,\"content\":\"Run `ruby hello_world.rb` to print Hello World\"},\"hello_world_python.txt\":{\"filename\":\"hello_world_python.txt\",\"type\":\"text/plain\",\"language\":\"Text\",\"raw_url\":\"https://gist.githubusercontent.com/octocat/e29f3839074953e1cc2934867fa5f2d2/raw/076b4b78c10c9b7e1e0b73ffb99631bfc948de3b/hello_world_python.txt\",\"size\":48,\"truncated\":false,\"content\":\"Run `python hello_world.py` to print Hello World\"}},\"public\":true,\"created_at\":\"2010-04-14T02:15:15Z\",\"updated_at\":\"2011-06-20T11:34:15Z\",\"description\":\"Hello World Examples\",\"comments\":0,\"user\":null,\"comments_url\":\"https://api.github.com/gists/aa5a315d61ae9438b18d/comments/\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"truncated\":false,\"forks\":[{\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"url\":\"https://api.github.com/gists/dee9c42e4998ce2ea439\",\"id\":\"dee9c42e4998ce2ea439\",\"created_at\":\"2011-04-14T16:00:49Z\",\"updated_at\":\"2011-04-14T16:00:49Z\"}],\"history\":[{\"url\":\"https://api.github.com/gists/aa5a315d61ae9438b18d/57a7f021a713b1c5a6a199b54cc514735d2d462f\",\"version\":\"57a7f021a713b1c5a6a199b54cc514735d2d462f\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"change_status\":{\"deletions\":0,\"additions\":180,\"total\":180},\"committed_at\":\"2010-04-14T02:15:15Z\"}]}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Edit a gist",
    "scope": "gists",
    "id": "update",
    "method": "PATCH",
    "url": "/gists/{gist_id}",
    "isDeprecated": false,
    "description": "Allows you to update or delete a gist file and rename gist files. Files from the previous version of the gist that aren't explicitly changed during an edit are unchanged.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/gists/#edit-a-gist",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "gist_id",
        "description": "gist_id parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "description",
        "description": "A descriptive name for this gist.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "files",
        "description": "The filenames and content that make up this gist.",
        "in": "BODY",
        "type": "object",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "files.content",
        "description": "The updated content of the file.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "files.filename",
        "description": "The new name for this file. To delete a file, set the value of the filename to `null`.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"url\":\"https://api.github.com/gists/aa5a315d61ae9438b18d\",\"forks_url\":\"https://api.github.com/gists/aa5a315d61ae9438b18d/forks\",\"commits_url\":\"https://api.github.com/gists/aa5a315d61ae9438b18d/commits\",\"id\":\"aa5a315d61ae9438b18d\",\"node_id\":\"MDQ6R2lzdGFhNWEzMTVkNjFhZTk0MzhiMThk\",\"git_pull_url\":\"https://gist.github.com/aa5a315d61ae9438b18d.git\",\"git_push_url\":\"https://gist.github.com/aa5a315d61ae9438b18d.git\",\"html_url\":\"https://gist.github.com/aa5a315d61ae9438b18d\",\"files\":{\"hello_world.rb\":{\"filename\":\"hello_world.rb\",\"type\":\"application/x-ruby\",\"language\":\"Ruby\",\"raw_url\":\"https://gist.githubusercontent.com/octocat/6cad326836d38bd3a7ae/raw/db9c55113504e46fa076e7df3a04ce592e2e86d8/hello_world.rb\",\"size\":167,\"truncated\":false,\"content\":\"class HelloWorld\\n   def initialize(name)\\n      @name = name.capitalize\\n   end\\n   def sayHi\\n      puts \\\"Hello !\\\"\\n   end\\nend\\n\\nhello = HelloWorld.new(\\\"World\\\")\\nhello.sayHi\"},\"hello_world.py\":{\"filename\":\"hello_world.py\",\"type\":\"application/x-python\",\"language\":\"Python\",\"raw_url\":\"https://gist.githubusercontent.com/octocat/e29f3839074953e1cc2934867fa5f2d2/raw/99c1bf3a345505c2e6195198d5f8c36267de570b/hello_world.py\",\"size\":199,\"truncated\":false,\"content\":\"class HelloWorld:\\n\\n    def __init__(self, name):\\n        self.name = name.capitalize()\\n       \\n    def sayHi(self):\\n        print \\\"Hello \\\" + self.name + \\\"!\\\"\\n\\nhello = HelloWorld(\\\"world\\\")\\nhello.sayHi()\"},\"hello_world.md\":{\"filename\":\"hello_world.md\",\"type\":\"text/plain\",\"language\":\"Markdown\",\"raw_url\":\"https://gist.githubusercontent.com/octocat/8df0a8f642973cbda937bf542d37d4e9/raw/4221bb4b942568c4e3ab253022d2b7fec7844f21/hello_world.md\",\"size\":73,\"truncated\":false,\"content\":\"Run `ruby hello_world.rb` or `python hello_world.py` to print Hello World\"},\"new_file.txt\":{\"filename\":\"new_file.txt\",\"type\":\"text/plain\",\"language\":\"Text\",\"raw_url\":\"https://gist.githubusercontent.com/octocat/8df0a8f642973cbda937bf542d37d4e9/raw/56ab7bdf864fa11c1e16acce2a5116171514d2d1/new_file.txt\",\"size\":31,\"truncated\":false,\"content\":\"This is a new placeholder file.\"}},\"public\":true,\"created_at\":\"2010-04-14T02:15:15Z\",\"updated_at\":\"2011-06-20T11:34:15Z\",\"description\":\"Hello World Examples\",\"comments\":0,\"user\":null,\"comments_url\":\"https://api.github.com/gists/aa5a315d61ae9438b18d/comments/\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"truncated\":false,\"forks\":[{\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"url\":\"https://api.github.com/gists/dee9c42e4998ce2ea439\",\"id\":\"dee9c42e4998ce2ea439\",\"created_at\":\"2011-04-14T16:00:49Z\",\"updated_at\":\"2011-04-14T16:00:49Z\"}],\"history\":[{\"url\":\"https://api.github.com/gists/aa5a315d61ae9438b18d/57a7f021a713b1c5a6a199b54cc514735d2d462f\",\"version\":\"57a7f021a713b1c5a6a199b54cc514735d2d462f\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"change_status\":{\"deletions\":0,\"additions\":180,\"total\":180},\"committed_at\":\"2010-04-14T02:15:15Z\"}]}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Delete a gist",
    "scope": "gists",
    "id": "delete",
    "method": "DELETE",
    "url": "/gists/{gist_id}",
    "isDeprecated": false,
    "description": "",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/gists/#delete-a-gist",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "gist_id",
        "description": "gist_id parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [],
    "renamed": null
  },
  {
    "name": "List comments on a gist",
    "scope": "gists",
    "id": "listComments",
    "method": "GET",
    "url": "/gists/{gist_id}/comments",
    "isDeprecated": false,
    "description": "",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/gists/comments/#list-comments-on-a-gist",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "gist_id",
        "description": "gist_id parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"id\":1,\"node_id\":\"MDExOkdpc3RDb21tZW50MQ==\",\"url\":\"https://api.github.com/gists/a6db0bec360bb87e9418/comments/1\",\"body\":\"Just commenting for the sake of commenting\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"created_at\":\"2011-04-18T23:23:56Z\",\"updated_at\":\"2011-04-18T23:23:56Z\"}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Create a comment",
    "scope": "gists",
    "id": "createComment",
    "method": "POST",
    "url": "/gists/{gist_id}/comments",
    "isDeprecated": false,
    "description": "",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/gists/comments/#create-a-comment",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "gist_id",
        "description": "gist_id parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "body",
        "description": "The comment text.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 201,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":1,\"node_id\":\"MDExOkdpc3RDb21tZW50MQ==\",\"url\":\"https://api.github.com/gists/a6db0bec360bb87e9418/comments/1\",\"body\":\"Just commenting for the sake of commenting\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"created_at\":\"2011-04-18T23:23:56Z\",\"updated_at\":\"2011-04-18T23:23:56Z\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Get a single comment",
    "scope": "gists",
    "id": "getComment",
    "method": "GET",
    "url": "/gists/{gist_id}/comments/{comment_id}",
    "isDeprecated": false,
    "description": "",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/gists/comments/#get-a-single-comment",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "gist_id",
        "description": "gist_id parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "comment_id",
        "description": "comment_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":1,\"node_id\":\"MDExOkdpc3RDb21tZW50MQ==\",\"url\":\"https://api.github.com/gists/a6db0bec360bb87e9418/comments/1\",\"body\":\"Just commenting for the sake of commenting\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"created_at\":\"2011-04-18T23:23:56Z\",\"updated_at\":\"2011-04-18T23:23:56Z\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Edit a comment",
    "scope": "gists",
    "id": "updateComment",
    "method": "PATCH",
    "url": "/gists/{gist_id}/comments/{comment_id}",
    "isDeprecated": false,
    "description": "",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/gists/comments/#edit-a-comment",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "gist_id",
        "description": "gist_id parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "comment_id",
        "description": "comment_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "body",
        "description": "The comment text.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":1,\"node_id\":\"MDExOkdpc3RDb21tZW50MQ==\",\"url\":\"https://api.github.com/gists/a6db0bec360bb87e9418/comments/1\",\"body\":\"Just commenting for the sake of commenting\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"created_at\":\"2011-04-18T23:23:56Z\",\"updated_at\":\"2011-04-18T23:23:56Z\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Delete a comment",
    "scope": "gists",
    "id": "deleteComment",
    "method": "DELETE",
    "url": "/gists/{gist_id}/comments/{comment_id}",
    "isDeprecated": false,
    "description": "",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/gists/comments/#delete-a-comment",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "gist_id",
        "description": "gist_id parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "comment_id",
        "description": "comment_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [],
    "renamed": null
  },
  {
    "name": "List gist commits",
    "scope": "gists",
    "id": "listCommits",
    "method": "GET",
    "url": "/gists/{gist_id}/commits",
    "isDeprecated": false,
    "description": "",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/gists/#list-gist-commits",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "gist_id",
        "description": "gist_id parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"url\":\"https://api.github.com/gists/aa5a315d61ae9438b18d/57a7f021a713b1c5a6a199b54cc514735d2d462f\",\"version\":\"57a7f021a713b1c5a6a199b54cc514735d2d462f\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"change_status\":{\"deletions\":0,\"additions\":180,\"total\":180},\"committed_at\":\"2010-04-14T02:15:15Z\"}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Fork a gist",
    "scope": "gists",
    "id": "fork",
    "method": "POST",
    "url": "/gists/{gist_id}/forks",
    "isDeprecated": false,
    "description": "**Note**: This was previously `/gists/:gist_id/fork`.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/gists/#fork-a-gist",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "gist_id",
        "description": "gist_id parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 201,
        "description": "response",
        "examples": [
          {
            "data": "{\"url\":\"https://api.github.com/gists/aa5a315d61ae9438b18d\",\"forks_url\":\"https://api.github.com/gists/aa5a315d61ae9438b18d/forks\",\"commits_url\":\"https://api.github.com/gists/aa5a315d61ae9438b18d/commits\",\"id\":\"aa5a315d61ae9438b18d\",\"node_id\":\"MDQ6R2lzdGFhNWEzMTVkNjFhZTk0MzhiMThk\",\"git_pull_url\":\"https://gist.github.com/aa5a315d61ae9438b18d.git\",\"git_push_url\":\"https://gist.github.com/aa5a315d61ae9438b18d.git\",\"html_url\":\"https://gist.github.com/aa5a315d61ae9438b18d\",\"files\":{\"hello_world.rb\":{\"filename\":\"hello_world.rb\",\"type\":\"application/x-ruby\",\"language\":\"Ruby\",\"raw_url\":\"https://gist.githubusercontent.com/octocat/6cad326836d38bd3a7ae/raw/db9c55113504e46fa076e7df3a04ce592e2e86d8/hello_world.rb\",\"size\":167}},\"public\":true,\"created_at\":\"2010-04-14T02:15:15Z\",\"updated_at\":\"2011-06-20T11:34:15Z\",\"description\":\"Hello World Examples\",\"comments\":0,\"user\":null,\"comments_url\":\"https://api.github.com/gists/aa5a315d61ae9438b18d/comments/\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"truncated\":false}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "List gist forks",
    "scope": "gists",
    "id": "listForks",
    "method": "GET",
    "url": "/gists/{gist_id}/forks",
    "isDeprecated": false,
    "description": "",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/gists/#list-gist-forks",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "gist_id",
        "description": "gist_id parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"url\":\"https://api.github.com/gists/dee9c42e4998ce2ea439\",\"id\":\"dee9c42e4998ce2ea439\",\"created_at\":\"2011-04-14T16:00:49Z\",\"updated_at\":\"2011-04-14T16:00:49Z\"}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Star a gist",
    "scope": "gists",
    "id": "star",
    "method": "PUT",
    "url": "/gists/{gist_id}/star",
    "isDeprecated": false,
    "description": "Note that you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTTP verbs](https://developer.github.com/enterprise/2.17/v3/#http-verbs).\"",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/gists/#star-a-gist",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "gist_id",
        "description": "gist_id parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [],
    "renamed": null
  },
  {
    "name": "Unstar a gist",
    "scope": "gists",
    "id": "unstar",
    "method": "DELETE",
    "url": "/gists/{gist_id}/star",
    "isDeprecated": false,
    "description": "",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/gists/#unstar-a-gist",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "gist_id",
        "description": "gist_id parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [],
    "renamed": null
  },
  {
    "name": "Check if a gist is starred",
    "scope": "gists",
    "id": "checkIsStarred",
    "method": "GET",
    "url": "/gists/{gist_id}/star",
    "isDeprecated": false,
    "description": "",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/gists/#check-if-a-gist-is-starred",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "gist_id",
        "description": "gist_id parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [],
    "renamed": null
  },
  {
    "name": "Get a specific revision of a gist",
    "scope": "gists",
    "id": "getRevision",
    "method": "GET",
    "url": "/gists/{gist_id}/{sha}",
    "isDeprecated": false,
    "description": "",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/gists/#get-a-specific-revision-of-a-gist",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "gist_id",
        "description": "gist_id parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "sha",
        "description": "sha parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"url\":\"https://api.github.com/gists/aa5a315d61ae9438b18d/57a7f021a713b1c5a6a199b54cc514735d2d462f\",\"forks_url\":\"https://api.github.com/gists/aa5a315d61ae9438b18d/forks\",\"commits_url\":\"https://api.github.com/gists/aa5a315d61ae9438b18d/commits\",\"id\":\"aa5a315d61ae9438b18d\",\"node_id\":\"MDQ6R2lzdGFhNWEzMTVkNjFhZTk0MzhiMThk\",\"git_pull_url\":\"https://gist.github.com/aa5a315d61ae9438b18d.git\",\"git_push_url\":\"https://gist.github.com/aa5a315d61ae9438b18d.git\",\"html_url\":\"https://gist.github.com/aa5a315d61ae9438b18d\",\"files\":{\"hello_world.rb\":{\"filename\":\"hello_world.rb\",\"type\":\"application/x-ruby\",\"language\":\"Ruby\",\"raw_url\":\"https://gist.githubusercontent.com/octocat/6cad326836d38bd3a7ae/raw/db9c55113504e46fa076e7df3a04ce592e2e86d8/hello_world.rb\",\"size\":167,\"truncated\":false,\"content\":\"class HelloWorld\\n   def initialize(name)\\n      @name = name.capitalize\\n   end\\n   def sayHi\\n      puts \\\"Hello !\\\"\\n   end\\nend\\n\\nhello = HelloWorld.new(\\\"World\\\")\\nhello.sayHi\"},\"hello_world.py\":{\"filename\":\"hello_world.py\",\"type\":\"application/x-python\",\"language\":\"Python\",\"raw_url\":\"https://gist.githubusercontent.com/octocat/e29f3839074953e1cc2934867fa5f2d2/raw/99c1bf3a345505c2e6195198d5f8c36267de570b/hello_world.py\",\"size\":199,\"truncated\":false,\"content\":\"class HelloWorld:\\n\\n    def __init__(self, name):\\n        self.name = name.capitalize()\\n       \\n    def sayHi(self):\\n        print \\\"Hello \\\" + self.name + \\\"!\\\"\\n\\nhello = HelloWorld(\\\"world\\\")\\nhello.sayHi()\"},\"hello_world_ruby.txt\":{\"filename\":\"hello_world_ruby.txt\",\"type\":\"text/plain\",\"language\":\"Text\",\"raw_url\":\"https://gist.githubusercontent.com/octocat/e29f3839074953e1cc2934867fa5f2d2/raw/9e4544db60e01a261aac098592b11333704e9082/hello_world_ruby.txt\",\"size\":46,\"truncated\":false,\"content\":\"Run `ruby hello_world.rb` to print Hello World\"},\"hello_world_python.txt\":{\"filename\":\"hello_world_python.txt\",\"type\":\"text/plain\",\"language\":\"Text\",\"raw_url\":\"https://gist.githubusercontent.com/octocat/e29f3839074953e1cc2934867fa5f2d2/raw/076b4b78c10c9b7e1e0b73ffb99631bfc948de3b/hello_world_python.txt\",\"size\":48,\"truncated\":false,\"content\":\"Run `python hello_world.py` to print Hello World\"}},\"public\":true,\"created_at\":\"2010-04-14T02:15:15Z\",\"updated_at\":\"2011-06-20T11:34:15Z\",\"description\":\"Hello World Examples\",\"comments\":0,\"user\":null,\"comments_url\":\"https://api.github.com/gists/aa5a315d61ae9438b18d/comments/\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"truncated\":false,\"forks\":[{\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"url\":\"https://api.github.com/gists/dee9c42e4998ce2ea439\",\"id\":\"dee9c42e4998ce2ea439\",\"created_at\":\"2011-04-14T16:00:49Z\",\"updated_at\":\"2011-04-14T16:00:49Z\"}],\"history\":[{\"url\":\"https://api.github.com/gists/aa5a315d61ae9438b18d/57a7f021a713b1c5a6a199b54cc514735d2d462f\",\"version\":\"57a7f021a713b1c5a6a199b54cc514735d2d462f\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"change_status\":{\"deletions\":0,\"additions\":180,\"total\":180},\"committed_at\":\"2010-04-14T02:15:15Z\"}]}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Listing available templates",
    "scope": "gitignore",
    "id": "listTemplates",
    "method": "GET",
    "url": "/gitignore/templates",
    "isDeprecated": false,
    "description": "List all templates available to pass as an option when [creating a repository](https://developer.github.com/enterprise/2.17/v3/repos/#create).",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/gitignore/#listing-available-templates",
    "previews": [],
    "headers": [],
    "parameters": [],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[\"Actionscript\",\"Android\",\"AppceleratorTitanium\",\"Autotools\",\"Bancha\",\"C\",\"C++\"]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Get a single template",
    "scope": "gitignore",
    "id": "getTemplate",
    "method": "GET",
    "url": "/gitignore/templates/{name}",
    "isDeprecated": false,
    "description": "The API also allows fetching the source of a single template.\n\nUse the raw [media type](https://developer.github.com/enterprise/2.17/v3/media/) to get the raw contents.\n\n",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/gitignore/#get-a-single-template",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "name",
        "description": "name parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"name\":\"C\",\"source\":\"# Object files\\n*.o\\n\\n# Libraries\\n*.lib\\n*.a\\n\\n# Shared objects (inc. Windows DLLs)\\n*.dll\\n*.so\\n*.so.*\\n*.dylib\\n\\n# Executables\\n*.exe\\n*.out\\n*.app\\n\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "List repositories",
    "scope": "apps",
    "id": "listRepos",
    "method": "GET",
    "url": "/installation/repositories",
    "isDeprecated": false,
    "description": "List repositories that an installation can access.\n\nYou must use an [installation access token](https://developer.github.com/enterprise/2.17/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-an-installation) to access this endpoint.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/apps/installations/#list-repositories",
    "previews": [{ "name": "machine-man" }],
    "headers": [
      {
        "name": "accept",
        "value": "application/vnd.github.machine-man-preview+json"
      }
    ],
    "parameters": [
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"total_count\":1,\"repositories\":[{\"id\":1296269,\"node_id\":\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\"name\":\"Hello-World\",\"full_name\":\"octocat/Hello-World\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"private\":false,\"html_url\":\"https://github.com/octocat/Hello-World\",\"description\":\"This your first repo!\",\"fork\":false,\"url\":\"https://api.github.com/repos/octocat/Hello-World\",\"archive_url\":\"http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\"assignees_url\":\"http://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\"blobs_url\":\"http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\"branches_url\":\"http://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\"collaborators_url\":\"http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\"comments_url\":\"http://api.github.com/repos/octocat/Hello-World/comments{/number}\",\"commits_url\":\"http://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\"compare_url\":\"http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\"contents_url\":\"http://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\"contributors_url\":\"http://api.github.com/repos/octocat/Hello-World/contributors\",\"deployments_url\":\"http://api.github.com/repos/octocat/Hello-World/deployments\",\"downloads_url\":\"http://api.github.com/repos/octocat/Hello-World/downloads\",\"events_url\":\"http://api.github.com/repos/octocat/Hello-World/events\",\"forks_url\":\"http://api.github.com/repos/octocat/Hello-World/forks\",\"git_commits_url\":\"http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\"git_refs_url\":\"http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\"git_tags_url\":\"http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\"git_url\":\"git:github.com/octocat/Hello-World.git\",\"issue_comment_url\":\"http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\"issue_events_url\":\"http://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\"issues_url\":\"http://api.github.com/repos/octocat/Hello-World/issues{/number}\",\"keys_url\":\"http://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\"labels_url\":\"http://api.github.com/repos/octocat/Hello-World/labels{/name}\",\"languages_url\":\"http://api.github.com/repos/octocat/Hello-World/languages\",\"merges_url\":\"http://api.github.com/repos/octocat/Hello-World/merges\",\"milestones_url\":\"http://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\"notifications_url\":\"http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\"pulls_url\":\"http://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\"releases_url\":\"http://api.github.com/repos/octocat/Hello-World/releases{/id}\",\"ssh_url\":\"git@github.com:octocat/Hello-World.git\",\"stargazers_url\":\"http://api.github.com/repos/octocat/Hello-World/stargazers\",\"statuses_url\":\"http://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\"subscribers_url\":\"http://api.github.com/repos/octocat/Hello-World/subscribers\",\"subscription_url\":\"http://api.github.com/repos/octocat/Hello-World/subscription\",\"tags_url\":\"http://api.github.com/repos/octocat/Hello-World/tags\",\"teams_url\":\"http://api.github.com/repos/octocat/Hello-World/teams\",\"trees_url\":\"http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\"clone_url\":\"https://github.com/octocat/Hello-World.git\",\"mirror_url\":\"git:git.example.com/octocat/Hello-World\",\"hooks_url\":\"http://api.github.com/repos/octocat/Hello-World/hooks\",\"svn_url\":\"https://svn.github.com/octocat/Hello-World\",\"homepage\":\"https://github.com\",\"language\":null,\"forks_count\":9,\"stargazers_count\":80,\"watchers_count\":80,\"size\":108,\"default_branch\":\"master\",\"open_issues_count\":0,\"topics\":[\"octocat\",\"atom\",\"electron\",\"api\"],\"has_issues\":true,\"has_projects\":true,\"has_wiki\":true,\"has_pages\":false,\"has_downloads\":true,\"archived\":false,\"disabled\":false,\"pushed_at\":\"2011-01-26T19:06:43Z\",\"created_at\":\"2011-01-26T19:01:12Z\",\"updated_at\":\"2011-01-26T19:14:43Z\",\"allow_rebase_merge\":true,\"allow_squash_merge\":true,\"allow_merge_commit\":true,\"subscribers_count\":42,\"network_count\":0,\"anonymous_access_enabled\":false}]}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "List all issues assigned to the authenticated user across all visible repositories including owned repositories, member repositories, and organization repositories",
    "scope": "issues",
    "id": "list",
    "method": "GET",
    "url": "/issues",
    "isDeprecated": false,
    "description": "**Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this reason, \"Issues\" endpoints may return both issues and pull requests in the response. You can identify pull requests by the `pull_request` key.\n\nBe aware that the `id` of a pull request returned from \"Issues\" endpoints will be an _issue id_. To find out the pull request id, use the \"[List pull requests](https://developer.github.com/enterprise/2.17/v3/pulls/#list-pull-requests)\" endpoint.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/issues/#list-issues",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "filter",
        "description": "Indicates which sorts of issues to return. Can be one of:  \n\\* `assigned`: Issues assigned to you  \n\\* `created`: Issues created by you  \n\\* `mentioned`: Issues mentioning you  \n\\* `subscribed`: Issues you're subscribed to updates for  \n\\* `all`: All issues the authenticated user can see, regardless of participation or creation",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["assigned", "created", "mentioned", "subscribed", "all"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "state",
        "description": "Indicates the state of the issues to return. Can be either `open`, `closed`, or `all`.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["open", "closed", "all"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "labels",
        "description": "A list of comma separated label names. Example: `bug,ui,@high`",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "sort",
        "description": "What to sort results by. Can be either `created`, `updated`, `comments`.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["created", "updated", "comments"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "direction",
        "description": "The direction of the sort. Can be either `asc` or `desc`.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["asc", "desc"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "since",
        "description": "Only issues updated at or after this time are returned. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"id\":1,\"node_id\":\"MDU6SXNzdWUx\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347\",\"repository_url\":\"https://api.github.com/repos/octocat/Hello-World\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347/comments\",\"events_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347/events\",\"html_url\":\"https://github.com/octocat/Hello-World/issues/1347\",\"number\":1347,\"state\":\"open\",\"title\":\"Found a bug\",\"body\":\"I'm having a problem with this.\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"labels\":[{\"id\":208045946,\"node_id\":\"MDU6TGFiZWwyMDgwNDU5NDY=\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/labels/bug\",\"name\":\"bug\",\"description\":\"Something isn't working\",\"color\":\"f29513\",\"default\":true}],\"assignee\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"assignees\":[{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false}],\"milestone\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/milestones/1\",\"html_url\":\"https://github.com/octocat/Hello-World/milestones/v1.0\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/milestones/1/labels\",\"id\":1002604,\"node_id\":\"MDk6TWlsZXN0b25lMTAwMjYwNA==\",\"number\":1,\"state\":\"open\",\"title\":\"v1.0\",\"description\":\"Tracking milestone for version 1.0\",\"creator\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"open_issues\":4,\"closed_issues\":8,\"created_at\":\"2011-04-10T20:09:31Z\",\"updated_at\":\"2014-03-03T18:58:10Z\",\"closed_at\":\"2013-02-12T13:22:01Z\",\"due_on\":\"2012-10-09T23:39:01Z\"},\"locked\":true,\"active_lock_reason\":\"too heated\",\"comments\":0,\"pull_request\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/pulls/1347\",\"html_url\":\"https://github.com/octocat/Hello-World/pull/1347\",\"diff_url\":\"https://github.com/octocat/Hello-World/pull/1347.diff\",\"patch_url\":\"https://github.com/octocat/Hello-World/pull/1347.patch\"},\"closed_at\":null,\"created_at\":\"2011-04-22T13:33:48Z\",\"updated_at\":\"2011-04-22T13:33:48Z\",\"repository\":{\"id\":1296269,\"node_id\":\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\"name\":\"Hello-World\",\"full_name\":\"octocat/Hello-World\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"private\":false,\"html_url\":\"https://github.com/octocat/Hello-World\",\"description\":\"This your first repo!\",\"fork\":false,\"url\":\"https://api.github.com/repos/octocat/Hello-World\",\"archive_url\":\"http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\"assignees_url\":\"http://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\"blobs_url\":\"http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\"branches_url\":\"http://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\"collaborators_url\":\"http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\"comments_url\":\"http://api.github.com/repos/octocat/Hello-World/comments{/number}\",\"commits_url\":\"http://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\"compare_url\":\"http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\"contents_url\":\"http://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\"contributors_url\":\"http://api.github.com/repos/octocat/Hello-World/contributors\",\"deployments_url\":\"http://api.github.com/repos/octocat/Hello-World/deployments\",\"downloads_url\":\"http://api.github.com/repos/octocat/Hello-World/downloads\",\"events_url\":\"http://api.github.com/repos/octocat/Hello-World/events\",\"forks_url\":\"http://api.github.com/repos/octocat/Hello-World/forks\",\"git_commits_url\":\"http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\"git_refs_url\":\"http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\"git_tags_url\":\"http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\"git_url\":\"git:github.com/octocat/Hello-World.git\",\"issue_comment_url\":\"http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\"issue_events_url\":\"http://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\"issues_url\":\"http://api.github.com/repos/octocat/Hello-World/issues{/number}\",\"keys_url\":\"http://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\"labels_url\":\"http://api.github.com/repos/octocat/Hello-World/labels{/name}\",\"languages_url\":\"http://api.github.com/repos/octocat/Hello-World/languages\",\"merges_url\":\"http://api.github.com/repos/octocat/Hello-World/merges\",\"milestones_url\":\"http://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\"notifications_url\":\"http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\"pulls_url\":\"http://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\"releases_url\":\"http://api.github.com/repos/octocat/Hello-World/releases{/id}\",\"ssh_url\":\"git@github.com:octocat/Hello-World.git\",\"stargazers_url\":\"http://api.github.com/repos/octocat/Hello-World/stargazers\",\"statuses_url\":\"http://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\"subscribers_url\":\"http://api.github.com/repos/octocat/Hello-World/subscribers\",\"subscription_url\":\"http://api.github.com/repos/octocat/Hello-World/subscription\",\"tags_url\":\"http://api.github.com/repos/octocat/Hello-World/tags\",\"teams_url\":\"http://api.github.com/repos/octocat/Hello-World/teams\",\"trees_url\":\"http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\"clone_url\":\"https://github.com/octocat/Hello-World.git\",\"mirror_url\":\"git:git.example.com/octocat/Hello-World\",\"hooks_url\":\"http://api.github.com/repos/octocat/Hello-World/hooks\",\"svn_url\":\"https://svn.github.com/octocat/Hello-World\",\"homepage\":\"https://github.com\",\"language\":null,\"forks_count\":9,\"stargazers_count\":80,\"watchers_count\":80,\"size\":108,\"default_branch\":\"master\",\"open_issues_count\":0,\"topics\":[\"octocat\",\"atom\",\"electron\",\"api\"],\"has_issues\":true,\"has_projects\":true,\"has_wiki\":true,\"has_pages\":false,\"has_downloads\":true,\"archived\":false,\"disabled\":false,\"pushed_at\":\"2011-01-26T19:06:43Z\",\"created_at\":\"2011-01-26T19:01:12Z\",\"updated_at\":\"2011-01-26T19:14:43Z\",\"permissions\":{\"admin\":false,\"push\":false,\"pull\":true},\"allow_rebase_merge\":true,\"allow_squash_merge\":true,\"allow_merge_commit\":true,\"subscribers_count\":42,\"network_count\":0,\"anonymous_access_enabled\":false}}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "List commonly used licenses",
    "scope": "licenses",
    "id": "listCommonlyUsed",
    "method": "GET",
    "url": "/licenses",
    "isDeprecated": false,
    "description": "",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/licenses/#list-commonly-used-licenses",
    "previews": [],
    "headers": [],
    "parameters": [],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"key\":\"mit\",\"name\":\"MIT License\",\"spdx_id\":\"MIT\",\"url\":\"https://api.github.com/licenses/mit\",\"node_id\":\"MDc6TGljZW5zZW1pdA==\"},{\"key\":\"lgpl-3.0\",\"name\":\"GNU Lesser General Public License v3.0\",\"spdx_id\":\"LGPL-3.0\",\"url\":\"https://api.github.com/licenses/lgpl-3.0\"},{\"key\":\"mpl-2.0\",\"name\":\"Mozilla Public License 2.0\",\"spdx_id\":\"MPL-2.0\",\"url\":\"https://api.github.com/licenses/mpl-2.0\"},{\"key\":\"agpl-3.0\",\"name\":\"GNU Affero General Public License v3.0\",\"spdx_id\":\"AGPL-3.0\",\"url\":\"https://api.github.com/licenses/agpl-3.0\"},{\"key\":\"unlicense\",\"name\":\"The Unlicense\",\"spdx_id\":\"Unlicense\",\"url\":\"https://api.github.com/licenses/unlicense\"},{\"key\":\"apache-2.0\",\"name\":\"Apache License 2.0\",\"spdx_id\":\"Apache-2.0\",\"url\":\"https://api.github.com/licenses/apache-2.0\"},{\"key\":\"gpl-3.0\",\"name\":\"GNU General Public License v3.0\",\"spdx_id\":\"GPL-3.0\",\"url\":\"https://api.github.com/licenses/gpl-3.0\"}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "List commonly used licenses",
    "scope": "licenses",
    "id": "list",
    "method": "GET",
    "url": "/licenses",
    "isDeprecated": false,
    "description": "",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/licenses/#list-commonly-used-licenses",
    "previews": [],
    "headers": [],
    "parameters": [],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"key\":\"mit\",\"name\":\"MIT License\",\"spdx_id\":\"MIT\",\"url\":\"https://api.github.com/licenses/mit\",\"node_id\":\"MDc6TGljZW5zZW1pdA==\"},{\"key\":\"lgpl-3.0\",\"name\":\"GNU Lesser General Public License v3.0\",\"spdx_id\":\"LGPL-3.0\",\"url\":\"https://api.github.com/licenses/lgpl-3.0\"},{\"key\":\"mpl-2.0\",\"name\":\"Mozilla Public License 2.0\",\"spdx_id\":\"MPL-2.0\",\"url\":\"https://api.github.com/licenses/mpl-2.0\"},{\"key\":\"agpl-3.0\",\"name\":\"GNU Affero General Public License v3.0\",\"spdx_id\":\"AGPL-3.0\",\"url\":\"https://api.github.com/licenses/agpl-3.0\"},{\"key\":\"unlicense\",\"name\":\"The Unlicense\",\"spdx_id\":\"Unlicense\",\"url\":\"https://api.github.com/licenses/unlicense\"},{\"key\":\"apache-2.0\",\"name\":\"Apache License 2.0\",\"spdx_id\":\"Apache-2.0\",\"url\":\"https://api.github.com/licenses/apache-2.0\"},{\"key\":\"gpl-3.0\",\"name\":\"GNU General Public License v3.0\",\"spdx_id\":\"GPL-3.0\",\"url\":\"https://api.github.com/licenses/gpl-3.0\"}]"
          }
        ]
      }
    ],
    "renamed": {
      "before": { "scope": "licenses", "id": "list" },
      "after": { "scope": "licenses", "id": "listCommonlyUsed" },
      "date": "2019-03-05",
      "note": "\"List all licenses\" renamed to \"List commonly used licenses\""
    }
  },
  {
    "name": "Get an individual license",
    "scope": "licenses",
    "id": "get",
    "method": "GET",
    "url": "/licenses/{license}",
    "isDeprecated": false,
    "description": "",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/licenses/#get-an-individual-license",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "license",
        "description": "license parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"key\":\"mit\",\"name\":\"MIT License\",\"spdx_id\":\"MIT\",\"url\":\"https://api.github.com/licenses/mit\",\"node_id\":\"MDc6TGljZW5zZW1pdA==\",\"html_url\":\"http://choosealicense.com/licenses/mit/\",\"description\":\"A permissive license that is short and to the point. It lets people do anything with your code with proper attribution and without warranty.\",\"implementation\":\"Create a text file (typically named LICENSE or LICENSE.txt) in the root of your source code and copy the text of the license into the file. Replace [year] with the current year and [fullname] with the name (or names) of the copyright holders.\",\"permissions\":[\"commercial-use\",\"modifications\",\"distribution\",\"sublicense\",\"private-use\"],\"conditions\":[\"include-copyright\"],\"limitations\":[\"no-liability\"],\"body\":\"\\n\\nThe MIT License (MIT)\\n\\nCopyright (c) [year] [fullname]\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \\\"Software\\\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n\",\"featured\":true}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Render an arbitrary Markdown document",
    "scope": "markdown",
    "id": "render",
    "method": "POST",
    "url": "/markdown",
    "isDeprecated": false,
    "description": "",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/markdown/#render-an-arbitrary-markdown-document",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "text",
        "description": "The Markdown text to render in HTML. Markdown content must be 400 KB or less.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "mode",
        "description": "The rendering mode. Can be either:  \n\\* `markdown` to render a document in plain Markdown, just like README.md files are rendered.  \n\\* `gfm` to render a document in [GitHub Flavored Markdown](https://github.github.com/gfm/), which creates links for user mentions as well as references to SHA-1 hashes, issues, and pull requests.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": ["markdown", "gfm"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "context",
        "description": "The repository context to use when creating references in `gfm` mode. Omit this parameter when using `markdown` mode.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [],
    "renamed": null
  },
  {
    "name": "Render a Markdown document in raw mode",
    "scope": "markdown",
    "id": "renderRaw",
    "method": "POST",
    "url": "/markdown/raw",
    "isDeprecated": false,
    "description": "You must send Markdown as plain text (using a `Content-Type` header of `text/plain` or `text/x-markdown`) to this endpoint, rather than using JSON format. In raw mode, [GitHub Flavored Markdown](https://github.github.com/gfm/) is not supported and Markdown will be rendered in plain format like a README.md file. Markdown content must be 400 KB or less.\n\n",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/markdown/#render-a-markdown-document-in-raw-mode",
    "previews": [],
    "headers": [
      { "name": "content-type", "value": "text/plain; charset=utf-8" }
    ],
    "parameters": [
      {
        "name": "data",
        "description": "data parameter",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": true,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [],
    "renamed": null
  },
  {
    "name": "Get",
    "scope": "meta",
    "id": "get",
    "method": "GET",
    "url": "/meta",
    "isDeprecated": false,
    "description": "If you access this endpoint on your organization's [GitHub Enterprise Server](https://enterprise.github.com/) installation, this endpoint provides information about that installation.\n\n**Note:** GitHub Enterprise release 2.17 and higher no longer allows admins to install new GitHub Services, and existing services will stop working in GitHub Enterprise release 2.20 and higher. You can use the [Replacing GitHub Services guide](https://developer.github.com/enterprise/2.17/v3/guides/replacing-github-services) to help you update your services to webhooks.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/meta/#meta",
    "previews": [],
    "headers": [],
    "parameters": [],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"verifiable_password_authentication\":true,\"installed_version\":\"2.17.0\",\"github_services_sha\":\"3a0f86fb8db8eea7ccbb9a95f325ddbedfb25e15\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "List public events for a network of repositories",
    "scope": "activity",
    "id": "listPublicEventsForRepoNetwork",
    "method": "GET",
    "url": "/networks/{owner}/{repo}/events",
    "isDeprecated": false,
    "description": "",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/activity/events/#list-public-events-for-a-network-of-repositories",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [],
    "renamed": null
  },
  {
    "name": "List your notifications",
    "scope": "activity",
    "id": "listNotifications",
    "method": "GET",
    "url": "/notifications",
    "isDeprecated": false,
    "description": "List all notifications for the current user, sorted by most recently updated.\n\nThe following example uses the `since` parameter to list notifications that have been updated after the specified time.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/activity/notifications/#list-your-notifications",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "all",
        "description": "If `true`, show notifications marked as read.",
        "in": "QUERY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "participating",
        "description": "If `true`, only shows notifications in which the user is directly participating or mentioned.",
        "in": "QUERY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "since",
        "description": "Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "before",
        "description": "Only show notifications updated before the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"id\":\"1\",\"repository\":{\"id\":1296269,\"node_id\":\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\"name\":\"Hello-World\",\"full_name\":\"octocat/Hello-World\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"private\":false,\"html_url\":\"https://github.com/octocat/Hello-World\",\"description\":\"This your first repo!\",\"fork\":false,\"url\":\"https://api.github.com/repos/octocat/Hello-World\",\"archive_url\":\"http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\"assignees_url\":\"http://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\"blobs_url\":\"http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\"branches_url\":\"http://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\"collaborators_url\":\"http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\"comments_url\":\"http://api.github.com/repos/octocat/Hello-World/comments{/number}\",\"commits_url\":\"http://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\"compare_url\":\"http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\"contents_url\":\"http://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\"contributors_url\":\"http://api.github.com/repos/octocat/Hello-World/contributors\",\"deployments_url\":\"http://api.github.com/repos/octocat/Hello-World/deployments\",\"downloads_url\":\"http://api.github.com/repos/octocat/Hello-World/downloads\",\"events_url\":\"http://api.github.com/repos/octocat/Hello-World/events\",\"forks_url\":\"http://api.github.com/repos/octocat/Hello-World/forks\",\"git_commits_url\":\"http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\"git_refs_url\":\"http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\"git_tags_url\":\"http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\"git_url\":\"git:github.com/octocat/Hello-World.git\",\"issue_comment_url\":\"http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\"issue_events_url\":\"http://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\"issues_url\":\"http://api.github.com/repos/octocat/Hello-World/issues{/number}\",\"keys_url\":\"http://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\"labels_url\":\"http://api.github.com/repos/octocat/Hello-World/labels{/name}\",\"languages_url\":\"http://api.github.com/repos/octocat/Hello-World/languages\",\"merges_url\":\"http://api.github.com/repos/octocat/Hello-World/merges\",\"milestones_url\":\"http://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\"notifications_url\":\"http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\"pulls_url\":\"http://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\"releases_url\":\"http://api.github.com/repos/octocat/Hello-World/releases{/id}\",\"ssh_url\":\"git@github.com:octocat/Hello-World.git\",\"stargazers_url\":\"http://api.github.com/repos/octocat/Hello-World/stargazers\",\"statuses_url\":\"http://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\"subscribers_url\":\"http://api.github.com/repos/octocat/Hello-World/subscribers\",\"subscription_url\":\"http://api.github.com/repos/octocat/Hello-World/subscription\",\"tags_url\":\"http://api.github.com/repos/octocat/Hello-World/tags\",\"teams_url\":\"http://api.github.com/repos/octocat/Hello-World/teams\",\"trees_url\":\"http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\"},\"subject\":{\"title\":\"Greetings\",\"url\":\"https://api.github.com/repos/octokit/octokit.rb/issues/123\",\"latest_comment_url\":\"https://api.github.com/repos/octokit/octokit.rb/issues/comments/123\",\"type\":\"Issue\"},\"reason\":\"subscribed\",\"unread\":true,\"updated_at\":\"2014-11-07T22:01:45Z\",\"last_read_at\":\"2014-11-07T22:01:45Z\",\"url\":\"https://api.github.com/notifications/threads/1\"}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Mark as read",
    "scope": "activity",
    "id": "markAsRead",
    "method": "PUT",
    "url": "/notifications",
    "isDeprecated": false,
    "description": "Marks a notification as \"read\" removes it from the [default view on GitHub Enterprise Server](https://github.com/notifications). If the number of notifications is too large to complete in one request, you will receive a `202 Accepted` status and GitHub will run an asynchronous process to mark notifications as \"read.\" To check whether any \"unread\" notifications remain, you can use the [List your notifications](https://developer.github.com/enterprise/2.17/v3/activity/notifications/#list-your-notifications) endpoint and pass the query parameter `all=false`.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/activity/notifications/#mark-as-read",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "last_read_at",
        "description": "Describes the last point that notifications were checked. Anything updated since this time will not be updated. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`. Default: The current timestamp.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [],
    "renamed": null
  },
  {
    "name": "View a single thread",
    "scope": "activity",
    "id": "getThread",
    "method": "GET",
    "url": "/notifications/threads/{thread_id}",
    "isDeprecated": false,
    "description": "",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/activity/notifications/#view-a-single-thread",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "thread_id",
        "description": "thread_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":\"1\",\"repository\":{\"id\":1296269,\"node_id\":\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\"name\":\"Hello-World\",\"full_name\":\"octocat/Hello-World\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"private\":false,\"html_url\":\"https://github.com/octocat/Hello-World\",\"description\":\"This your first repo!\",\"fork\":false,\"url\":\"https://api.github.com/repos/octocat/Hello-World\",\"archive_url\":\"http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\"assignees_url\":\"http://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\"blobs_url\":\"http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\"branches_url\":\"http://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\"collaborators_url\":\"http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\"comments_url\":\"http://api.github.com/repos/octocat/Hello-World/comments{/number}\",\"commits_url\":\"http://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\"compare_url\":\"http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\"contents_url\":\"http://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\"contributors_url\":\"http://api.github.com/repos/octocat/Hello-World/contributors\",\"deployments_url\":\"http://api.github.com/repos/octocat/Hello-World/deployments\",\"downloads_url\":\"http://api.github.com/repos/octocat/Hello-World/downloads\",\"events_url\":\"http://api.github.com/repos/octocat/Hello-World/events\",\"forks_url\":\"http://api.github.com/repos/octocat/Hello-World/forks\",\"git_commits_url\":\"http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\"git_refs_url\":\"http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\"git_tags_url\":\"http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\"git_url\":\"git:github.com/octocat/Hello-World.git\",\"issue_comment_url\":\"http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\"issue_events_url\":\"http://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\"issues_url\":\"http://api.github.com/repos/octocat/Hello-World/issues{/number}\",\"keys_url\":\"http://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\"labels_url\":\"http://api.github.com/repos/octocat/Hello-World/labels{/name}\",\"languages_url\":\"http://api.github.com/repos/octocat/Hello-World/languages\",\"merges_url\":\"http://api.github.com/repos/octocat/Hello-World/merges\",\"milestones_url\":\"http://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\"notifications_url\":\"http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\"pulls_url\":\"http://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\"releases_url\":\"http://api.github.com/repos/octocat/Hello-World/releases{/id}\",\"ssh_url\":\"git@github.com:octocat/Hello-World.git\",\"stargazers_url\":\"http://api.github.com/repos/octocat/Hello-World/stargazers\",\"statuses_url\":\"http://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\"subscribers_url\":\"http://api.github.com/repos/octocat/Hello-World/subscribers\",\"subscription_url\":\"http://api.github.com/repos/octocat/Hello-World/subscription\",\"tags_url\":\"http://api.github.com/repos/octocat/Hello-World/tags\",\"teams_url\":\"http://api.github.com/repos/octocat/Hello-World/teams\",\"trees_url\":\"http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\"},\"subject\":{\"title\":\"Greetings\",\"url\":\"https://api.github.com/repos/octokit/octokit.rb/issues/123\",\"latest_comment_url\":\"https://api.github.com/repos/octokit/octokit.rb/issues/comments/123\",\"type\":\"Issue\"},\"reason\":\"subscribed\",\"unread\":true,\"updated_at\":\"2014-11-07T22:01:45Z\",\"last_read_at\":\"2014-11-07T22:01:45Z\",\"url\":\"https://api.github.com/notifications/threads/1\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Mark a thread as read",
    "scope": "activity",
    "id": "markThreadAsRead",
    "method": "PATCH",
    "url": "/notifications/threads/{thread_id}",
    "isDeprecated": false,
    "description": "",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/activity/notifications/#mark-a-thread-as-read",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "thread_id",
        "description": "thread_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [],
    "renamed": null
  },
  {
    "name": "Get a thread subscription",
    "scope": "activity",
    "id": "getThreadSubscription",
    "method": "GET",
    "url": "/notifications/threads/{thread_id}/subscription",
    "isDeprecated": false,
    "description": "This checks to see if the current user is subscribed to a thread. You can also [get a repository subscription](https://developer.github.com/enterprise/2.17/v3/activity/watching/#get-a-repository-subscription).\n\nNote that subscriptions are only generated if a user is participating in a conversation--for example, they've replied to the thread, were **@mentioned**, or manually subscribe to a thread.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/activity/notifications/#get-a-thread-subscription",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "thread_id",
        "description": "thread_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"subscribed\":true,\"ignored\":false,\"reason\":null,\"created_at\":\"2012-10-06T21:34:12Z\",\"url\":\"https://api.github.com/notifications/threads/1/subscription\",\"thread_url\":\"https://api.github.com/notifications/threads/1\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Set a thread subscription",
    "scope": "activity",
    "id": "setThreadSubscription",
    "method": "PUT",
    "url": "/notifications/threads/{thread_id}/subscription",
    "isDeprecated": false,
    "description": "This lets you subscribe or unsubscribe from a conversation.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/activity/notifications/#set-a-thread-subscription",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "thread_id",
        "description": "thread_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "ignored",
        "description": "Unsubscribes and subscribes you to a conversation. Set `ignored` to `true` to block all notifications from this thread.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"subscribed\":true,\"ignored\":false,\"reason\":null,\"created_at\":\"2012-10-06T21:34:12Z\",\"url\":\"https://api.github.com/notifications/threads/1/subscription\",\"thread_url\":\"https://api.github.com/notifications/threads/1\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Delete a thread subscription",
    "scope": "activity",
    "id": "deleteThreadSubscription",
    "method": "DELETE",
    "url": "/notifications/threads/{thread_id}/subscription",
    "isDeprecated": false,
    "description": "Mutes all future notifications for a conversation until you comment on the thread or get **@mention**ed.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/activity/notifications/#delete-a-thread-subscription",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "thread_id",
        "description": "thread_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [],
    "renamed": null
  },
  {
    "name": "List all organizations",
    "scope": "orgs",
    "id": "list",
    "method": "GET",
    "url": "/organizations",
    "isDeprecated": false,
    "description": "Lists all organizations, in the order that they were created on GitHub Enterprise Server.\n\n**Note:** Pagination is powered exclusively by the `since` parameter. Use the [Link header](https://developer.github.com/enterprise/2.17/v3/#link-header) to get the URL for the next page of organizations.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/orgs/#list-all-organizations",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "since",
        "description": "The integer ID of the last Organization that you've seen.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"login\":\"github\",\"id\":1,\"node_id\":\"MDEyOk9yZ2FuaXphdGlvbjE=\",\"url\":\"https://api.github.com/orgs/github\",\"repos_url\":\"https://api.github.com/orgs/github/repos\",\"events_url\":\"https://api.github.com/orgs/github/events\",\"hooks_url\":\"https://api.github.com/orgs/github/hooks\",\"issues_url\":\"https://api.github.com/orgs/github/issues\",\"members_url\":\"https://api.github.com/orgs/github/members{/member}\",\"public_members_url\":\"https://api.github.com/orgs/github/public_members{/member}\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"description\":\"A great organization\"}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Get an organization",
    "scope": "orgs",
    "id": "get",
    "method": "GET",
    "url": "/orgs/{org}",
    "isDeprecated": false,
    "description": "To see many of the organization response values, you need to be an authenticated organization owner with the `admin:org` scope. When the value of `two_factor_requirement_enabled` is `true`, the organization requires all members, billing managers, and outside collaborators to enable [two-factor authentication](https://help.github.com/articles/securing-your-account-with-two-factor-authentication-2fa/).",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/orgs/#get-an-organization",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "org parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"login\":\"github\",\"id\":1,\"node_id\":\"MDEyOk9yZ2FuaXphdGlvbjE=\",\"url\":\"https://api.github.com/orgs/github\",\"repos_url\":\"https://api.github.com/orgs/github/repos\",\"events_url\":\"https://api.github.com/orgs/github/events\",\"hooks_url\":\"https://api.github.com/orgs/github/hooks\",\"issues_url\":\"https://api.github.com/orgs/github/issues\",\"members_url\":\"https://api.github.com/orgs/github/members{/member}\",\"public_members_url\":\"https://api.github.com/orgs/github/public_members{/member}\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"description\":\"A great organization\",\"name\":\"github\",\"company\":\"GitHub\",\"blog\":\"https://github.com/blog\",\"location\":\"San Francisco\",\"email\":\"octocat@github.com\",\"has_organization_projects\":true,\"has_repository_projects\":true,\"public_repos\":2,\"public_gists\":1,\"followers\":20,\"following\":0,\"html_url\":\"https://github.com/octocat\",\"created_at\":\"2008-01-14T04:33:35Z\",\"type\":\"Organization\",\"total_private_repos\":100,\"owned_private_repos\":100,\"private_gists\":81,\"disk_usage\":10000,\"collaborators\":8,\"billing_email\":\"support@github.com\",\"plan\":{\"name\":\"Medium\",\"space\":400,\"private_repos\":20},\"default_repository_settings\":\"read\",\"members_can_create_repositories\":true,\"two_factor_requirement_enabled\":true,\"members_allowed_repository_creation_type\":\"all\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Edit an organization",
    "scope": "orgs",
    "id": "update",
    "method": "PATCH",
    "url": "/orgs/{org}",
    "isDeprecated": false,
    "description": "**Note:** The new `members_allowed_repository_creation_type` replaces the functionality of `members_can_create_repositories`.\n\nSetting `members_allowed_repository_creation_type` will override the value of `members_can_create_repositories` in the following ways:\n\n*   Setting `members_allowed_repository_creation_type` to `all` or `private` sets `members_can_create_repositories` to `true`.\n*   Setting `members_allowed_repository_creation_type` to `none` sets `members_can_create_repositories` to `false`.\n*   If you omit `members_allowed_repository_creation_type`, `members_can_create_repositories` is not modified.\n\nEnables an authenticated organization owner with the `admin:org` scope to update the organization's profile and member privileges.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/orgs/#edit-an-organization",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "org parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "billing_email",
        "description": "Billing email address. This address is not publicized.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "company",
        "description": "The company name.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "email",
        "description": "The publicly visible email address.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "location",
        "description": "The location.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "name",
        "description": "The shorthand name of the company.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "description",
        "description": "The description of the company.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "has_organization_projects",
        "description": "Toggles whether an organization can use organization projects.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "has_repository_projects",
        "description": "Toggles whether repositories that belong to the organization can use repository projects.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "default_repository_permission",
        "description": "Default permission level members have for organization repositories:  \n\\* `read` - can pull, but not push to or administer this repository.  \n\\* `write` - can pull and push, but not administer this repository.  \n\\* `admin` - can pull, push, and administer this repository.  \n\\* `none` - no permissions granted by default.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": ["read", "write", "admin", "none"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "members_can_create_repositories",
        "description": "Toggles the ability of non-admin organization members to create repositories. Can be one of:  \n\\* `true` - all organization members can create repositories.  \n\\* `false` - only organization owners can create repositories.  \nDefault: `true`  \n**Note:** A parameter can override this parameter. See `members_allowed_repository_creation_type` in this table for details. **Note:** A parameter can override this parameter. See `members_allowed_repository_creation_type` in this table for details.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "members_allowed_repository_creation_type",
        "description": "Specifies which types of repositories non-admin organization members can create. Can be one of:  \n\\* `all` - all organization members can create public and private repositories.  \n\\* `private` - members can create private repositories. This option is only available to repositories that are part of an organization on GitHub Enterprise Cloud.  \n\\* `none` - only admin members can create repositories.  \n**Note:** Using this parameter overrides values set in `members_can_create_repositories`. See [this note](https://developer.github.com/enterprise/2.17/v3/orgs/#members_can_create_repositories) for details.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": ["all", "private", "none"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"login\":\"github\",\"id\":1,\"node_id\":\"MDEyOk9yZ2FuaXphdGlvbjE=\",\"url\":\"https://api.github.com/orgs/github\",\"repos_url\":\"https://api.github.com/orgs/github/repos\",\"events_url\":\"https://api.github.com/orgs/github/events\",\"hooks_url\":\"https://api.github.com/orgs/github/hooks\",\"issues_url\":\"https://api.github.com/orgs/github/issues\",\"members_url\":\"https://api.github.com/orgs/github/members{/member}\",\"public_members_url\":\"https://api.github.com/orgs/github/public_members{/member}\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"description\":\"A great organization\",\"name\":\"github\",\"company\":\"GitHub\",\"blog\":\"https://github.com/blog\",\"location\":\"San Francisco\",\"email\":\"octocat@github.com\",\"has_organization_projects\":true,\"has_repository_projects\":true,\"public_repos\":2,\"public_gists\":1,\"followers\":20,\"following\":0,\"html_url\":\"https://github.com/octocat\",\"created_at\":\"2008-01-14T04:33:35Z\",\"type\":\"Organization\",\"total_private_repos\":100,\"owned_private_repos\":100,\"private_gists\":81,\"disk_usage\":10000,\"collaborators\":8,\"billing_email\":\"support@github.com\",\"plan\":{\"name\":\"Medium\",\"space\":400,\"private_repos\":20},\"default_repository_settings\":\"read\",\"members_can_create_repositories\":true,\"two_factor_requirement_enabled\":true,\"members_allowed_repository_creation_type\":\"all\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "List public events for an organization",
    "scope": "activity",
    "id": "listPublicEventsForOrg",
    "method": "GET",
    "url": "/orgs/{org}/events",
    "isDeprecated": false,
    "description": "",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/activity/events/#list-public-events-for-an-organization",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "org parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [],
    "renamed": null
  },
  {
    "name": "List hooks",
    "scope": "orgs",
    "id": "listHooks",
    "method": "GET",
    "url": "/orgs/{org}/hooks",
    "isDeprecated": false,
    "description": "",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/orgs/hooks/#list-hooks",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "org parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"id\":1,\"url\":\"https://api.github.com/orgs/octocat/hooks/1\",\"ping_url\":\"https://api.github.com/orgs/octocat/hooks/1/pings\",\"name\":\"web\",\"events\":[\"push\",\"pull_request\"],\"active\":true,\"config\":{\"url\":\"http://example.com\",\"content_type\":\"json\"},\"updated_at\":\"2011-09-06T20:39:23Z\",\"created_at\":\"2011-09-06T17:26:27Z\"}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Create a hook",
    "scope": "orgs",
    "id": "createHook",
    "method": "POST",
    "url": "/orgs/{org}/hooks",
    "isDeprecated": false,
    "description": "Here's how you can create a hook that posts payloads in JSON format:",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/orgs/hooks/#create-a-hook",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "org parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "name",
        "description": "Must be passed as \"web\".",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "config",
        "description": "Key/value pairs to provide settings for this webhook. [These are defined below](https://developer.github.com/enterprise/2.17/v3/orgs/hooks/#create-hook-config-params).",
        "in": "BODY",
        "type": "object",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "config.url",
        "description": "The URL to which the payloads will be delivered.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "config.content_type",
        "description": "The media type used to serialize the payloads. Supported values include `json` and `form`. The default is `form`.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "config.secret",
        "description": "If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value in the [`X-Hub-Signature`](https://developer.github.com/enterprise/2.17/webhooks/#delivery-headers) header.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "config.insecure_ssl",
        "description": "Determines whether the SSL certificate of the host for `url` will be verified when delivering payloads. Supported values include `0` (verification is performed) and `1` (verification is not performed). The default is `0`. **We strongly recommend not setting this to `1` as you are subject to man-in-the-middle and other attacks.**",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "events",
        "description": "Determines what [events](https://developer.github.com/enterprise/2.17/v3/activity/events/types/) the hook is triggered for.",
        "in": "BODY",
        "type": "string[]",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "active",
        "description": "Determines if notifications are sent when the webhook is triggered. Set to `true` to send notifications.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 201,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":1,\"url\":\"https://api.github.com/orgs/octocat/hooks/1\",\"ping_url\":\"https://api.github.com/orgs/octocat/hooks/1/pings\",\"name\":\"web\",\"events\":[\"push\",\"pull_request\"],\"active\":true,\"config\":{\"url\":\"http://example.com\",\"content_type\":\"json\"},\"updated_at\":\"2011-09-06T20:39:23Z\",\"created_at\":\"2011-09-06T17:26:27Z\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Get single hook",
    "scope": "orgs",
    "id": "getHook",
    "method": "GET",
    "url": "/orgs/{org}/hooks/{hook_id}",
    "isDeprecated": false,
    "description": "",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/orgs/hooks/#get-single-hook",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "org parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "hook_id",
        "description": "hook_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":1,\"url\":\"https://api.github.com/orgs/octocat/hooks/1\",\"ping_url\":\"https://api.github.com/orgs/octocat/hooks/1/pings\",\"name\":\"web\",\"events\":[\"push\",\"pull_request\"],\"active\":true,\"config\":{\"url\":\"http://example.com\",\"content_type\":\"json\"},\"updated_at\":\"2011-09-06T20:39:23Z\",\"created_at\":\"2011-09-06T17:26:27Z\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Edit a hook",
    "scope": "orgs",
    "id": "updateHook",
    "method": "PATCH",
    "url": "/orgs/{org}/hooks/{hook_id}",
    "isDeprecated": false,
    "description": "",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/orgs/hooks/#edit-a-hook",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "org parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "hook_id",
        "description": "hook_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "config",
        "description": "Key/value pairs to provide settings for this webhook. [These are defined below](https://developer.github.com/enterprise/2.17/v3/orgs/hooks/#update-hook-config-params).",
        "in": "BODY",
        "type": "object",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "config.url",
        "description": "The URL to which the payloads will be delivered.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "config.content_type",
        "description": "The media type used to serialize the payloads. Supported values include `json` and `form`. The default is `form`.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "config.secret",
        "description": "If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value in the [`X-Hub-Signature`](https://developer.github.com/enterprise/2.17/webhooks/#delivery-headers) header.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "config.insecure_ssl",
        "description": "Determines whether the SSL certificate of the host for `url` will be verified when delivering payloads. Supported values include `0` (verification is performed) and `1` (verification is not performed). The default is `0`. **We strongly recommend not setting this to `1` as you are subject to man-in-the-middle and other attacks.**",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "events",
        "description": "Determines what [events](https://developer.github.com/enterprise/2.17/v3/activity/events/types/) the hook is triggered for.",
        "in": "BODY",
        "type": "string[]",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "active",
        "description": "Determines if notifications are sent when the webhook is triggered. Set to `true` to send notifications.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":1,\"url\":\"https://api.github.com/orgs/octocat/hooks/1\",\"ping_url\":\"https://api.github.com/orgs/octocat/hooks/1/pings\",\"name\":\"web\",\"events\":[\"pull_request\"],\"active\":true,\"config\":{\"url\":\"http://example.com\",\"content_type\":\"json\"},\"updated_at\":\"2011-09-06T20:39:23Z\",\"created_at\":\"2011-09-06T17:26:27Z\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Delete a hook",
    "scope": "orgs",
    "id": "deleteHook",
    "method": "DELETE",
    "url": "/orgs/{org}/hooks/{hook_id}",
    "isDeprecated": false,
    "description": "",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/orgs/hooks/#delete-a-hook",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "org parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "hook_id",
        "description": "hook_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [],
    "renamed": null
  },
  {
    "name": "Ping a hook",
    "scope": "orgs",
    "id": "pingHook",
    "method": "POST",
    "url": "/orgs/{org}/hooks/{hook_id}/pings",
    "isDeprecated": false,
    "description": "This will trigger a [ping event](https://developer.github.com/enterprise/2.17/webhooks/#ping-event) to be sent to the hook.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/orgs/hooks/#ping-a-hook",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "org parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "hook_id",
        "description": "hook_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [],
    "renamed": null
  },
  {
    "name": "Get an organization installation",
    "scope": "apps",
    "id": "getOrgInstallation",
    "method": "GET",
    "url": "/orgs/{org}/installation",
    "isDeprecated": false,
    "description": "Enables an authenticated GitHub App to find the organization's installation information.\n\nYou must use a [JWT](https://developer.github.com/enterprise/2.17/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/apps/#get-an-organization-installation",
    "previews": [{ "name": "machine-man" }],
    "headers": [
      {
        "name": "accept",
        "value": "application/vnd.github.machine-man-preview+json"
      }
    ],
    "parameters": [
      {
        "name": "org",
        "description": "org parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":1,\"account\":{\"login\":\"github\",\"id\":1,\"avatar_url\":\"https://github.com/images/error/hubot_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/orgs/github\",\"html_url\":\"https://github.com/github\",\"followers_url\":\"https://api.github.com/users/github/followers\",\"following_url\":\"https://api.github.com/users/github/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/github/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/github/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/github/subscriptions\",\"organizations_url\":\"https://api.github.com/users/github/orgs\",\"repos_url\":\"https://api.github.com/orgs/github/repos\",\"events_url\":\"https://api.github.com/orgs/github/events\",\"received_events_url\":\"https://api.github.com/users/github/received_events\",\"type\":\"Organization\",\"site_admin\":false},\"repository_selection\":\"all\",\"access_tokens_url\":\"https://api.github.com/installations/1/access_tokens\",\"repositories_url\":\"https://api.github.com/installation/repositories\",\"html_url\":\"https://github.com/organizations/github/settings/installations/1\",\"app_id\":1,\"target_id\":1,\"target_type\":\"Organization\",\"permissions\":{\"checks\":\"write\",\"metadata\":\"read\",\"contents\":\"read\"},\"events\":[\"push\",\"pull_request\"],\"created_at\":\"2018-02-09T20:51:14Z\",\"updated_at\":\"2018-02-09T20:51:14Z\",\"single_file_name\":null}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Get an organization installation",
    "scope": "apps",
    "id": "findOrgInstallation",
    "method": "GET",
    "url": "/orgs/{org}/installation",
    "isDeprecated": false,
    "description": "Enables an authenticated GitHub App to find the organization's installation information.\n\nYou must use a [JWT](https://developer.github.com/enterprise/2.17/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/apps/#get-an-organization-installation",
    "previews": [{ "name": "machine-man" }],
    "headers": [
      {
        "name": "accept",
        "value": "application/vnd.github.machine-man-preview+json"
      }
    ],
    "parameters": [
      {
        "name": "org",
        "description": "org parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":1,\"account\":{\"login\":\"github\",\"id\":1,\"avatar_url\":\"https://github.com/images/error/hubot_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/orgs/github\",\"html_url\":\"https://github.com/github\",\"followers_url\":\"https://api.github.com/users/github/followers\",\"following_url\":\"https://api.github.com/users/github/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/github/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/github/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/github/subscriptions\",\"organizations_url\":\"https://api.github.com/users/github/orgs\",\"repos_url\":\"https://api.github.com/orgs/github/repos\",\"events_url\":\"https://api.github.com/orgs/github/events\",\"received_events_url\":\"https://api.github.com/users/github/received_events\",\"type\":\"Organization\",\"site_admin\":false},\"repository_selection\":\"all\",\"access_tokens_url\":\"https://api.github.com/installations/1/access_tokens\",\"repositories_url\":\"https://api.github.com/installation/repositories\",\"html_url\":\"https://github.com/organizations/github/settings/installations/1\",\"app_id\":1,\"target_id\":1,\"target_type\":\"Organization\",\"permissions\":{\"checks\":\"write\",\"metadata\":\"read\",\"contents\":\"read\"},\"events\":[\"push\",\"pull_request\"],\"created_at\":\"2018-02-09T20:51:14Z\",\"updated_at\":\"2018-02-09T20:51:14Z\",\"single_file_name\":null}"
          }
        ]
      }
    ],
    "renamed": {
      "before": { "scope": "apps", "id": "findOrgInstallation" },
      "after": { "scope": "apps", "id": "getOrgInstallation" },
      "date": "2019-04-10",
      "note": "\"Find organization installation\" renamed to \"Get an organization installation\""
    }
  },
  {
    "name": "List all issues for a given organization assigned to the authenticated user",
    "scope": "issues",
    "id": "listForOrg",
    "method": "GET",
    "url": "/orgs/{org}/issues",
    "isDeprecated": false,
    "description": "**Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this reason, \"Issues\" endpoints may return both issues and pull requests in the response. You can identify pull requests by the `pull_request` key.\n\nBe aware that the `id` of a pull request returned from \"Issues\" endpoints will be an _issue id_. To find out the pull request id, use the \"[List pull requests](https://developer.github.com/enterprise/2.17/v3/pulls/#list-pull-requests)\" endpoint.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/issues/#list-issues",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "org parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "filter",
        "description": "Indicates which sorts of issues to return. Can be one of:  \n\\* `assigned`: Issues assigned to you  \n\\* `created`: Issues created by you  \n\\* `mentioned`: Issues mentioning you  \n\\* `subscribed`: Issues you're subscribed to updates for  \n\\* `all`: All issues the authenticated user can see, regardless of participation or creation",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["assigned", "created", "mentioned", "subscribed", "all"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "state",
        "description": "Indicates the state of the issues to return. Can be either `open`, `closed`, or `all`.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["open", "closed", "all"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "labels",
        "description": "A list of comma separated label names. Example: `bug,ui,@high`",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "sort",
        "description": "What to sort results by. Can be either `created`, `updated`, `comments`.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["created", "updated", "comments"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "direction",
        "description": "The direction of the sort. Can be either `asc` or `desc`.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["asc", "desc"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "since",
        "description": "Only issues updated at or after this time are returned. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"id\":1,\"node_id\":\"MDU6SXNzdWUx\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347\",\"repository_url\":\"https://api.github.com/repos/octocat/Hello-World\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347/comments\",\"events_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347/events\",\"html_url\":\"https://github.com/octocat/Hello-World/issues/1347\",\"number\":1347,\"state\":\"open\",\"title\":\"Found a bug\",\"body\":\"I'm having a problem with this.\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"labels\":[{\"id\":208045946,\"node_id\":\"MDU6TGFiZWwyMDgwNDU5NDY=\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/labels/bug\",\"name\":\"bug\",\"description\":\"Something isn't working\",\"color\":\"f29513\",\"default\":true}],\"assignee\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"assignees\":[{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false}],\"milestone\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/milestones/1\",\"html_url\":\"https://github.com/octocat/Hello-World/milestones/v1.0\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/milestones/1/labels\",\"id\":1002604,\"node_id\":\"MDk6TWlsZXN0b25lMTAwMjYwNA==\",\"number\":1,\"state\":\"open\",\"title\":\"v1.0\",\"description\":\"Tracking milestone for version 1.0\",\"creator\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"open_issues\":4,\"closed_issues\":8,\"created_at\":\"2011-04-10T20:09:31Z\",\"updated_at\":\"2014-03-03T18:58:10Z\",\"closed_at\":\"2013-02-12T13:22:01Z\",\"due_on\":\"2012-10-09T23:39:01Z\"},\"locked\":true,\"active_lock_reason\":\"too heated\",\"comments\":0,\"pull_request\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/pulls/1347\",\"html_url\":\"https://github.com/octocat/Hello-World/pull/1347\",\"diff_url\":\"https://github.com/octocat/Hello-World/pull/1347.diff\",\"patch_url\":\"https://github.com/octocat/Hello-World/pull/1347.patch\"},\"closed_at\":null,\"created_at\":\"2011-04-22T13:33:48Z\",\"updated_at\":\"2011-04-22T13:33:48Z\",\"repository\":{\"id\":1296269,\"node_id\":\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\"name\":\"Hello-World\",\"full_name\":\"octocat/Hello-World\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"private\":false,\"html_url\":\"https://github.com/octocat/Hello-World\",\"description\":\"This your first repo!\",\"fork\":false,\"url\":\"https://api.github.com/repos/octocat/Hello-World\",\"archive_url\":\"http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\"assignees_url\":\"http://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\"blobs_url\":\"http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\"branches_url\":\"http://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\"collaborators_url\":\"http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\"comments_url\":\"http://api.github.com/repos/octocat/Hello-World/comments{/number}\",\"commits_url\":\"http://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\"compare_url\":\"http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\"contents_url\":\"http://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\"contributors_url\":\"http://api.github.com/repos/octocat/Hello-World/contributors\",\"deployments_url\":\"http://api.github.com/repos/octocat/Hello-World/deployments\",\"downloads_url\":\"http://api.github.com/repos/octocat/Hello-World/downloads\",\"events_url\":\"http://api.github.com/repos/octocat/Hello-World/events\",\"forks_url\":\"http://api.github.com/repos/octocat/Hello-World/forks\",\"git_commits_url\":\"http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\"git_refs_url\":\"http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\"git_tags_url\":\"http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\"git_url\":\"git:github.com/octocat/Hello-World.git\",\"issue_comment_url\":\"http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\"issue_events_url\":\"http://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\"issues_url\":\"http://api.github.com/repos/octocat/Hello-World/issues{/number}\",\"keys_url\":\"http://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\"labels_url\":\"http://api.github.com/repos/octocat/Hello-World/labels{/name}\",\"languages_url\":\"http://api.github.com/repos/octocat/Hello-World/languages\",\"merges_url\":\"http://api.github.com/repos/octocat/Hello-World/merges\",\"milestones_url\":\"http://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\"notifications_url\":\"http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\"pulls_url\":\"http://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\"releases_url\":\"http://api.github.com/repos/octocat/Hello-World/releases{/id}\",\"ssh_url\":\"git@github.com:octocat/Hello-World.git\",\"stargazers_url\":\"http://api.github.com/repos/octocat/Hello-World/stargazers\",\"statuses_url\":\"http://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\"subscribers_url\":\"http://api.github.com/repos/octocat/Hello-World/subscribers\",\"subscription_url\":\"http://api.github.com/repos/octocat/Hello-World/subscription\",\"tags_url\":\"http://api.github.com/repos/octocat/Hello-World/tags\",\"teams_url\":\"http://api.github.com/repos/octocat/Hello-World/teams\",\"trees_url\":\"http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\"clone_url\":\"https://github.com/octocat/Hello-World.git\",\"mirror_url\":\"git:git.example.com/octocat/Hello-World\",\"hooks_url\":\"http://api.github.com/repos/octocat/Hello-World/hooks\",\"svn_url\":\"https://svn.github.com/octocat/Hello-World\",\"homepage\":\"https://github.com\",\"language\":null,\"forks_count\":9,\"stargazers_count\":80,\"watchers_count\":80,\"size\":108,\"default_branch\":\"master\",\"open_issues_count\":0,\"topics\":[\"octocat\",\"atom\",\"electron\",\"api\"],\"has_issues\":true,\"has_projects\":true,\"has_wiki\":true,\"has_pages\":false,\"has_downloads\":true,\"archived\":false,\"disabled\":false,\"pushed_at\":\"2011-01-26T19:06:43Z\",\"created_at\":\"2011-01-26T19:01:12Z\",\"updated_at\":\"2011-01-26T19:14:43Z\",\"permissions\":{\"admin\":false,\"push\":false,\"pull\":true},\"allow_rebase_merge\":true,\"allow_squash_merge\":true,\"allow_merge_commit\":true,\"subscribers_count\":42,\"network_count\":0,\"anonymous_access_enabled\":false}}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Members list",
    "scope": "orgs",
    "id": "listMembers",
    "method": "GET",
    "url": "/orgs/{org}/members",
    "isDeprecated": false,
    "description": "List all users who are members of an organization. If the authenticated user is also a member of this organization then both concealed and public members will be returned.\n\n",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/orgs/members/#members-list",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "org parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "filter",
        "description": "Filter members returned in the list. Can be one of:  \n\\* `2fa_disabled` - Members without [two-factor authentication](https://github.com/blog/1614-two-factor-authentication) enabled. Available for organization owners.  \n\\* `all` - All members the authenticated user can see.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["2fa_disabled", "all"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "role",
        "description": "Filter members returned by their role. Can be one of:  \n\\* `all` - All members of the organization, regardless of role.  \n\\* `admin` - Organization owners.  \n\\* `member` - Non-owner organization members.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["all", "admin", "member"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Check membership",
    "scope": "orgs",
    "id": "checkMembership",
    "method": "GET",
    "url": "/orgs/{org}/members/{username}",
    "isDeprecated": false,
    "description": "Check if a user is, publicly or privately, a member of the organization.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/orgs/members/#check-membership",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "org parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "username",
        "description": "username parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [],
    "renamed": null
  },
  {
    "name": "Remove a member",
    "scope": "orgs",
    "id": "removeMember",
    "method": "DELETE",
    "url": "/orgs/{org}/members/{username}",
    "isDeprecated": false,
    "description": "Removing a user from this list will remove them from all teams and they will no longer have any access to the organization's repositories.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/orgs/members/#remove-a-member",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "org parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "username",
        "description": "username parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [],
    "renamed": null
  },
  {
    "name": "Get organization membership",
    "scope": "orgs",
    "id": "getMembership",
    "method": "GET",
    "url": "/orgs/{org}/memberships/{username}",
    "isDeprecated": false,
    "description": "In order to get a user's membership with an organization, the authenticated user must be an organization member.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/orgs/members/#get-organization-membership",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "org parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "username",
        "description": "username parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"url\":\"https://api.github.com/orgs/octocat/memberships/defunkt\",\"state\":\"active\",\"role\":\"admin\",\"organization_url\":\"https://api.github.com/orgs/octocat\",\"organization\":{\"login\":\"github\",\"id\":1,\"node_id\":\"MDEyOk9yZ2FuaXphdGlvbjE=\",\"url\":\"https://api.github.com/orgs/github\",\"repos_url\":\"https://api.github.com/orgs/github/repos\",\"events_url\":\"https://api.github.com/orgs/github/events\",\"hooks_url\":\"https://api.github.com/orgs/github/hooks\",\"issues_url\":\"https://api.github.com/orgs/github/issues\",\"members_url\":\"https://api.github.com/orgs/github/members{/member}\",\"public_members_url\":\"https://api.github.com/orgs/github/public_members{/member}\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"description\":\"A great organization\"},\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false}}"
          },
          {
            "data": "{\"url\":\"https://api.github.com/orgs/octocat/memberships/defunkt\",\"state\":\"active\",\"role\":\"member\",\"organization_url\":\"https://api.github.com/orgs/octocat\",\"organization\":{\"login\":\"github\",\"id\":1,\"node_id\":\"MDEyOk9yZ2FuaXphdGlvbjE=\",\"url\":\"https://api.github.com/orgs/github\",\"repos_url\":\"https://api.github.com/orgs/github/repos\",\"events_url\":\"https://api.github.com/orgs/github/events\",\"hooks_url\":\"https://api.github.com/orgs/github/hooks\",\"issues_url\":\"https://api.github.com/orgs/github/issues\",\"members_url\":\"https://api.github.com/orgs/github/members{/member}\",\"public_members_url\":\"https://api.github.com/orgs/github/public_members{/member}\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"description\":\"A great organization\"},\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false}}"
          },
          {
            "data": "{\"url\":\"https://api.github.com/orgs/invitocat/memberships/defunkt\",\"state\":\"pending\",\"role\":\"member\",\"organization_url\":\"https://api.github.com/orgs/invitocat\",\"organization\":{\"login\":\"github\",\"id\":1,\"node_id\":\"MDEyOk9yZ2FuaXphdGlvbjE=\",\"url\":\"https://api.github.com/orgs/github\",\"repos_url\":\"https://api.github.com/orgs/github/repos\",\"events_url\":\"https://api.github.com/orgs/github/events\",\"hooks_url\":\"https://api.github.com/orgs/github/hooks\",\"issues_url\":\"https://api.github.com/orgs/github/issues\",\"members_url\":\"https://api.github.com/orgs/github/members{/member}\",\"public_members_url\":\"https://api.github.com/orgs/github/public_members{/member}\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"description\":\"A great organization\"},\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false}}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Add or update organization membership",
    "scope": "orgs",
    "id": "addOrUpdateMembership",
    "method": "PUT",
    "url": "/orgs/{org}/memberships/{username}",
    "isDeprecated": false,
    "description": "Only authenticated organization owners can add a member to the organization or update the member's role.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/orgs/members/#add-or-update-organization-membership",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "org parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "username",
        "description": "username parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "role",
        "description": "The role to give the user in the organization. Can be one of:  \n\\* `admin` - The user will become an owner of the organization.  \n\\* `member` - The user will become a non-owner member of the organization.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": ["admin", "member"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"url\":\"https://api.github.com/orgs/octocat/memberships/defunkt\",\"state\":\"active\",\"role\":\"admin\",\"organization_url\":\"https://api.github.com/orgs/octocat\",\"organization\":{\"login\":\"github\",\"id\":1,\"node_id\":\"MDEyOk9yZ2FuaXphdGlvbjE=\",\"url\":\"https://api.github.com/orgs/github\",\"repos_url\":\"https://api.github.com/orgs/github/repos\",\"events_url\":\"https://api.github.com/orgs/github/events\",\"hooks_url\":\"https://api.github.com/orgs/github/hooks\",\"issues_url\":\"https://api.github.com/orgs/github/issues\",\"members_url\":\"https://api.github.com/orgs/github/members{/member}\",\"public_members_url\":\"https://api.github.com/orgs/github/public_members{/member}\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"description\":\"A great organization\"},\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false}}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Remove organization membership",
    "scope": "orgs",
    "id": "removeMembership",
    "method": "DELETE",
    "url": "/orgs/{org}/memberships/{username}",
    "isDeprecated": false,
    "description": "In order to remove a user's membership with an organization, the authenticated user must be an organization owner.\n\nIf the specified user is an active member of the organization, this will remove them from the organization. If the specified user has been invited to the organization, this will cancel their invitation. The specified user will receive an email notification in both cases.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/orgs/members/#remove-organization-membership",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "org parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "username",
        "description": "username parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [],
    "renamed": null
  },
  {
    "name": "List outside collaborators",
    "scope": "orgs",
    "id": "listOutsideCollaborators",
    "method": "GET",
    "url": "/orgs/{org}/outside_collaborators",
    "isDeprecated": false,
    "description": "List all users who are outside collaborators of an organization.\n\n",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/orgs/outside_collaborators/#list-outside-collaborators",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "org parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "filter",
        "description": "Filter the list of outside collaborators. Can be one of:  \n\\* `2fa_disabled`: Outside collaborators without [two-factor authentication](https://github.com/blog/1614-two-factor-authentication) enabled.  \n\\* `all`: All outside collaborators.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["2fa_disabled", "all"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Remove outside collaborator",
    "scope": "orgs",
    "id": "removeOutsideCollaborator",
    "method": "DELETE",
    "url": "/orgs/{org}/outside_collaborators/{username}",
    "isDeprecated": false,
    "description": "Removing a user from this list will remove them from all the organization's repositories.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/orgs/outside_collaborators/#remove-outside-collaborator",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "org parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "username",
        "description": "username parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 422,
        "description": "Response if user is a member of the organization",
        "examples": [
          {
            "data": "{\"message\":\"You cannot specify an organization member to remove as an outside collaborator.\",\"documentation_url\":\"https://developer.github.com/enterprise/2.17/v3/orgs/outside_collaborators/#remove-outside-collaborator\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Convert member to outside collaborator",
    "scope": "orgs",
    "id": "convertMemberToOutsideCollaborator",
    "method": "PUT",
    "url": "/orgs/{org}/outside_collaborators/{username}",
    "isDeprecated": false,
    "description": "When an organization member is converted to an outside collaborator, they'll only have access to the repositories that their current team membership allows. The user will no longer be a member of the organization. For more information, see \"[Converting an organization member to an outside collaborator](https://help.github.com/articles/converting-an-organization-member-to-an-outside-collaborator/)\".",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/orgs/outside_collaborators/#convert-member-to-outside-collaborator",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "org parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "username",
        "description": "username parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 403,
        "description": "response",
        "examples": [
          {
            "data": "{\"message\":\"Cannot convert the last owner to an outside collaborator\",\"documentation_url\":\"https://developer.github.com/enterprise/2.17/v3/orgs/outside_collaborators/#convert-member-to-outside-collaborator\"}"
          },
          {
            "data": "{\"message\":\"<user> is not a member of the <organization> organization.\",\"documentation_url\":\"https://developer.github.com/enterprise/2.17/v3/orgs/outside_collaborators/#convert-member-to-outside-collaborator\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "List pre-receive hooks for organization",
    "scope": "enterpriseAdmin",
    "id": "listPreReceiveHooksForOrg",
    "method": "GET",
    "url": "/orgs/{org}/pre-receive-hooks",
    "isDeprecated": false,
    "description": "List all pre-receive hooks that are enabled or testing for this organization as well as any disabled hooks that can be configured at the organization level. Globally disabled pre-receive hooks that do not allow downstream configuration are not listed.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/enterprise-admin/org_pre_receive_hooks/#list-pre-receive-hooks",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "org parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"id\":42,\"name\":\"Check Commits\",\"enforcement\":\"disabled\",\"configuration_url\":\"https://github.example.com/api/v3/admin/pre-receive-hooks/42\",\"allow_downstream_configuration\":true}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Get a single pre-receive hook for organization",
    "scope": "enterpriseAdmin",
    "id": "getPreReceiveHookForOrg",
    "method": "GET",
    "url": "/orgs/{org}/pre-receive-hooks/{pre_receive_hook_id}",
    "isDeprecated": false,
    "description": "",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/enterprise-admin/org_pre_receive_hooks/#get-a-single-pre-receive-hook",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "org parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "pre_receive_hook_id",
        "description": "pre_receive_hook_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":42,\"name\":\"Check Commits\",\"enforcement\":\"disabled\",\"configuration_url\":\"https://github.example.com/api/v3/admin/pre-receive-hooks/42\",\"allow_downstream_configuration\":true}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Update pre-receive hook enforcement for organization",
    "scope": "enterpriseAdmin",
    "id": "updatePreReceiveHookEnforcementForOrg",
    "method": "PATCH",
    "url": "/orgs/{org}/pre-receive-hooks/{pre_receive_hook_id}",
    "isDeprecated": false,
    "description": "For pre-receive hooks which are allowed to be configured at the org level, you can set `enforcement` and `allow_downstream_configuration`",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/enterprise-admin/org_pre_receive_hooks/#update-pre-receive-hook-enforcement",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "org parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "pre_receive_hook_id",
        "description": "pre_receive_hook_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":42,\"name\":\"Check Commits\",\"enforcement\":\"enabled\",\"configuration_url\":\"https://github.example.com/api/v3/orgs/octocat/pre-receive-hooks/42\",\"allow_downstream_configuration\":false}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Remove enforcement overrides for a pre-receive hook for organization",
    "scope": "enterpriseAdmin",
    "id": "removeEnforcementOverridesForPreReceiveHookForOrg",
    "method": "DELETE",
    "url": "/orgs/{org}/pre-receive-hooks/{pre_receive_hook_id}",
    "isDeprecated": false,
    "description": "Removes any overrides for this hook at the org level for this org.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/enterprise-admin/org_pre_receive_hooks/#remove-enforcement-overrides-for-a-pre-receive-hook",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "org parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "pre_receive_hook_id",
        "description": "pre_receive_hook_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":42,\"name\":\"Check Commits\",\"enforcement\":\"disabled\",\"configuration_url\":\"https://github.example.com/api/v3/admin/pre-receive-hooks/42\",\"allow_downstream_configuration\":true}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "List organization projects",
    "scope": "projects",
    "id": "listForOrg",
    "method": "GET",
    "url": "/orgs/{org}/projects",
    "isDeprecated": false,
    "description": "Lists the projects in an organization. Returns a `404 Not Found` status if projects are disabled in the organization. If you do not have sufficient privileges to perform this action, a `401 Unauthorized` or `410 Gone` status is returned.\n\ns",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/projects/#list-organization-projects",
    "previews": [{ "name": "inertia" }],
    "headers": [
      {
        "name": "accept",
        "value": "application/vnd.github.inertia-preview+json"
      }
    ],
    "parameters": [
      {
        "name": "org",
        "description": "org parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "state",
        "description": "Indicates the state of the projects to return. Can be either `open`, `closed`, or `all`.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["open", "closed", "all"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"owner_url\":\"https://api.github.com/orgs/octocat\",\"url\":\"https://api.github.com/projects/1002605\",\"html_url\":\"https://github.com/orgs/api-playground/projects/1\",\"columns_url\":\"https://api.github.com/projects/1002605/columns\",\"id\":1002605,\"node_id\":\"MDc6UHJvamVjdDEwMDI2MDU=\",\"name\":\"Organization Roadmap\",\"body\":\"High-level roadmap for the upcoming year.\",\"number\":1,\"state\":\"open\",\"creator\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"created_at\":\"2011-04-11T20:09:31Z\",\"updated_at\":\"2014-03-04T18:58:10Z\"}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Create an organization project",
    "scope": "projects",
    "id": "createForOrg",
    "method": "POST",
    "url": "/orgs/{org}/projects",
    "isDeprecated": false,
    "description": "Creates an organization project board. Returns a `404 Not Found` status if projects are disabled in the organization. If you do not have sufficient privileges to perform this action, a `401 Unauthorized` or `410 Gone` status is returned.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/projects/#create-an-organization-project",
    "previews": [{ "name": "inertia" }],
    "headers": [
      {
        "name": "accept",
        "value": "application/vnd.github.inertia-preview+json"
      }
    ],
    "parameters": [
      {
        "name": "org",
        "description": "org parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "name",
        "description": "The name of the project.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "body",
        "description": "The description of the project.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 201,
        "description": "response",
        "examples": [
          {
            "data": "{\"owner_url\":\"https://api.github.com/orgs/octocat\",\"url\":\"https://api.github.com/projects/1002605\",\"html_url\":\"https://github.com/orgs/api-playground/projects/1\",\"columns_url\":\"https://api.github.com/projects/1002605/columns\",\"id\":1002605,\"node_id\":\"MDc6UHJvamVjdDEwMDI2MDU=\",\"name\":\"Organization Roadmap\",\"body\":\"High-level roadmap for the upcoming year.\",\"number\":1,\"state\":\"open\",\"creator\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"created_at\":\"2011-04-11T20:09:31Z\",\"updated_at\":\"2014-03-04T18:58:10Z\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Public members list",
    "scope": "orgs",
    "id": "listPublicMembers",
    "method": "GET",
    "url": "/orgs/{org}/public_members",
    "isDeprecated": false,
    "description": "Members of an organization can choose to have their membership publicized or not.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/orgs/members/#public-members-list",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "org parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Check public membership",
    "scope": "orgs",
    "id": "checkPublicMembership",
    "method": "GET",
    "url": "/orgs/{org}/public_members/{username}",
    "isDeprecated": false,
    "description": "",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/orgs/members/#check-public-membership",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "org parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "username",
        "description": "username parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [],
    "renamed": null
  },
  {
    "name": "Publicize a user's membership",
    "scope": "orgs",
    "id": "publicizeMembership",
    "method": "PUT",
    "url": "/orgs/{org}/public_members/{username}",
    "isDeprecated": false,
    "description": "The user can publicize their own membership. (A user cannot publicize the membership for another user.)\n\nNote that you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTTP verbs](https://developer.github.com/enterprise/2.17/v3/#http-verbs).\"",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/orgs/members/#publicize-a-users-membership",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "org parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "username",
        "description": "username parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [],
    "renamed": null
  },
  {
    "name": "Conceal a user's membership",
    "scope": "orgs",
    "id": "concealMembership",
    "method": "DELETE",
    "url": "/orgs/{org}/public_members/{username}",
    "isDeprecated": false,
    "description": "",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/orgs/members/#conceal-a-users-membership",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "org parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "username",
        "description": "username parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [],
    "renamed": null
  },
  {
    "name": "List organization repositories",
    "scope": "repos",
    "id": "listForOrg",
    "method": "GET",
    "url": "/orgs/{org}/repos",
    "isDeprecated": false,
    "description": "Lists repositories for the specified organization.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/repos/#list-organization-repositories",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "org parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "type",
        "description": "Specifies the types of repositories you want returned. Can be one of `all`, `public`, `private`, `forks`, `sources`, `member`.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["all", "public", "private", "forks", "sources", "member"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "sort",
        "description": "Can be one of `created`, `updated`, `pushed`, `full_name`.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["created", "updated", "pushed", "full_name"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "direction",
        "description": "Can be one of `asc` or `desc`. Default: when using `full_name`: `asc`, otherwise `desc`",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["asc", "desc"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"id\":1296269,\"node_id\":\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\"name\":\"Hello-World\",\"full_name\":\"octocat/Hello-World\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"private\":false,\"html_url\":\"https://github.com/octocat/Hello-World\",\"description\":\"This your first repo!\",\"fork\":false,\"url\":\"https://api.github.com/repos/octocat/Hello-World\",\"archive_url\":\"http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\"assignees_url\":\"http://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\"blobs_url\":\"http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\"branches_url\":\"http://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\"collaborators_url\":\"http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\"comments_url\":\"http://api.github.com/repos/octocat/Hello-World/comments{/number}\",\"commits_url\":\"http://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\"compare_url\":\"http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\"contents_url\":\"http://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\"contributors_url\":\"http://api.github.com/repos/octocat/Hello-World/contributors\",\"deployments_url\":\"http://api.github.com/repos/octocat/Hello-World/deployments\",\"downloads_url\":\"http://api.github.com/repos/octocat/Hello-World/downloads\",\"events_url\":\"http://api.github.com/repos/octocat/Hello-World/events\",\"forks_url\":\"http://api.github.com/repos/octocat/Hello-World/forks\",\"git_commits_url\":\"http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\"git_refs_url\":\"http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\"git_tags_url\":\"http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\"git_url\":\"git:github.com/octocat/Hello-World.git\",\"issue_comment_url\":\"http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\"issue_events_url\":\"http://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\"issues_url\":\"http://api.github.com/repos/octocat/Hello-World/issues{/number}\",\"keys_url\":\"http://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\"labels_url\":\"http://api.github.com/repos/octocat/Hello-World/labels{/name}\",\"languages_url\":\"http://api.github.com/repos/octocat/Hello-World/languages\",\"merges_url\":\"http://api.github.com/repos/octocat/Hello-World/merges\",\"milestones_url\":\"http://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\"notifications_url\":\"http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\"pulls_url\":\"http://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\"releases_url\":\"http://api.github.com/repos/octocat/Hello-World/releases{/id}\",\"ssh_url\":\"git@github.com:octocat/Hello-World.git\",\"stargazers_url\":\"http://api.github.com/repos/octocat/Hello-World/stargazers\",\"statuses_url\":\"http://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\"subscribers_url\":\"http://api.github.com/repos/octocat/Hello-World/subscribers\",\"subscription_url\":\"http://api.github.com/repos/octocat/Hello-World/subscription\",\"tags_url\":\"http://api.github.com/repos/octocat/Hello-World/tags\",\"teams_url\":\"http://api.github.com/repos/octocat/Hello-World/teams\",\"trees_url\":\"http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\"clone_url\":\"https://github.com/octocat/Hello-World.git\",\"mirror_url\":\"git:git.example.com/octocat/Hello-World\",\"hooks_url\":\"http://api.github.com/repos/octocat/Hello-World/hooks\",\"svn_url\":\"https://svn.github.com/octocat/Hello-World\",\"homepage\":\"https://github.com\",\"language\":null,\"forks_count\":9,\"stargazers_count\":80,\"watchers_count\":80,\"size\":108,\"default_branch\":\"master\",\"open_issues_count\":0,\"topics\":[\"octocat\",\"atom\",\"electron\",\"api\"],\"has_issues\":true,\"has_projects\":true,\"has_wiki\":true,\"has_pages\":false,\"has_downloads\":true,\"archived\":false,\"disabled\":false,\"pushed_at\":\"2011-01-26T19:06:43Z\",\"created_at\":\"2011-01-26T19:01:12Z\",\"updated_at\":\"2011-01-26T19:14:43Z\",\"permissions\":{\"admin\":false,\"push\":false,\"pull\":true},\"subscribers_count\":42,\"network_count\":0,\"anonymous_access_enabled\":false,\"license\":{\"key\":\"mit\",\"name\":\"MIT License\",\"spdx_id\":\"MIT\",\"url\":\"https://api.github.com/licenses/mit\",\"node_id\":\"MDc6TGljZW5zZW1pdA==\"}}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Creates a new repository in the specified organization",
    "scope": "repos",
    "id": "createInOrg",
    "method": "POST",
    "url": "/orgs/{org}/repos",
    "isDeprecated": false,
    "description": "Creates a new repository for the authenticated user.\n\n**OAuth scope requirements**\n\nWhen using [OAuth](https://developer.github.com/enterprise/2.17/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/), authorizations must include:\n\n*   `public_repo` scope or `repo` scope to create a public repository\n*   `repo` scope to create a private repository",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/repos/#create",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "org parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "name",
        "description": "The name of the repository.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "description",
        "description": "A short description of the repository.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "homepage",
        "description": "A URL with more information about the repository.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "private",
        "description": "Either `true` to create a private repository or `false` to create a public one. Creating private repositories requires a paid GitHub account.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "has_issues",
        "description": "Either `true` to enable issues for this repository or `false` to disable them.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "has_projects",
        "description": "Either `true` to enable projects for this repository or `false` to disable them. **Note:** If you're creating a repository in an organization that has disabled repository projects, the default is `false`, and if you pass `true`, the API returns an error.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "has_wiki",
        "description": "Either `true` to enable the wiki for this repository or `false` to disable it.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "team_id",
        "description": "The id of the team that will be granted access to this repository. This is only valid when creating a repository in an organization.",
        "in": "BODY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "auto_init",
        "description": "Pass `true` to create an initial commit with empty README.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "gitignore_template",
        "description": "Desired language or platform [.gitignore template](https://github.com/github/gitignore) to apply. Use the name of the template without the extension. For example, \"Haskell\".",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "license_template",
        "description": "Choose an [open source license template](https://choosealicense.com/) that best suits your needs, and then use the [license keyword](https://help.github.com/articles/licensing-a-repository/#searching-github-by-license-type) as the `license_template` string. For example, \"mit\" or \"mpl-2.0\".",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "allow_squash_merge",
        "description": "Either `true` to allow squash-merging pull requests, or `false` to prevent squash-merging.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "allow_merge_commit",
        "description": "Either `true` to allow merging pull requests with a merge commit, or `false` to prevent merging pull requests with merge commits.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "allow_rebase_merge",
        "description": "Either `true` to allow rebase-merging pull requests, or `false` to prevent rebase-merging.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 201,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":1296269,\"node_id\":\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\"name\":\"Hello-World\",\"full_name\":\"octocat/Hello-World\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"private\":false,\"html_url\":\"https://github.com/octocat/Hello-World\",\"description\":\"This your first repo!\",\"fork\":false,\"url\":\"https://api.github.com/repos/octocat/Hello-World\",\"archive_url\":\"http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\"assignees_url\":\"http://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\"blobs_url\":\"http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\"branches_url\":\"http://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\"collaborators_url\":\"http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\"comments_url\":\"http://api.github.com/repos/octocat/Hello-World/comments{/number}\",\"commits_url\":\"http://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\"compare_url\":\"http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\"contents_url\":\"http://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\"contributors_url\":\"http://api.github.com/repos/octocat/Hello-World/contributors\",\"deployments_url\":\"http://api.github.com/repos/octocat/Hello-World/deployments\",\"downloads_url\":\"http://api.github.com/repos/octocat/Hello-World/downloads\",\"events_url\":\"http://api.github.com/repos/octocat/Hello-World/events\",\"forks_url\":\"http://api.github.com/repos/octocat/Hello-World/forks\",\"git_commits_url\":\"http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\"git_refs_url\":\"http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\"git_tags_url\":\"http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\"git_url\":\"git:github.com/octocat/Hello-World.git\",\"issue_comment_url\":\"http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\"issue_events_url\":\"http://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\"issues_url\":\"http://api.github.com/repos/octocat/Hello-World/issues{/number}\",\"keys_url\":\"http://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\"labels_url\":\"http://api.github.com/repos/octocat/Hello-World/labels{/name}\",\"languages_url\":\"http://api.github.com/repos/octocat/Hello-World/languages\",\"merges_url\":\"http://api.github.com/repos/octocat/Hello-World/merges\",\"milestones_url\":\"http://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\"notifications_url\":\"http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\"pulls_url\":\"http://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\"releases_url\":\"http://api.github.com/repos/octocat/Hello-World/releases{/id}\",\"ssh_url\":\"git@github.com:octocat/Hello-World.git\",\"stargazers_url\":\"http://api.github.com/repos/octocat/Hello-World/stargazers\",\"statuses_url\":\"http://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\"subscribers_url\":\"http://api.github.com/repos/octocat/Hello-World/subscribers\",\"subscription_url\":\"http://api.github.com/repos/octocat/Hello-World/subscription\",\"tags_url\":\"http://api.github.com/repos/octocat/Hello-World/tags\",\"teams_url\":\"http://api.github.com/repos/octocat/Hello-World/teams\",\"trees_url\":\"http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\"clone_url\":\"https://github.com/octocat/Hello-World.git\",\"mirror_url\":\"git:git.example.com/octocat/Hello-World\",\"hooks_url\":\"http://api.github.com/repos/octocat/Hello-World/hooks\",\"svn_url\":\"https://svn.github.com/octocat/Hello-World\",\"homepage\":\"https://github.com\",\"language\":null,\"forks_count\":9,\"stargazers_count\":80,\"watchers_count\":80,\"size\":108,\"default_branch\":\"master\",\"open_issues_count\":0,\"topics\":[\"octocat\",\"atom\",\"electron\",\"api\"],\"has_issues\":true,\"has_projects\":true,\"has_wiki\":true,\"has_pages\":false,\"has_downloads\":true,\"archived\":false,\"disabled\":false,\"pushed_at\":\"2011-01-26T19:06:43Z\",\"created_at\":\"2011-01-26T19:01:12Z\",\"updated_at\":\"2011-01-26T19:14:43Z\",\"permissions\":{\"admin\":false,\"push\":false,\"pull\":true},\"allow_rebase_merge\":true,\"allow_squash_merge\":true,\"allow_merge_commit\":true,\"subscribers_count\":42,\"network_count\":0,\"anonymous_access_enabled\":false}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "List teams",
    "scope": "teams",
    "id": "list",
    "method": "GET",
    "url": "/orgs/{org}/teams",
    "isDeprecated": false,
    "description": "",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/teams/#list-teams",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "org parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"id\":1,\"node_id\":\"MDQ6VGVhbTE=\",\"url\":\"https://api.github.com/teams/1\",\"html_url\":\"https://api.github.com/teams/justice-league\",\"name\":\"Justice League\",\"slug\":\"justice-league\",\"description\":\"A great team.\",\"privacy\":\"closed\",\"permission\":\"admin\",\"members_url\":\"https://api.github.com/teams/1/members{/member}\",\"repositories_url\":\"https://api.github.com/teams/1/repos\",\"parent\":null}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Create team",
    "scope": "teams",
    "id": "create",
    "method": "POST",
    "url": "/orgs/{org}/teams",
    "isDeprecated": false,
    "description": "To create a team, the authenticated user must be a member or owner of `:org`. By default, organization members can create teams. Organization owners can limit team creation to organization owners. For more information, see \"[Setting team creation permissions](https://help.github.com/en/articles/setting-team-creation-permissions-in-your-organization).\"\n\nWhen you create a new team, you automatically become a team maintainer without explicitly adding yourself to the optional array of `maintainers`. For more information, see \"[About teams](https://help.github.com/en/github/setting-up-and-managing-organizations-and-teams/about-teams)\" in the GitHub Help documentation.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/teams/#create-team",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "org parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "name",
        "description": "The name of the team.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "description",
        "description": "The description of the team.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "maintainers",
        "description": "List GitHub Enterprise Server IDs for organization members who will become team maintainers.",
        "in": "BODY",
        "type": "string[]",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo_names",
        "description": "The full name (e.g., \"organization-name/repository-name\") of repositories to add the team to.",
        "in": "BODY",
        "type": "string[]",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "privacy",
        "description": "The level of privacy this team should have. The options are:  \n**For a non-nested team:**  \n\\* `secret` - only visible to organization owners and members of this team.  \n\\* `closed` - visible to all members of this organization.  \nDefault: `secret`  \n**For a parent or child team:**  \n\\* `closed` - visible to all members of this organization.  \nDefault for child team: `closed`  \n**Note**: You must pass the `hellcat-preview` media type to set privacy default to `closed` for child teams.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": ["secret", "closed"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "permission",
        "description": "**Deprecated**. The permission that new repositories will be added to the team with when none is specified. Can be one of:  \n\\* `pull` - team members can pull, but not push to or administer newly-added repositories.  \n\\* `push` - team members can pull and push, but not administer newly-added repositories.  \n\\* `admin` - team members can pull, push and administer newly-added repositories.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": ["pull", "push", "admin"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "parent_team_id",
        "description": "The ID of a team to set as the parent team. **Note**: You must pass the `hellcat-preview` media type to use this parameter.",
        "in": "BODY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "ldap_dn",
        "description": "The [distinguished name](https://www.ldap.com/ldap-dns-and-rdns) (DN) of the LDAP entry to map to a team. [LDAP synchronization](https://help.github.com/enterprise/admin/guides/user-management/using-ldap/#enabling-ldap-sync) must be enabled to map LDAP entries to a team. Use the [Update LDAP mapping for a team](https://developer.github.com/enterprise/2.17/v3/enterprise-admin/ldap/#update-ldap-mapping-for-a-team) endpoint to change the LDAP DN.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 201,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":1,\"node_id\":\"MDQ6VGVhbTE=\",\"url\":\"https://api.github.com/teams/1\",\"html_url\":\"https://api.github.com/teams/justice-league\",\"name\":\"Justice League\",\"slug\":\"justice-league\",\"description\":\"A great team.\",\"privacy\":\"closed\",\"permission\":\"admin\",\"members_url\":\"https://api.github.com/teams/1/members{/member}\",\"repositories_url\":\"https://api.github.com/teams/1/repos\",\"parent\":null,\"members_count\":3,\"repos_count\":10,\"created_at\":\"2017-07-14T16:53:42Z\",\"updated_at\":\"2017-08-17T12:37:15Z\",\"organization\":{\"login\":\"github\",\"id\":1,\"node_id\":\"MDEyOk9yZ2FuaXphdGlvbjE=\",\"url\":\"https://api.github.com/orgs/github\",\"repos_url\":\"https://api.github.com/orgs/github/repos\",\"events_url\":\"https://api.github.com/orgs/github/events\",\"hooks_url\":\"https://api.github.com/orgs/github/hooks\",\"issues_url\":\"https://api.github.com/orgs/github/issues\",\"members_url\":\"https://api.github.com/orgs/github/members{/member}\",\"public_members_url\":\"https://api.github.com/orgs/github/public_members{/member}\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"description\":\"A great organization\",\"name\":\"github\",\"company\":\"GitHub\",\"blog\":\"https://github.com/blog\",\"location\":\"San Francisco\",\"email\":\"octocat@github.com\",\"has_organization_projects\":true,\"has_repository_projects\":true,\"public_repos\":2,\"public_gists\":1,\"followers\":20,\"following\":0,\"html_url\":\"https://github.com/octocat\",\"created_at\":\"2008-01-14T04:33:35Z\",\"type\":\"Organization\"},\"ldap_dn\":\"uid=asdf,ou=users,dc=github,dc=com\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Get team by name",
    "scope": "teams",
    "id": "getByName",
    "method": "GET",
    "url": "/orgs/{org}/teams/{team_slug}",
    "isDeprecated": false,
    "description": "Gets a team using the team's `slug`. GitHub generates the `slug` from the team `name`.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/teams/#get-team-by-name",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "org parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "team_slug",
        "description": "team_slug parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":1,\"node_id\":\"MDQ6VGVhbTE=\",\"url\":\"https://api.github.com/teams/1\",\"html_url\":\"https://api.github.com/teams/justice-league\",\"name\":\"Justice League\",\"slug\":\"justice-league\",\"description\":\"A great team.\",\"privacy\":\"closed\",\"permission\":\"admin\",\"members_url\":\"https://api.github.com/teams/1/members{/member}\",\"repositories_url\":\"https://api.github.com/teams/1/repos\",\"parent\":null,\"members_count\":3,\"repos_count\":10,\"created_at\":\"2017-07-14T16:53:42Z\",\"updated_at\":\"2017-08-17T12:37:15Z\",\"organization\":{\"login\":\"github\",\"id\":1,\"node_id\":\"MDEyOk9yZ2FuaXphdGlvbjE=\",\"url\":\"https://api.github.com/orgs/github\",\"repos_url\":\"https://api.github.com/orgs/github/repos\",\"events_url\":\"https://api.github.com/orgs/github/events\",\"hooks_url\":\"https://api.github.com/orgs/github/hooks\",\"issues_url\":\"https://api.github.com/orgs/github/issues\",\"members_url\":\"https://api.github.com/orgs/github/members{/member}\",\"public_members_url\":\"https://api.github.com/orgs/github/public_members{/member}\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"description\":\"A great organization\",\"name\":\"github\",\"company\":\"GitHub\",\"blog\":\"https://github.com/blog\",\"location\":\"San Francisco\",\"email\":\"octocat@github.com\",\"has_organization_projects\":true,\"has_repository_projects\":true,\"public_repos\":2,\"public_gists\":1,\"followers\":20,\"following\":0,\"html_url\":\"https://github.com/octocat\",\"created_at\":\"2008-01-14T04:33:35Z\",\"type\":\"Organization\"},\"ldap_dn\":\"uid=asdf,ou=users,dc=github,dc=com\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Get a project card",
    "scope": "projects",
    "id": "getCard",
    "method": "GET",
    "url": "/projects/columns/cards/{card_id}",
    "isDeprecated": false,
    "description": "",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/projects/cards/#get-a-project-card",
    "previews": [{ "name": "inertia" }],
    "headers": [
      {
        "name": "accept",
        "value": "application/vnd.github.inertia-preview+json"
      }
    ],
    "parameters": [
      {
        "name": "card_id",
        "description": "card_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"url\":\"https://api.github.com/projects/columns/cards/1478\",\"id\":1478,\"node_id\":\"MDExOlByb2plY3RDYXJkMTQ3OA==\",\"note\":\"Add payload for delete Project column\",\"creator\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"created_at\":\"2016-09-05T14:21:06Z\",\"updated_at\":\"2016-09-05T14:20:22Z\",\"archived\":false,\"column_url\":\"https://api.github.com/projects/columns/367\",\"content_url\":\"https://api.github.com/repos/api-playground/projects-test/issues/3\",\"project_url\":\"https://api.github.com/projects/120\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Update a project card",
    "scope": "projects",
    "id": "updateCard",
    "method": "PATCH",
    "url": "/projects/columns/cards/{card_id}",
    "isDeprecated": false,
    "description": "",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/projects/cards/#update-a-project-card",
    "previews": [{ "name": "inertia" }],
    "headers": [
      {
        "name": "accept",
        "value": "application/vnd.github.inertia-preview+json"
      }
    ],
    "parameters": [
      {
        "name": "card_id",
        "description": "card_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "note",
        "description": "The card's note content. Only valid for cards without another type of content, so this cannot be specified if the card already has a `content_id` and `content_type`.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "archived",
        "description": "Use `true` to archive a project card. Specify `false` if you need to restore a previously archived project card.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"url\":\"https://api.github.com/projects/columns/cards/1478\",\"id\":1478,\"node_id\":\"MDExOlByb2plY3RDYXJkMTQ3OA==\",\"note\":\"Add payload for delete Project column\",\"creator\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"created_at\":\"2016-09-05T14:21:06Z\",\"updated_at\":\"2016-09-05T14:20:22Z\",\"archived\":false,\"column_url\":\"https://api.github.com/projects/columns/367\",\"content_url\":\"https://api.github.com/repos/api-playground/projects-test/issues/3\",\"project_url\":\"https://api.github.com/projects/120\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Delete a project card",
    "scope": "projects",
    "id": "deleteCard",
    "method": "DELETE",
    "url": "/projects/columns/cards/{card_id}",
    "isDeprecated": false,
    "description": "",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/projects/cards/#delete-a-project-card",
    "previews": [{ "name": "inertia" }],
    "headers": [
      {
        "name": "accept",
        "value": "application/vnd.github.inertia-preview+json"
      }
    ],
    "parameters": [
      {
        "name": "card_id",
        "description": "card_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [],
    "renamed": null
  },
  {
    "name": "Move a project card",
    "scope": "projects",
    "id": "moveCard",
    "method": "POST",
    "url": "/projects/columns/cards/{card_id}/moves",
    "isDeprecated": false,
    "description": "",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/projects/cards/#move-a-project-card",
    "previews": [{ "name": "inertia" }],
    "headers": [
      {
        "name": "accept",
        "value": "application/vnd.github.inertia-preview+json"
      }
    ],
    "parameters": [
      {
        "name": "card_id",
        "description": "card_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "position",
        "description": "Can be one of `top`, `bottom`, or `after:<card_id>`, where `<card_id>` is the `id` value of a card in the same column, or in the new column specified by `column_id`.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": "^(top|bottom|after:\\d+)$",
        "alias": null,
        "deprecated": null
      },
      {
        "name": "column_id",
        "description": "The `id` value of a column in the same project.",
        "in": "BODY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [],
    "renamed": null
  },
  {
    "name": "Get a project column",
    "scope": "projects",
    "id": "getColumn",
    "method": "GET",
    "url": "/projects/columns/{column_id}",
    "isDeprecated": false,
    "description": "",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/projects/columns/#get-a-project-column",
    "previews": [{ "name": "inertia" }],
    "headers": [
      {
        "name": "accept",
        "value": "application/vnd.github.inertia-preview+json"
      }
    ],
    "parameters": [
      {
        "name": "column_id",
        "description": "column_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"url\":\"https://api.github.com/projects/columns/367\",\"project_url\":\"https://api.github.com/projects/120\",\"cards_url\":\"https://api.github.com/projects/columns/367/cards\",\"id\":367,\"node_id\":\"MDEzOlByb2plY3RDb2x1bW4zNjc=\",\"name\":\"To Do\",\"created_at\":\"2016-09-05T14:18:44Z\",\"updated_at\":\"2016-09-05T14:22:28Z\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Update a project column",
    "scope": "projects",
    "id": "updateColumn",
    "method": "PATCH",
    "url": "/projects/columns/{column_id}",
    "isDeprecated": false,
    "description": "",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/projects/columns/#update-a-project-column",
    "previews": [{ "name": "inertia" }],
    "headers": [
      {
        "name": "accept",
        "value": "application/vnd.github.inertia-preview+json"
      }
    ],
    "parameters": [
      {
        "name": "column_id",
        "description": "column_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "name",
        "description": "The new name of the column.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"url\":\"https://api.github.com/projects/columns/367\",\"project_url\":\"https://api.github.com/projects/120\",\"cards_url\":\"https://api.github.com/projects/columns/367/cards\",\"id\":367,\"node_id\":\"MDEzOlByb2plY3RDb2x1bW4zNjc=\",\"name\":\"To Do\",\"created_at\":\"2016-09-05T14:18:44Z\",\"updated_at\":\"2016-09-05T14:22:28Z\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Delete a project column",
    "scope": "projects",
    "id": "deleteColumn",
    "method": "DELETE",
    "url": "/projects/columns/{column_id}",
    "isDeprecated": false,
    "description": "",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/projects/columns/#delete-a-project-column",
    "previews": [{ "name": "inertia" }],
    "headers": [
      {
        "name": "accept",
        "value": "application/vnd.github.inertia-preview+json"
      }
    ],
    "parameters": [
      {
        "name": "column_id",
        "description": "column_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [],
    "renamed": null
  },
  {
    "name": "List project cards",
    "scope": "projects",
    "id": "listCards",
    "method": "GET",
    "url": "/projects/columns/{column_id}/cards",
    "isDeprecated": false,
    "description": "",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/projects/cards/#list-project-cards",
    "previews": [{ "name": "inertia" }],
    "headers": [
      {
        "name": "accept",
        "value": "application/vnd.github.inertia-preview+json"
      }
    ],
    "parameters": [
      {
        "name": "column_id",
        "description": "column_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "archived_state",
        "description": "Filters the project cards that are returned by the card's state. Can be one of `all`,`archived`, or `not_archived`.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["all", "archived", "not_archived"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"url\":\"https://api.github.com/projects/columns/cards/1478\",\"id\":1478,\"node_id\":\"MDExOlByb2plY3RDYXJkMTQ3OA==\",\"note\":\"Add payload for delete Project column\",\"creator\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"created_at\":\"2016-09-05T14:21:06Z\",\"updated_at\":\"2016-09-05T14:20:22Z\",\"archived\":false,\"column_url\":\"https://api.github.com/projects/columns/367\",\"content_url\":\"https://api.github.com/repos/api-playground/projects-test/issues/3\",\"project_url\":\"https://api.github.com/projects/120\"}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Create a project card",
    "scope": "projects",
    "id": "createCard",
    "method": "POST",
    "url": "/projects/columns/{column_id}/cards",
    "isDeprecated": false,
    "description": "**Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this reason, \"Issues\" endpoints may return both issues and pull requests in the response. You can identify pull requests by the `pull_request` key.\n\nBe aware that the `id` of a pull request returned from \"Issues\" endpoints will be an _issue id_. To find out the pull request id, use the \"[List pull requests](https://developer.github.com/enterprise/2.17/v3/pulls/#list-pull-requests)\" endpoint.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/projects/cards/#create-a-project-card",
    "previews": [{ "name": "inertia" }],
    "headers": [
      {
        "name": "accept",
        "value": "application/vnd.github.inertia-preview+json"
      }
    ],
    "parameters": [
      {
        "name": "column_id",
        "description": "column_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "note",
        "description": "The card's note content. Only valid for cards without another type of content, so you must omit when specifying `content_id` and `content_type`.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "content_id",
        "description": "The issue or pull request id you want to associate with this card. You can use the [List issues for a repository](https://developer.github.com/enterprise/2.17/v3/issues/#list-issues-for-a-repository) and [List pull requests](https://developer.github.com/enterprise/2.17/v3/pulls/#list-pull-requests) endpoints to find this id.  \n**Note:** Depending on whether you use the issue id or pull request id, you will need to specify `Issue` or `PullRequest` as the `content_type`.",
        "in": "BODY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "content_type",
        "description": "**Required if you provide `content_id`**. The type of content you want to associate with this card. Use `Issue` when `content_id` is an issue id and use `PullRequest` when `content_id` is a pull request id.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 201,
        "description": "response",
        "examples": [
          {
            "data": "{\"url\":\"https://api.github.com/projects/columns/cards/1478\",\"id\":1478,\"node_id\":\"MDExOlByb2plY3RDYXJkMTQ3OA==\",\"note\":\"Add payload for delete Project column\",\"creator\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"created_at\":\"2016-09-05T14:21:06Z\",\"updated_at\":\"2016-09-05T14:20:22Z\",\"archived\":false,\"column_url\":\"https://api.github.com/projects/columns/367\",\"content_url\":\"https://api.github.com/repos/api-playground/projects-test/issues/3\",\"project_url\":\"https://api.github.com/projects/120\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Move a project column",
    "scope": "projects",
    "id": "moveColumn",
    "method": "POST",
    "url": "/projects/columns/{column_id}/moves",
    "isDeprecated": false,
    "description": "",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/projects/columns/#move-a-project-column",
    "previews": [{ "name": "inertia" }],
    "headers": [
      {
        "name": "accept",
        "value": "application/vnd.github.inertia-preview+json"
      }
    ],
    "parameters": [
      {
        "name": "column_id",
        "description": "column_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "position",
        "description": "Can be one of `first`, `last`, or `after:<column_id>`, where `<column_id>` is the `id` value of a column in the same project.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": "^(first|last|after:\\d+)$",
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [],
    "renamed": null
  },
  {
    "name": "Get a project",
    "scope": "projects",
    "id": "get",
    "method": "GET",
    "url": "/projects/{project_id}",
    "isDeprecated": false,
    "description": "Gets a project by its `id`. Returns a `404 Not Found` status if projects are disabled. If you do not have sufficient privileges to perform this action, a `401 Unauthorized` or `410 Gone` status is returned.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/projects/#get-a-project",
    "previews": [{ "name": "inertia" }],
    "headers": [
      {
        "name": "accept",
        "value": "application/vnd.github.inertia-preview+json"
      }
    ],
    "parameters": [
      {
        "name": "project_id",
        "description": "project_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"owner_url\":\"https://api.github.com/repos/api-playground/projects-test\",\"url\":\"https://api.github.com/projects/1002604\",\"html_url\":\"https://github.com/api-playground/projects-test/projects/1\",\"columns_url\":\"https://api.github.com/projects/1002604/columns\",\"id\":1002604,\"node_id\":\"MDc6UHJvamVjdDEwMDI2MDQ=\",\"name\":\"Projects Documentation\",\"body\":\"Developer documentation project for the developer site.\",\"number\":1,\"state\":\"open\",\"creator\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"created_at\":\"2011-04-10T20:09:31Z\",\"updated_at\":\"2014-03-03T18:58:10Z\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Update a project",
    "scope": "projects",
    "id": "update",
    "method": "PATCH",
    "url": "/projects/{project_id}",
    "isDeprecated": false,
    "description": "Updates a project board's information. Returns a `404 Not Found` status if projects are disabled. If you do not have sufficient privileges to perform this action, a `401 Unauthorized` or `410 Gone` status is returned.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/projects/#update-a-project",
    "previews": [{ "name": "inertia" }],
    "headers": [
      {
        "name": "accept",
        "value": "application/vnd.github.inertia-preview+json"
      }
    ],
    "parameters": [
      {
        "name": "project_id",
        "description": "project_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "name",
        "description": "The name of the project.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "body",
        "description": "The description of the project.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "state",
        "description": "State of the project. Either `open` or `closed`.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": ["open", "closed"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "organization_permission",
        "description": "The permission level that determines whether all members of the project's organization can see and/or make changes to the project. Setting `organization_permission` is only available for organization projects. If an organization member belongs to a team with a higher level of access or is a collaborator with a higher level of access, their permission level is not lowered by `organization_permission`. For information on changing access for a team or collaborator, see [Add or update team project](https://developer.github.com/enterprise/2.17/v3/teams/#add-or-update-team-project) or [Add user as a collaborator](https://developer.github.com/enterprise/2.17/v3/projects/collaborators/#add-user-as-a-collaborator).  \n  \n**Note:** Updating a project's `organization_permission` requires `admin` access to the project.  \n  \nCan be one of:  \n\\* `read` - Organization members can read, but not write to or administer this project.  \n\\* `write` - Organization members can read and write, but not administer this project.  \n\\* `admin` - Organization members can read, write and administer this project.  \n\\* `none` - Organization members can only see this project if it is public.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "private",
        "description": "Sets the visibility of a project board. Setting `private` is only available for organization and user projects. **Note:** Updating a project's visibility requires `admin` access to the project.  \n  \nCan be one of:  \n\\* `false` - Anyone can see the project.  \n\\* `true` - Only the user can view a project board created on a user account. Organization members with the appropriate `organization_permission` can see project boards in an organization account.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"owner_url\":\"https://api.github.com/repos/api-playground/projects-test\",\"url\":\"https://api.github.com/projects/1002604\",\"html_url\":\"https://github.com/api-playground/projects-test/projects/1\",\"columns_url\":\"https://api.github.com/projects/1002604/columns\",\"id\":1002604,\"node_id\":\"MDc6UHJvamVjdDEwMDI2MDQ=\",\"name\":\"Projects Documentation\",\"body\":\"Developer documentation project for the developer site.\",\"number\":1,\"state\":\"open\",\"creator\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"created_at\":\"2011-04-10T20:09:31Z\",\"updated_at\":\"2014-03-03T18:58:10Z\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Delete a project",
    "scope": "projects",
    "id": "delete",
    "method": "DELETE",
    "url": "/projects/{project_id}",
    "isDeprecated": false,
    "description": "Deletes a project board. Returns a `404 Not Found` status if projects are disabled.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/projects/#delete-a-project",
    "previews": [{ "name": "inertia" }],
    "headers": [
      {
        "name": "accept",
        "value": "application/vnd.github.inertia-preview+json"
      }
    ],
    "parameters": [
      {
        "name": "project_id",
        "description": "project_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [],
    "renamed": null
  },
  {
    "name": "List collaborators",
    "scope": "projects",
    "id": "listCollaborators",
    "method": "GET",
    "url": "/projects/{project_id}/collaborators",
    "isDeprecated": false,
    "description": "Lists the collaborators for an organization project. For a project, the list of collaborators includes outside collaborators, organization members that are direct collaborators, organization members with access through team memberships, organization members with access through default organization permissions, and organization owners. You must be an organization owner or a project `admin` to list collaborators.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/projects/collaborators/#list-collaborators",
    "previews": [{ "name": "inertia" }],
    "headers": [
      {
        "name": "accept",
        "value": "application/vnd.github.inertia-preview+json"
      }
    ],
    "parameters": [
      {
        "name": "project_id",
        "description": "project_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "affiliation",
        "description": "Filters the collaborators by their affiliation. Can be one of:  \n\\* `outside`: Outside collaborators of a project that are not a member of the project's organization.  \n\\* `direct`: Collaborators with permissions to a project, regardless of organization membership status.  \n\\* `all`: All collaborators the authenticated user can see.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["outside", "direct", "all"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Add user as a collaborator",
    "scope": "projects",
    "id": "addCollaborator",
    "method": "PUT",
    "url": "/projects/{project_id}/collaborators/{username}",
    "isDeprecated": false,
    "description": "Adds a collaborator to a an organization project and sets their permission level. You must be an organization owner or a project `admin` to add a collaborator.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/projects/collaborators/#add-user-as-a-collaborator",
    "previews": [{ "name": "inertia" }],
    "headers": [
      {
        "name": "accept",
        "value": "application/vnd.github.inertia-preview+json"
      }
    ],
    "parameters": [
      {
        "name": "project_id",
        "description": "project_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "username",
        "description": "username parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "permission",
        "description": "The permission to grant the collaborator. Note that, if you choose not to pass any parameters, you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTTP verbs](https://developer.github.com/enterprise/2.17/v3/#http-verbs).\" Can be one of:  \n\\* `read` - can read, but not write to or administer this project.  \n\\* `write` - can read and write, but not administer this project.  \n\\* `admin` - can read, write and administer this project.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": ["read", "write", "admin"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [],
    "renamed": null
  },
  {
    "name": "Remove user as a collaborator",
    "scope": "projects",
    "id": "removeCollaborator",
    "method": "DELETE",
    "url": "/projects/{project_id}/collaborators/{username}",
    "isDeprecated": false,
    "description": "Removes a collaborator from an organization project. You must be an organization owner or a project `admin` to remove a collaborator.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/projects/collaborators/#remove-user-as-a-collaborator",
    "previews": [{ "name": "inertia" }],
    "headers": [
      {
        "name": "accept",
        "value": "application/vnd.github.inertia-preview+json"
      }
    ],
    "parameters": [
      {
        "name": "project_id",
        "description": "project_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "username",
        "description": "username parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [],
    "renamed": null
  },
  {
    "name": "Review a user's permission level",
    "scope": "projects",
    "id": "reviewUserPermissionLevel",
    "method": "GET",
    "url": "/projects/{project_id}/collaborators/{username}/permission",
    "isDeprecated": false,
    "description": "Returns the collaborator's permission level for an organization project. Possible values for the `permission` key: `admin`, `write`, `read`, `none`. You must be an organization owner or a project `admin` to review a user's permission level.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/projects/collaborators/#review-a-users-permission-level",
    "previews": [{ "name": "inertia" }],
    "headers": [
      {
        "name": "accept",
        "value": "application/vnd.github.inertia-preview+json"
      }
    ],
    "parameters": [
      {
        "name": "project_id",
        "description": "project_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "username",
        "description": "username parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"permission\":\"admin\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false}}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "List project columns",
    "scope": "projects",
    "id": "listColumns",
    "method": "GET",
    "url": "/projects/{project_id}/columns",
    "isDeprecated": false,
    "description": "",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/projects/columns/#list-project-columns",
    "previews": [{ "name": "inertia" }],
    "headers": [
      {
        "name": "accept",
        "value": "application/vnd.github.inertia-preview+json"
      }
    ],
    "parameters": [
      {
        "name": "project_id",
        "description": "project_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"url\":\"https://api.github.com/projects/columns/367\",\"project_url\":\"https://api.github.com/projects/120\",\"cards_url\":\"https://api.github.com/projects/columns/367/cards\",\"id\":367,\"node_id\":\"MDEzOlByb2plY3RDb2x1bW4zNjc=\",\"name\":\"To Do\",\"created_at\":\"2016-09-05T14:18:44Z\",\"updated_at\":\"2016-09-05T14:22:28Z\"}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Create a project column",
    "scope": "projects",
    "id": "createColumn",
    "method": "POST",
    "url": "/projects/{project_id}/columns",
    "isDeprecated": false,
    "description": "",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/projects/columns/#create-a-project-column",
    "previews": [{ "name": "inertia" }],
    "headers": [
      {
        "name": "accept",
        "value": "application/vnd.github.inertia-preview+json"
      }
    ],
    "parameters": [
      {
        "name": "project_id",
        "description": "project_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "name",
        "description": "The name of the column.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"url\":\"https://api.github.com/projects/columns/367\",\"project_url\":\"https://api.github.com/projects/120\",\"cards_url\":\"https://api.github.com/projects/columns/367/cards\",\"id\":367,\"node_id\":\"MDEzOlByb2plY3RDb2x1bW4zNjc=\",\"name\":\"To Do\",\"created_at\":\"2016-09-05T14:18:44Z\",\"updated_at\":\"2016-09-05T14:22:28Z\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Get your current rate limit status",
    "scope": "rateLimit",
    "id": "get",
    "method": "GET",
    "url": "/rate_limit",
    "isDeprecated": false,
    "description": "**Note:** Accessing this endpoint does not count against your REST API rate limit.\n\n**Understanding your rate limit status**\n\nThe Search API has a [custom rate limit](https://developer.github.com/enterprise/2.17/v3/search/#rate-limit), separate from the rate limit governing the rest of the REST API. The GraphQL API also has a [custom rate limit](https://developer.github.com/enterprise/2.17/v4/guides/resource-limitations/#rate-limit) that is separate from and calculated differently than rate limits in the REST API.\n\nFor these reasons, the Rate Limit API response categorizes your rate limit. Under `resources`, you'll see four objects:\n\n*   The `core` object provides your rate limit status for all non-search-related resources in the REST API.\n*   The `search` object provides your rate limit status for the [Search API](https://developer.github.com/enterprise/2.17/v3/search/).\n*   The `graphql` object provides your rate limit status for the [GraphQL API](https://developer.github.com/enterprise/2.17/v4/).\n*   The `integration_manifest` object provides your rate limit status for the [GitHub App Manifest code conversion](https://developer.github.com/enterprise/2.17/apps/building-github-apps/creating-github-apps-from-a-manifest/#3-you-exchange-the-temporary-code-to-retrieve-the-app-configuration) endpoint.\n\nFor more information on the headers and values in the rate limit response, see \"[Rate limiting](https://developer.github.com/enterprise/2.17/v3/#rate-limiting).\"\n\nThe `rate` object (shown at the bottom of the response above) is deprecated.\n\nIf you're writing new API client code or updating existing code, you should use the `core` object instead of the `rate` object. The `core` object contains the same information that is present in the `rate` object.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/rate_limit/#get-your-current-rate-limit-status",
    "previews": [],
    "headers": [],
    "parameters": [],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"resources\":{\"core\":{\"limit\":5000,\"remaining\":4999,\"reset\":1372700873},\"search\":{\"limit\":30,\"remaining\":18,\"reset\":1372697452},\"graphql\":{\"limit\":5000,\"remaining\":4993,\"reset\":1372700389},\"integration_manifest\":{\"limit\":5000,\"remaining\":4999,\"reset\":1551806725}},\"rate\":{\"limit\":5000,\"remaining\":4999,\"reset\":1372700873}}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Delete a reaction",
    "scope": "reactions",
    "id": "delete",
    "method": "DELETE",
    "url": "/reactions/{reaction_id}",
    "isDeprecated": false,
    "description": "OAuth access tokens require the `write:discussion` [scope](https://developer.github.com/enterprise/2.17/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/), when deleting a [team discussion](https://developer.github.com/enterprise/2.17/v3/teams/discussions/) or [team discussion comment](https://developer.github.com/enterprise/2.17/v3/teams/discussion_comments/).",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/reactions/#delete-a-reaction",
    "previews": [{ "name": "echo" }, { "name": "squirrel-girl" }],
    "headers": [
      {
        "name": "accept",
        "value": "application/vnd.github.echo-preview+json,application/vnd.github.squirrel-girl-preview+json"
      }
    ],
    "parameters": [
      {
        "name": "reaction_id",
        "description": "reaction_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [],
    "renamed": null
  },
  {
    "name": "Get",
    "scope": "repos",
    "id": "get",
    "method": "GET",
    "url": "/repos/{owner}/{repo}",
    "isDeprecated": false,
    "description": "The `parent` and `source` objects are present when the repository is a fork. `parent` is the repository this repository was forked from, `source` is the ultimate source for the network.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/repos/#get",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "The `parent` and `source` objects are present when the repository is a fork. `parent` is the repository this repository was forked from, `source` is the ultimate source for the network.",
        "examples": [
          {
            "data": "{\"id\":1296269,\"node_id\":\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\"name\":\"Hello-World\",\"full_name\":\"octocat/Hello-World\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"private\":false,\"html_url\":\"https://github.com/octocat/Hello-World\",\"description\":\"This your first repo!\",\"fork\":false,\"url\":\"https://api.github.com/repos/octocat/Hello-World\",\"archive_url\":\"http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\"assignees_url\":\"http://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\"blobs_url\":\"http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\"branches_url\":\"http://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\"collaborators_url\":\"http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\"comments_url\":\"http://api.github.com/repos/octocat/Hello-World/comments{/number}\",\"commits_url\":\"http://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\"compare_url\":\"http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\"contents_url\":\"http://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\"contributors_url\":\"http://api.github.com/repos/octocat/Hello-World/contributors\",\"deployments_url\":\"http://api.github.com/repos/octocat/Hello-World/deployments\",\"downloads_url\":\"http://api.github.com/repos/octocat/Hello-World/downloads\",\"events_url\":\"http://api.github.com/repos/octocat/Hello-World/events\",\"forks_url\":\"http://api.github.com/repos/octocat/Hello-World/forks\",\"git_commits_url\":\"http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\"git_refs_url\":\"http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\"git_tags_url\":\"http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\"git_url\":\"git:github.com/octocat/Hello-World.git\",\"issue_comment_url\":\"http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\"issue_events_url\":\"http://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\"issues_url\":\"http://api.github.com/repos/octocat/Hello-World/issues{/number}\",\"keys_url\":\"http://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\"labels_url\":\"http://api.github.com/repos/octocat/Hello-World/labels{/name}\",\"languages_url\":\"http://api.github.com/repos/octocat/Hello-World/languages\",\"merges_url\":\"http://api.github.com/repos/octocat/Hello-World/merges\",\"milestones_url\":\"http://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\"notifications_url\":\"http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\"pulls_url\":\"http://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\"releases_url\":\"http://api.github.com/repos/octocat/Hello-World/releases{/id}\",\"ssh_url\":\"git@github.com:octocat/Hello-World.git\",\"stargazers_url\":\"http://api.github.com/repos/octocat/Hello-World/stargazers\",\"statuses_url\":\"http://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\"subscribers_url\":\"http://api.github.com/repos/octocat/Hello-World/subscribers\",\"subscription_url\":\"http://api.github.com/repos/octocat/Hello-World/subscription\",\"tags_url\":\"http://api.github.com/repos/octocat/Hello-World/tags\",\"teams_url\":\"http://api.github.com/repos/octocat/Hello-World/teams\",\"trees_url\":\"http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\"clone_url\":\"https://github.com/octocat/Hello-World.git\",\"mirror_url\":\"git:git.example.com/octocat/Hello-World\",\"hooks_url\":\"http://api.github.com/repos/octocat/Hello-World/hooks\",\"svn_url\":\"https://svn.github.com/octocat/Hello-World\",\"homepage\":\"https://github.com\",\"language\":null,\"forks_count\":9,\"stargazers_count\":80,\"watchers_count\":80,\"size\":108,\"default_branch\":\"master\",\"open_issues_count\":0,\"topics\":[\"octocat\",\"atom\",\"electron\",\"api\"],\"has_issues\":true,\"has_projects\":true,\"has_wiki\":true,\"has_pages\":false,\"has_downloads\":true,\"archived\":false,\"disabled\":false,\"pushed_at\":\"2011-01-26T19:06:43Z\",\"created_at\":\"2011-01-26T19:01:12Z\",\"updated_at\":\"2011-01-26T19:14:43Z\",\"permissions\":{\"admin\":false,\"push\":false,\"pull\":true},\"allow_rebase_merge\":true,\"allow_squash_merge\":true,\"allow_merge_commit\":true,\"subscribers_count\":42,\"network_count\":0,\"anonymous_access_enabled\":false,\"license\":{\"key\":\"mit\",\"name\":\"MIT License\",\"spdx_id\":\"MIT\",\"url\":\"https://api.github.com/licenses/mit\",\"node_id\":\"MDc6TGljZW5zZW1pdA==\"},\"organization\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"Organization\",\"site_admin\":false},\"parent\":{\"id\":1296269,\"node_id\":\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\"name\":\"Hello-World\",\"full_name\":\"octocat/Hello-World\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"private\":false,\"html_url\":\"https://github.com/octocat/Hello-World\",\"description\":\"This your first repo!\",\"fork\":false,\"url\":\"https://api.github.com/repos/octocat/Hello-World\",\"archive_url\":\"http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\"assignees_url\":\"http://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\"blobs_url\":\"http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\"branches_url\":\"http://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\"collaborators_url\":\"http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\"comments_url\":\"http://api.github.com/repos/octocat/Hello-World/comments{/number}\",\"commits_url\":\"http://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\"compare_url\":\"http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\"contents_url\":\"http://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\"contributors_url\":\"http://api.github.com/repos/octocat/Hello-World/contributors\",\"deployments_url\":\"http://api.github.com/repos/octocat/Hello-World/deployments\",\"downloads_url\":\"http://api.github.com/repos/octocat/Hello-World/downloads\",\"events_url\":\"http://api.github.com/repos/octocat/Hello-World/events\",\"forks_url\":\"http://api.github.com/repos/octocat/Hello-World/forks\",\"git_commits_url\":\"http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\"git_refs_url\":\"http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\"git_tags_url\":\"http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\"git_url\":\"git:github.com/octocat/Hello-World.git\",\"issue_comment_url\":\"http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\"issue_events_url\":\"http://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\"issues_url\":\"http://api.github.com/repos/octocat/Hello-World/issues{/number}\",\"keys_url\":\"http://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\"labels_url\":\"http://api.github.com/repos/octocat/Hello-World/labels{/name}\",\"languages_url\":\"http://api.github.com/repos/octocat/Hello-World/languages\",\"merges_url\":\"http://api.github.com/repos/octocat/Hello-World/merges\",\"milestones_url\":\"http://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\"notifications_url\":\"http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\"pulls_url\":\"http://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\"releases_url\":\"http://api.github.com/repos/octocat/Hello-World/releases{/id}\",\"ssh_url\":\"git@github.com:octocat/Hello-World.git\",\"stargazers_url\":\"http://api.github.com/repos/octocat/Hello-World/stargazers\",\"statuses_url\":\"http://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\"subscribers_url\":\"http://api.github.com/repos/octocat/Hello-World/subscribers\",\"subscription_url\":\"http://api.github.com/repos/octocat/Hello-World/subscription\",\"tags_url\":\"http://api.github.com/repos/octocat/Hello-World/tags\",\"teams_url\":\"http://api.github.com/repos/octocat/Hello-World/teams\",\"trees_url\":\"http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\"clone_url\":\"https://github.com/octocat/Hello-World.git\",\"mirror_url\":\"git:git.example.com/octocat/Hello-World\",\"hooks_url\":\"http://api.github.com/repos/octocat/Hello-World/hooks\",\"svn_url\":\"https://svn.github.com/octocat/Hello-World\",\"homepage\":\"https://github.com\",\"language\":null,\"forks_count\":9,\"stargazers_count\":80,\"watchers_count\":80,\"size\":108,\"default_branch\":\"master\",\"open_issues_count\":0,\"topics\":[\"octocat\",\"atom\",\"electron\",\"api\"],\"has_issues\":true,\"has_projects\":true,\"has_wiki\":true,\"has_pages\":false,\"has_downloads\":true,\"archived\":false,\"disabled\":false,\"pushed_at\":\"2011-01-26T19:06:43Z\",\"created_at\":\"2011-01-26T19:01:12Z\",\"updated_at\":\"2011-01-26T19:14:43Z\",\"permissions\":{\"admin\":false,\"push\":false,\"pull\":true},\"allow_rebase_merge\":true,\"allow_squash_merge\":true,\"allow_merge_commit\":true,\"subscribers_count\":42,\"network_count\":0},\"source\":{\"id\":1296269,\"node_id\":\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\"name\":\"Hello-World\",\"full_name\":\"octocat/Hello-World\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"private\":false,\"html_url\":\"https://github.com/octocat/Hello-World\",\"description\":\"This your first repo!\",\"fork\":false,\"url\":\"https://api.github.com/repos/octocat/Hello-World\",\"archive_url\":\"http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\"assignees_url\":\"http://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\"blobs_url\":\"http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\"branches_url\":\"http://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\"collaborators_url\":\"http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\"comments_url\":\"http://api.github.com/repos/octocat/Hello-World/comments{/number}\",\"commits_url\":\"http://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\"compare_url\":\"http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\"contents_url\":\"http://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\"contributors_url\":\"http://api.github.com/repos/octocat/Hello-World/contributors\",\"deployments_url\":\"http://api.github.com/repos/octocat/Hello-World/deployments\",\"downloads_url\":\"http://api.github.com/repos/octocat/Hello-World/downloads\",\"events_url\":\"http://api.github.com/repos/octocat/Hello-World/events\",\"forks_url\":\"http://api.github.com/repos/octocat/Hello-World/forks\",\"git_commits_url\":\"http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\"git_refs_url\":\"http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\"git_tags_url\":\"http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\"git_url\":\"git:github.com/octocat/Hello-World.git\",\"issue_comment_url\":\"http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\"issue_events_url\":\"http://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\"issues_url\":\"http://api.github.com/repos/octocat/Hello-World/issues{/number}\",\"keys_url\":\"http://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\"labels_url\":\"http://api.github.com/repos/octocat/Hello-World/labels{/name}\",\"languages_url\":\"http://api.github.com/repos/octocat/Hello-World/languages\",\"merges_url\":\"http://api.github.com/repos/octocat/Hello-World/merges\",\"milestones_url\":\"http://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\"notifications_url\":\"http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\"pulls_url\":\"http://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\"releases_url\":\"http://api.github.com/repos/octocat/Hello-World/releases{/id}\",\"ssh_url\":\"git@github.com:octocat/Hello-World.git\",\"stargazers_url\":\"http://api.github.com/repos/octocat/Hello-World/stargazers\",\"statuses_url\":\"http://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\"subscribers_url\":\"http://api.github.com/repos/octocat/Hello-World/subscribers\",\"subscription_url\":\"http://api.github.com/repos/octocat/Hello-World/subscription\",\"tags_url\":\"http://api.github.com/repos/octocat/Hello-World/tags\",\"teams_url\":\"http://api.github.com/repos/octocat/Hello-World/teams\",\"trees_url\":\"http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\"clone_url\":\"https://github.com/octocat/Hello-World.git\",\"mirror_url\":\"git:git.example.com/octocat/Hello-World\",\"hooks_url\":\"http://api.github.com/repos/octocat/Hello-World/hooks\",\"svn_url\":\"https://svn.github.com/octocat/Hello-World\",\"homepage\":\"https://github.com\",\"language\":null,\"forks_count\":9,\"stargazers_count\":80,\"watchers_count\":80,\"size\":108,\"default_branch\":\"master\",\"open_issues_count\":0,\"topics\":[\"octocat\",\"atom\",\"electron\",\"api\"],\"has_issues\":true,\"has_projects\":true,\"has_wiki\":true,\"has_pages\":false,\"has_downloads\":true,\"archived\":false,\"disabled\":false,\"pushed_at\":\"2011-01-26T19:06:43Z\",\"created_at\":\"2011-01-26T19:01:12Z\",\"updated_at\":\"2011-01-26T19:14:43Z\",\"permissions\":{\"admin\":false,\"push\":false,\"pull\":true},\"allow_rebase_merge\":true,\"allow_squash_merge\":true,\"allow_merge_commit\":true,\"subscribers_count\":42,\"network_count\":0,\"anonymous_access_enabled\":false}}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Edit",
    "scope": "repos",
    "id": "update",
    "method": "PATCH",
    "url": "/repos/{owner}/{repo}",
    "isDeprecated": false,
    "description": "**Note**: To edit a repository's topics, use the [`topics` endpoint](https://developer.github.com/enterprise/2.17/v3/repos/#replace-all-topics-for-a-repository).",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/repos/#edit",
    "previews": [{ "name": "x-ray" }],
    "headers": [
      { "name": "accept", "value": "application/vnd.github.x-ray-preview+json" }
    ],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "name",
        "description": "The name of the repository.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "description",
        "description": "A short description of the repository.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "homepage",
        "description": "A URL with more information about the repository.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "private",
        "description": "Either `true` to make the repository private or `false` to make it public. Creating private repositories requires a paid GitHub account. Default: `false`.  \n**Note**: You will get a `422` error if the organization restricts [changing repository visibility](https://help.github.com/articles/repository-permission-levels-for-an-organization#changing-the-visibility-of-repositories) to organization owners and a non-owner tries to change the value of private, or if the \"Users Can Change Repo Visibility\" appliance setting is disabled and you are not a hosted site admin. **Note**: You will get a `422` error if the organization restricts [changing repository visibility](https://help.github.com/articles/repository-permission-levels-for-an-organization#changing-the-visibility-of-repositories) to organization owners and a non-owner tries to change the value of private, or if the \"Users Can Change Repo Visibility\" appliance setting is disabled and you are not a hosted site admin.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "has_issues",
        "description": "Either `true` to enable issues for this repository or `false` to disable them.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "has_projects",
        "description": "Either `true` to enable projects for this repository or `false` to disable them. **Note:** If you're creating a repository in an organization that has disabled repository projects, the default is `false`, and if you pass `true`, the API returns an error.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "has_wiki",
        "description": "Either `true` to enable the wiki for this repository or `false` to disable it.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "default_branch",
        "description": "Updates the default branch for this repository.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "allow_squash_merge",
        "description": "Either `true` to allow squash-merging pull requests, or `false` to prevent squash-merging.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "allow_merge_commit",
        "description": "Either `true` to allow merging pull requests with a merge commit, or `false` to prevent merging pull requests with merge commits.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "allow_rebase_merge",
        "description": "Either `true` to allow rebase-merging pull requests, or `false` to prevent rebase-merging.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "archived",
        "description": "`true` to archive this repository. **Note**: You cannot unarchive repositories through the API.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "anonymous_access_enabled",
        "description": "Either `true` to allow anonymous Git access to a public repository, or `false` to disable it. This feature is only available to site and repository administrators in GitHub Enterprise Server instances that have private mode enabled.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":1296269,\"node_id\":\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\"name\":\"Hello-World\",\"full_name\":\"octocat/Hello-World\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"private\":false,\"html_url\":\"https://github.com/octocat/Hello-World\",\"description\":\"This your first repo!\",\"fork\":false,\"url\":\"https://api.github.com/repos/octocat/Hello-World\",\"archive_url\":\"http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\"assignees_url\":\"http://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\"blobs_url\":\"http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\"branches_url\":\"http://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\"collaborators_url\":\"http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\"comments_url\":\"http://api.github.com/repos/octocat/Hello-World/comments{/number}\",\"commits_url\":\"http://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\"compare_url\":\"http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\"contents_url\":\"http://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\"contributors_url\":\"http://api.github.com/repos/octocat/Hello-World/contributors\",\"deployments_url\":\"http://api.github.com/repos/octocat/Hello-World/deployments\",\"downloads_url\":\"http://api.github.com/repos/octocat/Hello-World/downloads\",\"events_url\":\"http://api.github.com/repos/octocat/Hello-World/events\",\"forks_url\":\"http://api.github.com/repos/octocat/Hello-World/forks\",\"git_commits_url\":\"http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\"git_refs_url\":\"http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\"git_tags_url\":\"http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\"git_url\":\"git:github.com/octocat/Hello-World.git\",\"issue_comment_url\":\"http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\"issue_events_url\":\"http://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\"issues_url\":\"http://api.github.com/repos/octocat/Hello-World/issues{/number}\",\"keys_url\":\"http://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\"labels_url\":\"http://api.github.com/repos/octocat/Hello-World/labels{/name}\",\"languages_url\":\"http://api.github.com/repos/octocat/Hello-World/languages\",\"merges_url\":\"http://api.github.com/repos/octocat/Hello-World/merges\",\"milestones_url\":\"http://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\"notifications_url\":\"http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\"pulls_url\":\"http://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\"releases_url\":\"http://api.github.com/repos/octocat/Hello-World/releases{/id}\",\"ssh_url\":\"git@github.com:octocat/Hello-World.git\",\"stargazers_url\":\"http://api.github.com/repos/octocat/Hello-World/stargazers\",\"statuses_url\":\"http://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\"subscribers_url\":\"http://api.github.com/repos/octocat/Hello-World/subscribers\",\"subscription_url\":\"http://api.github.com/repos/octocat/Hello-World/subscription\",\"tags_url\":\"http://api.github.com/repos/octocat/Hello-World/tags\",\"teams_url\":\"http://api.github.com/repos/octocat/Hello-World/teams\",\"trees_url\":\"http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\"clone_url\":\"https://github.com/octocat/Hello-World.git\",\"mirror_url\":\"git:git.example.com/octocat/Hello-World\",\"hooks_url\":\"http://api.github.com/repos/octocat/Hello-World/hooks\",\"svn_url\":\"https://svn.github.com/octocat/Hello-World\",\"homepage\":\"https://github.com\",\"language\":null,\"forks_count\":9,\"stargazers_count\":80,\"watchers_count\":80,\"size\":108,\"default_branch\":\"master\",\"open_issues_count\":0,\"topics\":[\"octocat\",\"atom\",\"electron\",\"api\"],\"has_issues\":true,\"has_projects\":true,\"has_wiki\":true,\"has_pages\":false,\"has_downloads\":true,\"archived\":false,\"disabled\":false,\"pushed_at\":\"2011-01-26T19:06:43Z\",\"created_at\":\"2011-01-26T19:01:12Z\",\"updated_at\":\"2011-01-26T19:14:43Z\",\"permissions\":{\"admin\":false,\"push\":false,\"pull\":true},\"allow_rebase_merge\":true,\"allow_squash_merge\":true,\"allow_merge_commit\":true,\"subscribers_count\":42,\"network_count\":0,\"anonymous_access_enabled\":false,\"organization\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"Organization\",\"site_admin\":false},\"parent\":{\"id\":1296269,\"node_id\":\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\"name\":\"Hello-World\",\"full_name\":\"octocat/Hello-World\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"private\":false,\"html_url\":\"https://github.com/octocat/Hello-World\",\"description\":\"This your first repo!\",\"fork\":false,\"url\":\"https://api.github.com/repos/octocat/Hello-World\",\"archive_url\":\"http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\"assignees_url\":\"http://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\"blobs_url\":\"http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\"branches_url\":\"http://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\"collaborators_url\":\"http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\"comments_url\":\"http://api.github.com/repos/octocat/Hello-World/comments{/number}\",\"commits_url\":\"http://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\"compare_url\":\"http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\"contents_url\":\"http://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\"contributors_url\":\"http://api.github.com/repos/octocat/Hello-World/contributors\",\"deployments_url\":\"http://api.github.com/repos/octocat/Hello-World/deployments\",\"downloads_url\":\"http://api.github.com/repos/octocat/Hello-World/downloads\",\"events_url\":\"http://api.github.com/repos/octocat/Hello-World/events\",\"forks_url\":\"http://api.github.com/repos/octocat/Hello-World/forks\",\"git_commits_url\":\"http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\"git_refs_url\":\"http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\"git_tags_url\":\"http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\"git_url\":\"git:github.com/octocat/Hello-World.git\",\"issue_comment_url\":\"http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\"issue_events_url\":\"http://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\"issues_url\":\"http://api.github.com/repos/octocat/Hello-World/issues{/number}\",\"keys_url\":\"http://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\"labels_url\":\"http://api.github.com/repos/octocat/Hello-World/labels{/name}\",\"languages_url\":\"http://api.github.com/repos/octocat/Hello-World/languages\",\"merges_url\":\"http://api.github.com/repos/octocat/Hello-World/merges\",\"milestones_url\":\"http://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\"notifications_url\":\"http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\"pulls_url\":\"http://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\"releases_url\":\"http://api.github.com/repos/octocat/Hello-World/releases{/id}\",\"ssh_url\":\"git@github.com:octocat/Hello-World.git\",\"stargazers_url\":\"http://api.github.com/repos/octocat/Hello-World/stargazers\",\"statuses_url\":\"http://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\"subscribers_url\":\"http://api.github.com/repos/octocat/Hello-World/subscribers\",\"subscription_url\":\"http://api.github.com/repos/octocat/Hello-World/subscription\",\"tags_url\":\"http://api.github.com/repos/octocat/Hello-World/tags\",\"teams_url\":\"http://api.github.com/repos/octocat/Hello-World/teams\",\"trees_url\":\"http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\"clone_url\":\"https://github.com/octocat/Hello-World.git\",\"mirror_url\":\"git:git.example.com/octocat/Hello-World\",\"hooks_url\":\"http://api.github.com/repos/octocat/Hello-World/hooks\",\"svn_url\":\"https://svn.github.com/octocat/Hello-World\",\"homepage\":\"https://github.com\",\"language\":null,\"forks_count\":9,\"stargazers_count\":80,\"watchers_count\":80,\"size\":108,\"default_branch\":\"master\",\"open_issues_count\":0,\"topics\":[\"octocat\",\"atom\",\"electron\",\"api\"],\"has_issues\":true,\"has_projects\":true,\"has_wiki\":true,\"has_pages\":false,\"has_downloads\":true,\"archived\":false,\"disabled\":false,\"pushed_at\":\"2011-01-26T19:06:43Z\",\"created_at\":\"2011-01-26T19:01:12Z\",\"updated_at\":\"2011-01-26T19:14:43Z\",\"permissions\":{\"admin\":false,\"push\":false,\"pull\":true},\"allow_rebase_merge\":true,\"allow_squash_merge\":true,\"allow_merge_commit\":true,\"subscribers_count\":42,\"network_count\":0},\"source\":{\"id\":1296269,\"node_id\":\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\"name\":\"Hello-World\",\"full_name\":\"octocat/Hello-World\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"private\":false,\"html_url\":\"https://github.com/octocat/Hello-World\",\"description\":\"This your first repo!\",\"fork\":false,\"url\":\"https://api.github.com/repos/octocat/Hello-World\",\"archive_url\":\"http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\"assignees_url\":\"http://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\"blobs_url\":\"http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\"branches_url\":\"http://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\"collaborators_url\":\"http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\"comments_url\":\"http://api.github.com/repos/octocat/Hello-World/comments{/number}\",\"commits_url\":\"http://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\"compare_url\":\"http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\"contents_url\":\"http://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\"contributors_url\":\"http://api.github.com/repos/octocat/Hello-World/contributors\",\"deployments_url\":\"http://api.github.com/repos/octocat/Hello-World/deployments\",\"downloads_url\":\"http://api.github.com/repos/octocat/Hello-World/downloads\",\"events_url\":\"http://api.github.com/repos/octocat/Hello-World/events\",\"forks_url\":\"http://api.github.com/repos/octocat/Hello-World/forks\",\"git_commits_url\":\"http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\"git_refs_url\":\"http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\"git_tags_url\":\"http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\"git_url\":\"git:github.com/octocat/Hello-World.git\",\"issue_comment_url\":\"http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\"issue_events_url\":\"http://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\"issues_url\":\"http://api.github.com/repos/octocat/Hello-World/issues{/number}\",\"keys_url\":\"http://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\"labels_url\":\"http://api.github.com/repos/octocat/Hello-World/labels{/name}\",\"languages_url\":\"http://api.github.com/repos/octocat/Hello-World/languages\",\"merges_url\":\"http://api.github.com/repos/octocat/Hello-World/merges\",\"milestones_url\":\"http://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\"notifications_url\":\"http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\"pulls_url\":\"http://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\"releases_url\":\"http://api.github.com/repos/octocat/Hello-World/releases{/id}\",\"ssh_url\":\"git@github.com:octocat/Hello-World.git\",\"stargazers_url\":\"http://api.github.com/repos/octocat/Hello-World/stargazers\",\"statuses_url\":\"http://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\"subscribers_url\":\"http://api.github.com/repos/octocat/Hello-World/subscribers\",\"subscription_url\":\"http://api.github.com/repos/octocat/Hello-World/subscription\",\"tags_url\":\"http://api.github.com/repos/octocat/Hello-World/tags\",\"teams_url\":\"http://api.github.com/repos/octocat/Hello-World/teams\",\"trees_url\":\"http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\"clone_url\":\"https://github.com/octocat/Hello-World.git\",\"mirror_url\":\"git:git.example.com/octocat/Hello-World\",\"hooks_url\":\"http://api.github.com/repos/octocat/Hello-World/hooks\",\"svn_url\":\"https://svn.github.com/octocat/Hello-World\",\"homepage\":\"https://github.com\",\"language\":null,\"forks_count\":9,\"stargazers_count\":80,\"watchers_count\":80,\"size\":108,\"default_branch\":\"master\",\"open_issues_count\":0,\"topics\":[\"octocat\",\"atom\",\"electron\",\"api\"],\"has_issues\":true,\"has_projects\":true,\"has_wiki\":true,\"has_pages\":false,\"has_downloads\":true,\"archived\":false,\"disabled\":false,\"pushed_at\":\"2011-01-26T19:06:43Z\",\"created_at\":\"2011-01-26T19:01:12Z\",\"updated_at\":\"2011-01-26T19:14:43Z\",\"permissions\":{\"admin\":false,\"push\":false,\"pull\":true},\"allow_rebase_merge\":true,\"allow_squash_merge\":true,\"allow_merge_commit\":true,\"subscribers_count\":42,\"network_count\":0,\"anonymous_access_enabled\":false}}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Delete a repository",
    "scope": "repos",
    "id": "delete",
    "method": "DELETE",
    "url": "/repos/{owner}/{repo}",
    "isDeprecated": false,
    "description": "Deleting a repository requires admin access. If OAuth is used, the `delete_repo` scope is required.\n\nIf an organization owner has configured the organization to prevent members from deleting organization-owned repositories, a member will get this response:\n\nIf a site admin has configured the enterprise appliance to prevent users from deleting organization-owned repositories, a user will get this response:",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/repos/#delete-a-repository",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 403,
        "description": "response",
        "examples": [
          {
            "data": "{\"message\":\"Organization members cannot delete repositories.\",\"documentation_url\":\"https://developer.github.com/enterprise/2.17/v3/repos/#delete-a-repository\"}"
          },
          {
            "data": "{\"message\":\"Users cannot delete repositories on this appliance.\",\"documentation_url\":\"https://developer.github.com/enterprise/2.17/v3/repos/#delete-a-repository\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "List assignees",
    "scope": "issues",
    "id": "listAssignees",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/assignees",
    "isDeprecated": false,
    "description": "Lists the [available assignees](https://help.github.com/articles/assigning-issues-and-pull-requests-to-other-github-users/) for issues in a repository.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/issues/assignees/#list-assignees",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Check assignee",
    "scope": "issues",
    "id": "checkAssignee",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/assignees/{assignee}",
    "isDeprecated": false,
    "description": "Checks if a user has permission to be assigned to an issue in this repository.\n\nIf the `assignee` can be assigned to issues in the repository, a `204` header with no content is returned.\n\nOtherwise a `404` status code is returned.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/issues/assignees/#check-assignee",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "assignee",
        "description": "assignee parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [],
    "renamed": null
  },
  {
    "name": "List branches",
    "scope": "repos",
    "id": "listBranches",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/branches",
    "isDeprecated": false,
    "description": "",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/repos/branches/#list-branches",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "protected",
        "description": "Setting to `true` returns only protected branches. When set to `false`, only unprotected branches are returned. Omitting this parameter returns all branches.",
        "in": "QUERY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"name\":\"master\",\"commit\":{\"sha\":\"c5b97d5ae6c19d5c5df71a34c7fbeeda2479ccbc\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/commits/c5b97d5ae6c19d5c5df71a34c7fbeeda2479ccbc\"},\"protected\":true,\"protection\":{\"enabled\":true,\"required_status_checks\":{\"enforcement_level\":\"non_admins\",\"contexts\":[\"ci-test\",\"linter\"]}},\"protection_url\":\"https://api.github.com/repos/octocat/hello-world/branches/master/protection\"}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Get branch",
    "scope": "repos",
    "id": "getBranch",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/branches/{branch}",
    "isDeprecated": false,
    "description": "",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/repos/branches/#get-branch",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "branch",
        "description": "branch parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"name\":\"master\",\"commit\":{\"sha\":\"7fd1a60b01f91b314f59955a4e4d4e80d8edf11d\",\"node_id\":\"MDY6Q29tbWl0N2ZkMWE2MGIwMWY5MWIzMTRmNTk5NTVhNGU0ZDRlODBkOGVkZjExZA==\",\"commit\":{\"author\":{\"name\":\"The Octocat\",\"date\":\"2012-03-06T15:06:50-08:00\",\"email\":\"octocat@nowhere.com\"},\"url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits/7fd1a60b01f91b314f59955a4e4d4e80d8edf11d\",\"message\":\"Merge pull request #6 from Spaceghost/patch-1\\n\\nNew line at end of file.\",\"tree\":{\"sha\":\"b4eecafa9be2f2006ce1b709d6857b07069b4608\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/git/trees/b4eecafa9be2f2006ce1b709d6857b07069b4608\"},\"committer\":{\"name\":\"The Octocat\",\"date\":\"2012-03-06T15:06:50-08:00\",\"email\":\"octocat@nowhere.com\"},\"verification\":{\"verified\":false,\"reason\":\"unsigned\",\"signature\":null,\"payload\":null}},\"author\":{\"gravatar_id\":\"\",\"avatar_url\":\"https://secure.gravatar.com/avatar/7ad39074b0584bc555d0417ae3e7d974?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png\",\"url\":\"https://api.github.com/users/octocat\",\"id\":583231,\"login\":\"octocat\"},\"parents\":[{\"sha\":\"553c2077f0edc3d5dc5d17262f6aa498e69d6f8e\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/commits/553c2077f0edc3d5dc5d17262f6aa498e69d6f8e\"},{\"sha\":\"762941318ee16e59dabbacb1b4049eec22f0d303\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/commits/762941318ee16e59dabbacb1b4049eec22f0d303\"}],\"url\":\"https://api.github.com/repos/octocat/Hello-World/commits/7fd1a60b01f91b314f59955a4e4d4e80d8edf11d\",\"committer\":{\"gravatar_id\":\"\",\"avatar_url\":\"https://secure.gravatar.com/avatar/7ad39074b0584bc555d0417ae3e7d974?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png\",\"url\":\"https://api.github.com/users/octocat\",\"id\":583231,\"login\":\"octocat\"}},\"_links\":{\"html\":\"https://github.com/octocat/Hello-World/tree/master\",\"self\":\"https://api.github.com/repos/octocat/Hello-World/branches/master\"},\"protected\":true,\"protection\":{\"enabled\":true,\"required_status_checks\":{\"enforcement_level\":\"non_admins\",\"contexts\":[\"ci-test\",\"linter\"]}},\"protection_url\":\"https://api.github.com/repos/octocat/hello-world/branches/master/protection\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Get branch protection",
    "scope": "repos",
    "id": "getBranchProtection",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/branches/{branch}/protection",
    "isDeprecated": false,
    "description": "",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/repos/branches/#get-branch-protection",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "branch",
        "description": "branch parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"url\":\"https://api.github.com/repos/octocat/Hello-World/branches/master/protection\",\"required_status_checks\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_status_checks\",\"strict\":true,\"contexts\":[\"continuous-integration/travis-ci\"],\"contexts_url\":\"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_status_checks/contexts\"},\"enforce_admins\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/enforce_admins\",\"enabled\":true},\"required_pull_request_reviews\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_pull_request_reviews\",\"dismissal_restrictions\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/dismissal_restrictions\",\"users_url\":\"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/dismissal_restrictions/users\",\"teams_url\":\"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/dismissal_restrictions/teams\",\"users\":[{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false}],\"teams\":[{\"id\":1,\"node_id\":\"MDQ6VGVhbTE=\",\"url\":\"https://api.github.com/teams/1\",\"html_url\":\"https://api.github.com/teams/justice-league\",\"name\":\"Justice League\",\"slug\":\"justice-league\",\"description\":\"A great team.\",\"privacy\":\"closed\",\"permission\":\"admin\",\"members_url\":\"https://api.github.com/teams/1/members{/member}\",\"repositories_url\":\"https://api.github.com/teams/1/repos\",\"parent\":null}]},\"dismiss_stale_reviews\":true,\"require_code_owner_reviews\":true,\"required_approving_review_count\":2},\"restrictions\":[{\"url\":\"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/restrictions\",\"users_url\":\"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/restrictions/users\",\"teams_url\":\"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/restrictions/teams\",\"users\":[{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false}],\"teams\":[{\"id\":1,\"node_id\":\"MDQ6VGVhbTE=\",\"url\":\"https://api.github.com/teams/1\",\"html_url\":\"https://api.github.com/teams/justice-league\",\"name\":\"Justice League\",\"slug\":\"justice-league\",\"description\":\"A great team.\",\"privacy\":\"closed\",\"permission\":\"admin\",\"members_url\":\"https://api.github.com/teams/1/members{/member}\",\"repositories_url\":\"https://api.github.com/teams/1/repos\",\"parent\":null}]}]}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Update branch protection",
    "scope": "repos",
    "id": "updateBranchProtection",
    "method": "PUT",
    "url": "/repos/{owner}/{repo}/branches/{branch}/protection",
    "isDeprecated": false,
    "description": "Protecting a branch requires admin or owner permissions to the repository.\n\n**Note**: Passing new arrays of `users` and `teams` replaces their previous values.\n\n**Note**: The list of users and teams in total is limited to 100 items.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/repos/branches/#update-branch-protection",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "branch",
        "description": "branch parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "required_status_checks",
        "description": "Require status checks to pass before merging. Set to `null` to disable.",
        "in": "BODY",
        "type": "object",
        "required": true,
        "enum": null,
        "allowNull": true,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "required_status_checks.strict",
        "description": "Require branches to be up to date before merging.",
        "in": "BODY",
        "type": "boolean",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "required_status_checks.contexts",
        "description": "The list of status checks to require in order to merge into this branch",
        "in": "BODY",
        "type": "string[]",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "enforce_admins",
        "description": "Enforce all configured restrictions for administrators. Set to `true` to enforce required status checks for repository administrators. Set to `null` to disable.",
        "in": "BODY",
        "type": "boolean",
        "required": true,
        "enum": null,
        "allowNull": true,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "required_pull_request_reviews",
        "description": "Require at least one approving review on a pull request, before merging. Set to `null` to disable.",
        "in": "BODY",
        "type": "object",
        "required": true,
        "enum": null,
        "allowNull": true,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "required_pull_request_reviews.dismissal_restrictions",
        "description": "Specify which users and teams can dismiss pull request reviews. Pass an empty `dismissal_restrictions` object to disable. User and team `dismissal_restrictions` are only available for organization-owned repositories. Omit this parameter for personal repositories.",
        "in": "BODY",
        "type": "object",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "required_pull_request_reviews.dismissal_restrictions.users",
        "description": "The list of user `login`s with dismissal access",
        "in": "BODY",
        "type": "string[]",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "required_pull_request_reviews.dismissal_restrictions.teams",
        "description": "The list of team `slug`s with dismissal access",
        "in": "BODY",
        "type": "string[]",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "required_pull_request_reviews.dismiss_stale_reviews",
        "description": "Set to `true` if you want to automatically dismiss approving reviews when someone pushes a new commit.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "required_pull_request_reviews.require_code_owner_reviews",
        "description": "Blocks merging pull requests until [code owners](https://help.github.com/articles/about-code-owners/) review them.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "required_pull_request_reviews.required_approving_review_count",
        "description": "Specify the number of reviewers required to approve pull requests. Use a number between 1 and 6.",
        "in": "BODY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "restrictions",
        "description": "Restrict who can push to the protected branch. User and team `restrictions` are only available for organization-owned repositories. Set to `null` to disable.",
        "in": "BODY",
        "type": "object",
        "required": true,
        "enum": null,
        "allowNull": true,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "restrictions.users",
        "description": "The list of user `login`s with push access",
        "in": "BODY",
        "type": "string[]",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "restrictions.teams",
        "description": "The list of team `slug`s with push access",
        "in": "BODY",
        "type": "string[]",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"url\":\"https://api.github.com/repos/octocat/Hello-World/branches/master/protection\",\"required_status_checks\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_status_checks\",\"strict\":true,\"contexts\":[\"continuous-integration/travis-ci\"],\"contexts_url\":\"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_status_checks/contexts\"},\"enforce_admins\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/enforce_admins\",\"enabled\":true},\"required_pull_request_reviews\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_pull_request_reviews\",\"dismissal_restrictions\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/dismissal_restrictions\",\"users_url\":\"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/dismissal_restrictions/users\",\"teams_url\":\"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/dismissal_restrictions/teams\",\"users\":[{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false}],\"teams\":[{\"id\":1,\"node_id\":\"MDQ6VGVhbTE=\",\"url\":\"https://api.github.com/teams/1\",\"html_url\":\"https://api.github.com/teams/justice-league\",\"name\":\"Justice League\",\"slug\":\"justice-league\",\"description\":\"A great team.\",\"privacy\":\"closed\",\"permission\":\"admin\",\"members_url\":\"https://api.github.com/teams/1/members{/member}\",\"repositories_url\":\"https://api.github.com/teams/1/repos\",\"parent\":null}]},\"dismiss_stale_reviews\":true,\"require_code_owner_reviews\":true,\"required_approving_review_count\":2},\"restrictions\":[{\"url\":\"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/restrictions\",\"users_url\":\"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/restrictions/users\",\"teams_url\":\"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/restrictions/teams\",\"users\":[{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false}],\"teams\":[{\"id\":1,\"node_id\":\"MDQ6VGVhbTE=\",\"url\":\"https://api.github.com/teams/1\",\"html_url\":\"https://api.github.com/teams/justice-league\",\"name\":\"Justice League\",\"slug\":\"justice-league\",\"description\":\"A great team.\",\"privacy\":\"closed\",\"permission\":\"admin\",\"members_url\":\"https://api.github.com/teams/1/members{/member}\",\"repositories_url\":\"https://api.github.com/teams/1/repos\",\"parent\":null}]}]}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Remove branch protection",
    "scope": "repos",
    "id": "removeBranchProtection",
    "method": "DELETE",
    "url": "/repos/{owner}/{repo}/branches/{branch}/protection",
    "isDeprecated": false,
    "description": "",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/repos/branches/#remove-branch-protection",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "branch",
        "description": "branch parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [],
    "renamed": null
  },
  {
    "name": "Get admin enforcement of protected branch",
    "scope": "repos",
    "id": "getProtectedBranchAdminEnforcement",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins",
    "isDeprecated": false,
    "description": "",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/repos/branches/#get-admin-enforcement-of-protected-branch",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "branch",
        "description": "branch parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"url\":\"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/enforce_admins\",\"enabled\":true}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Add admin enforcement of protected branch",
    "scope": "repos",
    "id": "addProtectedBranchAdminEnforcement",
    "method": "POST",
    "url": "/repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins",
    "isDeprecated": false,
    "description": "Adding admin enforcement requires admin or owner permissions to the repository and branch protection to be enabled.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/repos/branches/#add-admin-enforcement-of-protected-branch",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "branch",
        "description": "branch parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"url\":\"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/enforce_admins\",\"enabled\":true}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Remove admin enforcement of protected branch",
    "scope": "repos",
    "id": "removeProtectedBranchAdminEnforcement",
    "method": "DELETE",
    "url": "/repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins",
    "isDeprecated": false,
    "description": "Removing admin enforcement requires admin or owner permissions to the repository and branch protection to be enabled.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/repos/branches/#remove-admin-enforcement-of-protected-branch",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "branch",
        "description": "branch parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [],
    "renamed": null
  },
  {
    "name": "Get pull request review enforcement of protected branch",
    "scope": "repos",
    "id": "getProtectedBranchPullRequestReviewEnforcement",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews",
    "isDeprecated": false,
    "description": "",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/repos/branches/#get-pull-request-review-enforcement-of-protected-branch",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "branch",
        "description": "branch parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"url\":\"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_pull_request_reviews\",\"dismissal_restrictions\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/dismissal_restrictions\",\"users_url\":\"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/dismissal_restrictions/users\",\"teams_url\":\"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/dismissal_restrictions/teams\",\"users\":[{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false}],\"teams\":[{\"id\":1,\"node_id\":\"MDQ6VGVhbTE=\",\"url\":\"https://api.github.com/teams/1\",\"html_url\":\"https://api.github.com/teams/justice-league\",\"name\":\"Justice League\",\"slug\":\"justice-league\",\"description\":\"A great team.\",\"privacy\":\"closed\",\"permission\":\"admin\",\"members_url\":\"https://api.github.com/teams/1/members{/member}\",\"repositories_url\":\"https://api.github.com/teams/1/repos\",\"parent\":null}]},\"dismiss_stale_reviews\":true,\"require_code_owner_reviews\":true,\"required_approving_review_count\":2}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Update pull request review enforcement of protected branch",
    "scope": "repos",
    "id": "updateProtectedBranchPullRequestReviewEnforcement",
    "method": "PATCH",
    "url": "/repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews",
    "isDeprecated": false,
    "description": "Updating pull request review enforcement requires admin or owner permissions to the repository and branch protection to be enabled.\n\n**Note**: Passing new arrays of `users` and `teams` replaces their previous values.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/repos/branches/#update-pull-request-review-enforcement-of-protected-branch",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "branch",
        "description": "branch parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "dismissal_restrictions",
        "description": "Specify which users and teams can dismiss pull request reviews. Pass an empty `dismissal_restrictions` object to disable. User and team `dismissal_restrictions` are only available for organization-owned repositories. Omit this parameter for personal repositories.",
        "in": "BODY",
        "type": "object",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "dismissal_restrictions.users",
        "description": "The list of user `login`s with dismissal access",
        "in": "BODY",
        "type": "string[]",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "dismissal_restrictions.teams",
        "description": "The list of team `slug`s with dismissal access",
        "in": "BODY",
        "type": "string[]",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "dismiss_stale_reviews",
        "description": "Set to `true` if you want to automatically dismiss approving reviews when someone pushes a new commit.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "require_code_owner_reviews",
        "description": "Blocks merging pull requests until [code owners](https://help.github.com/articles/about-code-owners/) have reviewed.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "required_approving_review_count",
        "description": "Specifies the number of reviewers required to approve pull requests. Use a number between 1 and 6.",
        "in": "BODY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"url\":\"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_pull_request_reviews\",\"dismissal_restrictions\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/dismissal_restrictions\",\"users_url\":\"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/dismissal_restrictions/users\",\"teams_url\":\"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/dismissal_restrictions/teams\",\"users\":[{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false}],\"teams\":[{\"id\":1,\"node_id\":\"MDQ6VGVhbTE=\",\"url\":\"https://api.github.com/teams/1\",\"html_url\":\"https://api.github.com/teams/justice-league\",\"name\":\"Justice League\",\"slug\":\"justice-league\",\"description\":\"A great team.\",\"privacy\":\"closed\",\"permission\":\"admin\",\"members_url\":\"https://api.github.com/teams/1/members{/member}\",\"repositories_url\":\"https://api.github.com/teams/1/repos\",\"parent\":null}]},\"dismiss_stale_reviews\":true,\"require_code_owner_reviews\":true,\"required_approving_review_count\":2}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Remove pull request review enforcement of protected branch",
    "scope": "repos",
    "id": "removeProtectedBranchPullRequestReviewEnforcement",
    "method": "DELETE",
    "url": "/repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews",
    "isDeprecated": false,
    "description": "",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/repos/branches/#remove-pull-request-review-enforcement-of-protected-branch",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "branch",
        "description": "branch parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [],
    "renamed": null
  },
  {
    "name": "Get required signatures of protected branch",
    "scope": "repos",
    "id": "getProtectedBranchRequiredSignatures",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/branches/{branch}/protection/required_signatures",
    "isDeprecated": false,
    "description": "When authenticated with admin or owner permissions to the repository, you can use this endpoint to check whether a branch requires signed commits. An enabled status of `true` indicates you must sign commits on this branch. For more information, see [Signing commits with GPG](https://help.github.com/articles/signing-commits-with-gpg) in GitHub Help.\n\n**Note**: You must enable branch protection to require signed commits.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/repos/branches/#get-required-signatures-of-protected-branch",
    "previews": [{ "name": "zzzax" }],
    "headers": [
      { "name": "accept", "value": "application/vnd.github.zzzax-preview+json" }
    ],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "branch",
        "description": "branch parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"url\":\"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_signatures\",\"enabled\":true}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Add required signatures of protected branch",
    "scope": "repos",
    "id": "addProtectedBranchRequiredSignatures",
    "method": "POST",
    "url": "/repos/{owner}/{repo}/branches/{branch}/protection/required_signatures",
    "isDeprecated": false,
    "description": "When authenticated with admin or owner permissions to the repository, you can use this endpoint to require signed commits on a branch. You must enable branch protection to require signed commits.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/repos/branches/#add-required-signatures-of-protected-branch",
    "previews": [{ "name": "zzzax" }],
    "headers": [
      { "name": "accept", "value": "application/vnd.github.zzzax-preview+json" }
    ],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "branch",
        "description": "branch parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"url\":\"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_signatures\",\"enabled\":true}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Remove required signatures of protected branch",
    "scope": "repos",
    "id": "removeProtectedBranchRequiredSignatures",
    "method": "DELETE",
    "url": "/repos/{owner}/{repo}/branches/{branch}/protection/required_signatures",
    "isDeprecated": false,
    "description": "When authenticated with admin or owner permissions to the repository, you can use this endpoint to disable required signed commits on a branch. You must enable branch protection to require signed commits.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/repos/branches/#remove-required-signatures-of-protected-branch",
    "previews": [{ "name": "zzzax" }],
    "headers": [
      { "name": "accept", "value": "application/vnd.github.zzzax-preview+json" }
    ],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "branch",
        "description": "branch parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [],
    "renamed": null
  },
  {
    "name": "Get required status checks of protected branch",
    "scope": "repos",
    "id": "getProtectedBranchRequiredStatusChecks",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks",
    "isDeprecated": false,
    "description": "",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/repos/branches/#get-required-status-checks-of-protected-branch",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "branch",
        "description": "branch parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"url\":\"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_status_checks\",\"strict\":true,\"contexts\":[\"continuous-integration/travis-ci\"],\"contexts_url\":\"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_status_checks/contexts\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Update required status checks of protected branch",
    "scope": "repos",
    "id": "updateProtectedBranchRequiredStatusChecks",
    "method": "PATCH",
    "url": "/repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks",
    "isDeprecated": false,
    "description": "Updating required status checks requires admin or owner permissions to the repository and branch protection to be enabled.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/repos/branches/#update-required-status-checks-of-protected-branch",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "branch",
        "description": "branch parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "strict",
        "description": "Require branches to be up to date before merging.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "contexts",
        "description": "The list of status checks to require in order to merge into this branch",
        "in": "BODY",
        "type": "string[]",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"url\":\"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_status_checks\",\"strict\":true,\"contexts\":[\"continuous-integration/travis-ci\"],\"contexts_url\":\"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_status_checks/contexts\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Remove required status checks of protected branch",
    "scope": "repos",
    "id": "removeProtectedBranchRequiredStatusChecks",
    "method": "DELETE",
    "url": "/repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks",
    "isDeprecated": false,
    "description": "",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/repos/branches/#remove-required-status-checks-of-protected-branch",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "branch",
        "description": "branch parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [],
    "renamed": null
  },
  {
    "name": "List required status checks contexts of protected branch",
    "scope": "repos",
    "id": "listProtectedBranchRequiredStatusChecksContexts",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",
    "isDeprecated": false,
    "description": "",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/repos/branches/#list-required-status-checks-contexts-of-protected-branch",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "branch",
        "description": "branch parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [{ "data": "[\"continuous-integration/travis-ci\"]" }]
      }
    ],
    "renamed": null
  },
  {
    "name": "Replace required status checks contexts of protected branch",
    "scope": "repos",
    "id": "replaceProtectedBranchRequiredStatusChecksContexts",
    "method": "PUT",
    "url": "/repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",
    "isDeprecated": false,
    "description": "",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/repos/branches/#replace-required-status-checks-contexts-of-protected-branch",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "branch",
        "description": "branch parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "contexts",
        "description": "contexts parameter",
        "in": "BODY",
        "type": "string[]",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": true,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [{ "data": "[\"continuous-integration/travis-ci\"]" }]
      }
    ],
    "renamed": null
  },
  {
    "name": "Add required status checks contexts of protected branch",
    "scope": "repos",
    "id": "addProtectedBranchRequiredStatusChecksContexts",
    "method": "POST",
    "url": "/repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",
    "isDeprecated": false,
    "description": "",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/repos/branches/#add-required-status-checks-contexts-of-protected-branch",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "branch",
        "description": "branch parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "contexts",
        "description": "contexts parameter",
        "in": "BODY",
        "type": "string[]",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": true,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[\"continuous-integration/travis-ci\",\"continuous-integration/jenkins\"]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Remove required status checks contexts of protected branch",
    "scope": "repos",
    "id": "removeProtectedBranchRequiredStatusChecksContexts",
    "method": "DELETE",
    "url": "/repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",
    "isDeprecated": false,
    "description": "",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/repos/branches/#remove-required-status-checks-contexts-of-protected-branch",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "branch",
        "description": "branch parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "contexts",
        "description": "contexts parameter",
        "in": "BODY",
        "type": "string[]",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": true,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [{ "data": "[\"continuous-integration/travis-ci\"]" }]
      }
    ],
    "renamed": null
  },
  {
    "name": "Get restrictions of protected branch",
    "scope": "repos",
    "id": "getProtectedBranchRestrictions",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/branches/{branch}/protection/restrictions",
    "isDeprecated": false,
    "description": "Lists who has access to this protected branch. {{#note}}\n\n**Note**: Users and teams `restrictions` are only available for organization-owned repositories.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/repos/branches/#get-restrictions-of-protected-branch",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "branch",
        "description": "branch parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"url\":\"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/restrictions\",\"users_url\":\"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/restrictions/users\",\"teams_url\":\"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/restrictions/teams\",\"users\":[{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false}],\"teams\":[{\"id\":1,\"node_id\":\"MDQ6VGVhbTE=\",\"url\":\"https://api.github.com/teams/1\",\"html_url\":\"https://api.github.com/teams/justice-league\",\"name\":\"Justice League\",\"slug\":\"justice-league\",\"description\":\"A great team.\",\"privacy\":\"closed\",\"permission\":\"admin\",\"members_url\":\"https://api.github.com/teams/1/members{/member}\",\"repositories_url\":\"https://api.github.com/teams/1/repos\",\"parent\":null}]}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Remove restrictions of protected branch",
    "scope": "repos",
    "id": "removeProtectedBranchRestrictions",
    "method": "DELETE",
    "url": "/repos/{owner}/{repo}/branches/{branch}/protection/restrictions",
    "isDeprecated": false,
    "description": "Disables the ability to restrict who can push to this branch.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/repos/branches/#remove-restrictions-of-protected-branch",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "branch",
        "description": "branch parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [],
    "renamed": null
  },
  {
    "name": "Get teams with access to protected branch",
    "scope": "repos",
    "id": "getTeamsWithAccessToProtectedBranch",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",
    "isDeprecated": false,
    "description": "Lists the teams who have push access to this branch. If you pass the `hellcat-preview` media type, the list includes child teams.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/repos/branches/#list-teams-with-access-to-protected-branch",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "branch",
        "description": "branch parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"id\":1,\"node_id\":\"MDQ6VGVhbTE=\",\"url\":\"https://api.github.com/teams/1\",\"html_url\":\"https://api.github.com/teams/justice-league\",\"name\":\"Justice League\",\"slug\":\"justice-league\",\"description\":\"A great team.\",\"privacy\":\"closed\",\"permission\":\"admin\",\"members_url\":\"https://api.github.com/teams/1/members{/member}\",\"repositories_url\":\"https://api.github.com/teams/1/repos\",\"parent\":null}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Get teams with access to protected branch",
    "scope": "repos",
    "id": "listProtectedBranchTeamRestrictions",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",
    "isDeprecated": false,
    "description": "Lists the teams who have push access to this branch. If you pass the `hellcat-preview` media type, the list includes child teams.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/repos/branches/#list-teams-with-access-to-protected-branch",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "branch",
        "description": "branch parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"id\":1,\"node_id\":\"MDQ6VGVhbTE=\",\"url\":\"https://api.github.com/teams/1\",\"html_url\":\"https://api.github.com/teams/justice-league\",\"name\":\"Justice League\",\"slug\":\"justice-league\",\"description\":\"A great team.\",\"privacy\":\"closed\",\"permission\":\"admin\",\"members_url\":\"https://api.github.com/teams/1/members{/member}\",\"repositories_url\":\"https://api.github.com/teams/1/repos\",\"parent\":null}]"
          }
        ]
      }
    ],
    "renamed": {
      "before": {
        "scope": "repos",
        "id": "listProtectedBranchTeamRestrictions"
      },
      "after": {
        "scope": "repos",
        "id": "getTeamsWithAccessToProtectedBranch"
      },
      "date": "2019-09-09",
      "note": "\"List team restrictions of protected branch\" is now \"Get teams with access to protected branch\""
    }
  },
  {
    "name": "Get teams with access to protected branch",
    "scope": "repos",
    "id": "listTeamsWithAccessToProtectedBranch",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",
    "isDeprecated": false,
    "description": "Lists the teams who have push access to this branch. If you pass the `hellcat-preview` media type, the list includes child teams.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/repos/branches/#list-teams-with-access-to-protected-branch",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "branch",
        "description": "branch parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"id\":1,\"node_id\":\"MDQ6VGVhbTE=\",\"url\":\"https://api.github.com/teams/1\",\"html_url\":\"https://api.github.com/teams/justice-league\",\"name\":\"Justice League\",\"slug\":\"justice-league\",\"description\":\"A great team.\",\"privacy\":\"closed\",\"permission\":\"admin\",\"members_url\":\"https://api.github.com/teams/1/members{/member}\",\"repositories_url\":\"https://api.github.com/teams/1/repos\",\"parent\":null}]"
          }
        ]
      }
    ],
    "renamed": {
      "before": {
        "scope": "repos",
        "id": "listTeamsWithAccessToProtectedBranch"
      },
      "after": {
        "scope": "repos",
        "id": "getTeamsWithAccessToProtectedBranch"
      },
      "date": "2019-09-13",
      "note": "\"List teams with access to protected branch\" is now \"Get teams with access to protected branch\""
    }
  },
  {
    "name": "Replace team restrictions of protected branch",
    "scope": "repos",
    "id": "replaceProtectedBranchTeamRestrictions",
    "method": "PUT",
    "url": "/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",
    "isDeprecated": false,
    "description": "Replaces the list of teams that have push access to this branch. This removes all teams that previously had push access and grants push access to the new list of teams. If you pass the `hellcat-preview` media type, team restrictions include child teams.\n\n| Type    | Description                                                                                                                         |\n| ------- | ----------------------------------------------------------------------------------------------------------------------------------- |\n| `array` | The teams that can have push access. Use the team's `slug`. **Note**: The list of users and teams in total is limited to 100 items. |",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/repos/branches/#replace-team-restrictions-of-protected-branch",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "branch",
        "description": "branch parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "teams",
        "description": "teams parameter",
        "in": "BODY",
        "type": "string[]",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": true,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"id\":1,\"node_id\":\"MDQ6VGVhbTE=\",\"url\":\"https://api.github.com/teams/1\",\"html_url\":\"https://api.github.com/teams/justice-league\",\"name\":\"Justice League\",\"slug\":\"justice-league\",\"description\":\"A great team.\",\"privacy\":\"closed\",\"permission\":\"admin\",\"members_url\":\"https://api.github.com/teams/1/members{/member}\",\"repositories_url\":\"https://api.github.com/teams/1/repos\",\"parent\":null}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Add team restrictions of protected branch",
    "scope": "repos",
    "id": "addProtectedBranchTeamRestrictions",
    "method": "POST",
    "url": "/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",
    "isDeprecated": false,
    "description": "Grants the specified teams push access for this branch. If you pass the `hellcat-preview` media type, you can also give push access to child teams.\n\n| Type    | Description                                                                                                                         |\n| ------- | ----------------------------------------------------------------------------------------------------------------------------------- |\n| `array` | The teams that can have push access. Use the team's `slug`. **Note**: The list of users and teams in total is limited to 100 items. |",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/repos/branches/#add-team-restrictions-of-protected-branch",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "branch",
        "description": "branch parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "teams",
        "description": "teams parameter",
        "in": "BODY",
        "type": "string[]",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": true,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"id\":1,\"node_id\":\"MDQ6VGVhbTE=\",\"url\":\"https://api.github.com/teams/1\",\"html_url\":\"https://api.github.com/teams/justice-league\",\"name\":\"Justice League\",\"slug\":\"justice-league\",\"description\":\"A great team.\",\"privacy\":\"closed\",\"permission\":\"admin\",\"members_url\":\"https://api.github.com/teams/1/members{/member}\",\"repositories_url\":\"https://api.github.com/teams/1/repos\",\"parent\":null}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Remove team restrictions of protected branch",
    "scope": "repos",
    "id": "removeProtectedBranchTeamRestrictions",
    "method": "DELETE",
    "url": "/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",
    "isDeprecated": false,
    "description": "Removes the ability of a team to push to this branch. If you pass the `hellcat-preview` media type, you can also remove push access for child teams.\n\n| Type    | Description                                                                                                                                  |\n| ------- | -------------------------------------------------------------------------------------------------------------------------------------------- |\n| `array` | Teams that should no longer have push access. Use the team's `slug`. **Note**: The list of users and teams in total is limited to 100 items. |",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/repos/branches/#remove-team-restrictions-of-protected-branch",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "branch",
        "description": "branch parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "teams",
        "description": "teams parameter",
        "in": "BODY",
        "type": "string[]",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": true,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"id\":1,\"node_id\":\"MDQ6VGVhbTE=\",\"url\":\"https://api.github.com/teams/1\",\"html_url\":\"https://api.github.com/teams/justice-league\",\"name\":\"Justice League\",\"slug\":\"justice-league\",\"description\":\"A great team.\",\"privacy\":\"closed\",\"permission\":\"admin\",\"members_url\":\"https://api.github.com/teams/1/members{/member}\",\"repositories_url\":\"https://api.github.com/teams/1/repos\",\"parent\":null}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Get users with access to protected branch",
    "scope": "repos",
    "id": "getUsersWithAccessToProtectedBranch",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",
    "isDeprecated": false,
    "description": "Lists the people who have push access to this branch.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/repos/branches/#list-users-with-access-to-protected-branch",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "branch",
        "description": "branch parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Get users with access to protected branch",
    "scope": "repos",
    "id": "listProtectedBranchUserRestrictions",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",
    "isDeprecated": false,
    "description": "Lists the people who have push access to this branch.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/repos/branches/#list-users-with-access-to-protected-branch",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "branch",
        "description": "branch parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false}]"
          }
        ]
      }
    ],
    "renamed": {
      "before": {
        "scope": "repos",
        "id": "listProtectedBranchUserRestrictions"
      },
      "after": {
        "scope": "repos",
        "id": "getUsersWithAccessToProtectedBranch"
      },
      "date": "2019-09-09",
      "note": "\"List user restrictions of protected branch\" is now \"Get users with access to protected branch\""
    }
  },
  {
    "name": "Get users with access to protected branch",
    "scope": "repos",
    "id": "listUsersWithAccessToProtectedBranch",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",
    "isDeprecated": false,
    "description": "Lists the people who have push access to this branch.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/repos/branches/#list-users-with-access-to-protected-branch",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "branch",
        "description": "branch parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false}]"
          }
        ]
      }
    ],
    "renamed": {
      "before": {
        "scope": "repos",
        "id": "listUsersWithAccessToProtectedBranch"
      },
      "after": {
        "scope": "repos",
        "id": "getUsersWithAccessToProtectedBranch"
      },
      "date": "2019-09-13",
      "note": "\"List users with access to protected branch\" is now \"Get users with access to protected branch\""
    }
  },
  {
    "name": "Replace user restrictions of protected branch",
    "scope": "repos",
    "id": "replaceProtectedBranchUserRestrictions",
    "method": "PUT",
    "url": "/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",
    "isDeprecated": false,
    "description": "Replaces the list of people that have push access to this branch. This removes all people that previously had push access and grants push access to the new list of people.\n\n| Type    | Description                                                                                                            |\n| ------- | ---------------------------------------------------------------------------------------------------------------------- |\n| `array` | Usernames for people who can have push access. **Note**: The list of users and teams in total is limited to 100 items. |",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/repos/branches/#replace-user-restrictions-of-protected-branch",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "branch",
        "description": "branch parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "users",
        "description": "users parameter",
        "in": "BODY",
        "type": "string[]",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": true,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Add user restrictions of protected branch",
    "scope": "repos",
    "id": "addProtectedBranchUserRestrictions",
    "method": "POST",
    "url": "/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",
    "isDeprecated": false,
    "description": "Grants the specified people push access for this branch.\n\n| Type    | Description                                                                                                            |\n| ------- | ---------------------------------------------------------------------------------------------------------------------- |\n| `array` | Usernames for people who can have push access. **Note**: The list of users and teams in total is limited to 100 items. |",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/repos/branches/#add-user-restrictions-of-protected-branch",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "branch",
        "description": "branch parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "users",
        "description": "users parameter",
        "in": "BODY",
        "type": "string[]",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": true,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Remove user restrictions of protected branch",
    "scope": "repos",
    "id": "removeProtectedBranchUserRestrictions",
    "method": "DELETE",
    "url": "/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",
    "isDeprecated": false,
    "description": "Removes the ability of a user to push to this branch.\n\n| Type    | Description                                                                                                                            |\n| ------- | -------------------------------------------------------------------------------------------------------------------------------------- |\n| `array` | Usernames of the people who should no longer have push access. **Note**: The list of users and teams in total is limited to 100 items. |",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/repos/branches/#remove-user-restrictions-of-protected-branch",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "branch",
        "description": "branch parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "users",
        "description": "users parameter",
        "in": "BODY",
        "type": "string[]",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": true,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Create a check run",
    "scope": "checks",
    "id": "create",
    "method": "POST",
    "url": "/repos/{owner}/{repo}/check-runs",
    "isDeprecated": false,
    "description": "**Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array.\n\nCreates a new check run for a specific commit in a repository. Your GitHub App must have the `checks:write` permission to create check runs.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/checks/runs/#create-a-check-run",
    "previews": [{ "name": "antiope" }],
    "headers": [
      {
        "name": "accept",
        "value": "application/vnd.github.antiope-preview+json"
      }
    ],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "name",
        "description": "The name of the check. For example, \"code-coverage\".",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "head_sha",
        "description": "The SHA of the commit.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "details_url",
        "description": "The URL of the integrator's site that has the full details of the check.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "external_id",
        "description": "A reference for the run on the integrator's system.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "status",
        "description": "The current status. Can be one of `queued`, `in_progress`, or `completed`.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": ["queued", "in_progress", "completed"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "started_at",
        "description": "The time that the check run began. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "conclusion",
        "description": "**Required if you provide `completed_at` or a `status` of `completed`**. The final conclusion of the check. Can be one of `success`, `failure`, `neutral`, `cancelled`, `timed_out`, or `action_required`. When the conclusion is `action_required`, additional details should be provided on the site specified by `details_url`.  \n**Note:** Providing `conclusion` will automatically set the `status` parameter to `completed`.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": [
          "success",
          "failure",
          "neutral",
          "cancelled",
          "timed_out",
          "action_required"
        ],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "completed_at",
        "description": "**Required if you provide `conclusion`**. The time the check completed. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "output",
        "description": "Check runs can accept a variety of data in the `output` object, including a `title` and `summary` and can optionally provide descriptive details about the run. See the [`output` object](https://developer.github.com/enterprise/2.17/v3/checks/runs/#output-object) description.",
        "in": "BODY",
        "type": "object",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "output.title",
        "description": "The title of the check run.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "output.summary",
        "description": "The summary of the check run. This parameter supports Markdown.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "output.text",
        "description": "The details of the check run. This parameter supports Markdown.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "output.annotations",
        "description": "Adds information from your analysis to specific lines of code. Annotations are visible on GitHub in the **Checks** and **Files changed** tab of the pull request. The Checks API limits the number of annotations to a maximum of 50 per API request. To create more than 50 annotations, you have to make multiple requests to the [Update a check run](https://developer.github.com/enterprise/2.17/v3/checks/runs/#update-a-check-run) endpoint. Each time you update the check run, annotations are appended to the list of annotations that already exist for the check run. For details about how you can view annotations on GitHub, see \"[About status checks](https://help.github.com/articles/about-status-checks#checks)\". See the [`annotations` object](https://developer.github.com/enterprise/2.17/v3/checks/runs/#annotations-object) description for details about how to use this parameter.",
        "in": "BODY",
        "type": "object[]",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "output.annotations[].path",
        "description": "The path of the file to add an annotation to. For example, `assets/css/main.css`.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "output.annotations[].start_line",
        "description": "The start line of the annotation.",
        "in": "BODY",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "output.annotations[].end_line",
        "description": "The end line of the annotation.",
        "in": "BODY",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "output.annotations[].start_column",
        "description": "The start column of the annotation. Annotations only support `start_column` and `end_column` on the same line. Omit this parameter if `start_line` and `end_line` have different values.",
        "in": "BODY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "output.annotations[].end_column",
        "description": "The end column of the annotation. Annotations only support `start_column` and `end_column` on the same line. Omit this parameter if `start_line` and `end_line` have different values.",
        "in": "BODY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "output.annotations[].annotation_level",
        "description": "The level of the annotation. Can be one of `notice`, `warning`, or `failure`.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": ["notice", "warning", "failure"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "output.annotations[].message",
        "description": "A short description of the feedback for these lines of code. The maximum size is 64 KB.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "output.annotations[].title",
        "description": "The title that represents the annotation. The maximum size is 255 characters.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "output.annotations[].raw_details",
        "description": "Details about this annotation. The maximum size is 64 KB.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "output.images",
        "description": "Adds images to the output displayed in the GitHub pull request UI. See the [`images` object](https://developer.github.com/enterprise/2.17/v3/checks/runs/#images-object) description for details.",
        "in": "BODY",
        "type": "object[]",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "output.images[].alt",
        "description": "The alternative text for the image.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "output.images[].image_url",
        "description": "The full URL of the image.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "output.images[].caption",
        "description": "A short image description.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "actions",
        "description": "Displays a button on GitHub that can be clicked to alert your app to do additional tasks. For example, a code linting app can display a button that automatically fixes detected errors. The button created in this object is displayed after the check run completes. When a user clicks the button, GitHub sends the [`check_run.requested_action` webhook](https://developer.github.com/enterprise/2.17/v3/activity/events/types/#checkrunevent) to your app. Each action includes a `label`, `identifier` and `description`. A maximum of three actions are accepted. See the [`actions` object](https://developer.github.com/enterprise/2.17/v3/checks/runs/#actions-object) description. To learn more about check runs and requested actions, see \"[Check runs and requested actions](https://developer.github.com/enterprise/2.17/v3/checks/runs/#check-runs-and-requested-actions).\" To learn more about check runs and requested actions, see \"[Check runs and requested actions](https://developer.github.com/enterprise/2.17/v3/checks/runs/#check-runs-and-requested-actions).\"",
        "in": "BODY",
        "type": "object[]",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "actions[].label",
        "description": "The text to be displayed on a button in the web UI. The maximum size is 20 characters.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "actions[].description",
        "description": "A short explanation of what this action would do. The maximum size is 40 characters.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "actions[].identifier",
        "description": "A reference for the action on the integrator's system. The maximum size is 20 characters.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 201,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":4,\"head_sha\":\"ce587453ced02b1526dfb4cb910479d431683101\",\"node_id\":\"MDg6Q2hlY2tSdW40\",\"external_id\":\"42\",\"url\":\"https://api.github.com/repos/github/hello-world/check-runs/4\",\"html_url\":\"http://github.com/github/hello-world/runs/4\",\"details_url\":\"https://example.com\",\"status\":\"in_progress\",\"conclusion\":null,\"started_at\":\"2018-05-04T01:14:52Z\",\"completed_at\":null,\"output\":{\"title\":\"Mighty Readme Report\",\"summary\":\"\",\"text\":\"\"},\"name\":\"mighty_readme\",\"check_suite\":{\"id\":5},\"app\":{\"id\":1,\"slug\":\"octoapp\",\"node_id\":\"MDExOkludGVncmF0aW9uMQ==\",\"owner\":{\"login\":\"github\",\"id\":1,\"node_id\":\"MDEyOk9yZ2FuaXphdGlvbjE=\",\"url\":\"https://api.github.com/orgs/github\",\"repos_url\":\"https://api.github.com/orgs/github/repos\",\"events_url\":\"https://api.github.com/orgs/github/events\",\"hooks_url\":\"https://api.github.com/orgs/github/hooks\",\"issues_url\":\"https://api.github.com/orgs/github/issues\",\"members_url\":\"https://api.github.com/orgs/github/members{/member}\",\"public_members_url\":\"https://api.github.com/orgs/github/public_members{/member}\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"description\":\"A great organization\"},\"name\":\"Octocat App\",\"description\":\"\",\"external_url\":\"https://example.com\",\"html_url\":\"https://github.com/apps/octoapp\",\"created_at\":\"2017-07-08T16:18:44-04:00\",\"updated_at\":\"2017-07-08T16:18:44-04:00\",\"permissions\":{\"metadata\":\"read\",\"contents\":\"read\",\"issues\":\"write\",\"single_file\":\"write\"},\"events\":[\"push\",\"pull_request\"]},\"pull_requests\":[{\"url\":\"https://api.github.com/repos/github/hello-world/pulls/1\",\"id\":1934,\"number\":3956,\"head\":{\"ref\":\"say-hello\",\"sha\":\"3dca65fa3e8d4b3da3f3d056c59aee1c50f41390\",\"repo\":{\"id\":526,\"url\":\"https://api.github.com/repos/github/hello-world\",\"name\":\"hello-world\"}},\"base\":{\"ref\":\"master\",\"sha\":\"e7fdf7640066d71ad16a86fbcbb9c6a10a18af4f\",\"repo\":{\"id\":526,\"url\":\"https://api.github.com/repos/github/hello-world\",\"name\":\"hello-world\"}}}]}"
          },
          {
            "data": "{\"id\":4,\"head_sha\":\"ce587453ced02b1526dfb4cb910479d431683101\",\"node_id\":\"MDg6Q2hlY2tSdW40\",\"external_id\":\"\",\"url\":\"https://api.github.com/repos/github/hello-world/check-runs/4\",\"html_url\":\"http://github.com/github/hello-world/runs/4\",\"details_url\":\"https://example.com\",\"status\":\"completed\",\"conclusion\":\"neutral\",\"started_at\":\"2018-05-04T01:14:52Z\",\"completed_at\":\"2018-05-04T01:14:52Z\",\"output\":{\"title\":\"Mighty Readme report\",\"summary\":\"There are 0 failures, 2 warnings, and 1 notice.\",\"text\":\"You may have some misspelled words on lines 2 and 4. You also may want to add a section in your README about how to install your app.\",\"annotations_count\":2,\"annotations_url\":\"https://api.github.com/repos/github/hello-world/check-runs/4/annotations\"},\"name\":\"mighty_readme\",\"check_suite\":{\"id\":5},\"app\":{\"id\":1,\"slug\":\"octoapp\",\"node_id\":\"MDExOkludGVncmF0aW9uMQ==\",\"owner\":{\"login\":\"github\",\"id\":1,\"node_id\":\"MDEyOk9yZ2FuaXphdGlvbjE=\",\"url\":\"https://api.github.com/orgs/github\",\"repos_url\":\"https://api.github.com/orgs/github/repos\",\"events_url\":\"https://api.github.com/orgs/github/events\",\"hooks_url\":\"https://api.github.com/orgs/github/hooks\",\"issues_url\":\"https://api.github.com/orgs/github/issues\",\"members_url\":\"https://api.github.com/orgs/github/members{/member}\",\"public_members_url\":\"https://api.github.com/orgs/github/public_members{/member}\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"description\":\"A great organization\"},\"name\":\"Octocat App\",\"description\":\"\",\"external_url\":\"https://example.com\",\"html_url\":\"https://github.com/apps/octoapp\",\"created_at\":\"2017-07-08T16:18:44-04:00\",\"updated_at\":\"2017-07-08T16:18:44-04:00\",\"permissions\":{\"metadata\":\"read\",\"contents\":\"read\",\"issues\":\"write\",\"single_file\":\"write\"},\"events\":[\"push\",\"pull_request\"]},\"pull_requests\":[{\"url\":\"https://api.github.com/repos/github/hello-world/pulls/1\",\"id\":1934,\"number\":3956,\"head\":{\"ref\":\"say-hello\",\"sha\":\"3dca65fa3e8d4b3da3f3d056c59aee1c50f41390\",\"repo\":{\"id\":526,\"url\":\"https://api.github.com/repos/github/hello-world\",\"name\":\"hello-world\"}},\"base\":{\"ref\":\"master\",\"sha\":\"e7fdf7640066d71ad16a86fbcbb9c6a10a18af4f\",\"repo\":{\"id\":526,\"url\":\"https://api.github.com/repos/github/hello-world\",\"name\":\"hello-world\"}}}]}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Update a check run",
    "scope": "checks",
    "id": "update",
    "method": "PATCH",
    "url": "/repos/{owner}/{repo}/check-runs/{check_run_id}",
    "isDeprecated": false,
    "description": "**Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array.\n\nUpdates a check run for a specific commit in a repository. Your GitHub App must have the `checks:write` permission to edit check runs.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/checks/runs/#update-a-check-run",
    "previews": [{ "name": "antiope" }],
    "headers": [
      {
        "name": "accept",
        "value": "application/vnd.github.antiope-preview+json"
      }
    ],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "check_run_id",
        "description": "check_run_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "name",
        "description": "The name of the check. For example, \"code-coverage\".",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "details_url",
        "description": "The URL of the integrator's site that has the full details of the check.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "external_id",
        "description": "A reference for the run on the integrator's system.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "started_at",
        "description": "This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "status",
        "description": "The current status. Can be one of `queued`, `in_progress`, or `completed`.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": ["queued", "in_progress", "completed"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "conclusion",
        "description": "**Required if you provide `completed_at` or a `status` of `completed`**. The final conclusion of the check. Can be one of `success`, `failure`, `neutral`, `cancelled`, `timed_out`, or `action_required`.  \n**Note:** Providing `conclusion` will automatically set the `status` parameter to `completed`.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": [
          "success",
          "failure",
          "neutral",
          "cancelled",
          "timed_out",
          "action_required"
        ],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "completed_at",
        "description": "**Required if you provide `conclusion`**. The time the check completed. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "output",
        "description": "Check runs can accept a variety of data in the `output` object, including a `title` and `summary` and can optionally provide descriptive details about the run. See the [`output` object](https://developer.github.com/enterprise/2.17/v3/checks/runs/#output-object-1) description.",
        "in": "BODY",
        "type": "object",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "output.title",
        "description": "**Required**.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "output.summary",
        "description": "Can contain Markdown.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "output.text",
        "description": "Can contain Markdown.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "output.annotations",
        "description": "Adds information from your analysis to specific lines of code. Annotations are visible in GitHub's pull request UI. Annotations are visible in GitHub's pull request UI. The Checks API limits the number of annotations to a maximum of 50 per API request. To create more than 50 annotations, you have to make multiple requests to the [Update a check run](https://developer.github.com/enterprise/2.17/v3/checks/runs/#update-a-check-run) endpoint. Each time you update the check run, annotations are appended to the list of annotations that already exist for the check run. For details about annotations in the UI, see \"[About status checks](https://help.github.com/articles/about-status-checks#checks)\". See the [`annotations` object](https://developer.github.com/enterprise/2.17/v3/checks/runs/#annotations-object-1) description for details.",
        "in": "BODY",
        "type": "object[]",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "output.annotations[].path",
        "description": "The path of the file to add an annotation to. For example, `assets/css/main.css`.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "output.annotations[].start_line",
        "description": "The start line of the annotation.",
        "in": "BODY",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "output.annotations[].end_line",
        "description": "The end line of the annotation.",
        "in": "BODY",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "output.annotations[].start_column",
        "description": "The start column of the annotation. Annotations only support `start_column` and `end_column` on the same line. Omit this parameter if `start_line` and `end_line` have different values.",
        "in": "BODY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "output.annotations[].end_column",
        "description": "The end column of the annotation. Annotations only support `start_column` and `end_column` on the same line. Omit this parameter if `start_line` and `end_line` have different values.",
        "in": "BODY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "output.annotations[].annotation_level",
        "description": "The level of the annotation. Can be one of `notice`, `warning`, or `failure`.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": ["notice", "warning", "failure"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "output.annotations[].message",
        "description": "A short description of the feedback for these lines of code. The maximum size is 64 KB.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "output.annotations[].title",
        "description": "The title that represents the annotation. The maximum size is 255 characters.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "output.annotations[].raw_details",
        "description": "Details about this annotation. The maximum size is 64 KB.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "output.images",
        "description": "Adds images to the output displayed in the GitHub pull request UI. See the [`images` object](https://developer.github.com/enterprise/2.17/v3/checks/runs/#annotations-object-1) description for details.",
        "in": "BODY",
        "type": "object[]",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "output.images[].alt",
        "description": "The alternative text for the image.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "output.images[].image_url",
        "description": "The full URL of the image.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "output.images[].caption",
        "description": "A short image description.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "actions",
        "description": "Possible further actions the integrator can perform, which a user may trigger. Each action includes a `label`, `identifier` and `description`. A maximum of three actions are accepted. See the [`actions` object](https://developer.github.com/enterprise/2.17/v3/checks/runs/#actions-object) description. To learn more about check runs and requested actions, see \"[Check runs and requested actions](https://developer.github.com/enterprise/2.17/v3/checks/runs/#check-runs-and-requested-actions).\"",
        "in": "BODY",
        "type": "object[]",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "actions[].label",
        "description": "The text to be displayed on a button in the web UI. The maximum size is 20 characters.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "actions[].description",
        "description": "A short explanation of what this action would do. The maximum size is 40 characters.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "actions[].identifier",
        "description": "A reference for the action on the integrator's system. The maximum size is 20 characters.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":4,\"head_sha\":\"ce587453ced02b1526dfb4cb910479d431683101\",\"node_id\":\"MDg6Q2hlY2tSdW40\",\"external_id\":\"\",\"url\":\"https://api.github.com/repos/github/hello-world/check-runs/4\",\"html_url\":\"http://github.com/github/hello-world/runs/4\",\"details_url\":\"https://example.com\",\"status\":\"completed\",\"conclusion\":\"neutral\",\"started_at\":\"2018-05-04T01:14:52Z\",\"completed_at\":\"2018-05-04T01:14:52Z\",\"output\":{\"title\":\"Mighty Readme report\",\"summary\":\"There are 0 failures, 2 warnings, and 1 notice.\",\"text\":\"You may have some misspelled words on lines 2 and 4. You also may want to add a section in your README about how to install your app.\",\"annotations_count\":2,\"annotations_url\":\"https://api.github.com/repos/github/hello-world/check-runs/4/annotations\"},\"name\":\"mighty_readme\",\"check_suite\":{\"id\":5},\"app\":{\"id\":1,\"slug\":\"octoapp\",\"node_id\":\"MDExOkludGVncmF0aW9uMQ==\",\"owner\":{\"login\":\"github\",\"id\":1,\"node_id\":\"MDEyOk9yZ2FuaXphdGlvbjE=\",\"url\":\"https://api.github.com/orgs/github\",\"repos_url\":\"https://api.github.com/orgs/github/repos\",\"events_url\":\"https://api.github.com/orgs/github/events\",\"hooks_url\":\"https://api.github.com/orgs/github/hooks\",\"issues_url\":\"https://api.github.com/orgs/github/issues\",\"members_url\":\"https://api.github.com/orgs/github/members{/member}\",\"public_members_url\":\"https://api.github.com/orgs/github/public_members{/member}\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"description\":\"A great organization\"},\"name\":\"Octocat App\",\"description\":\"\",\"external_url\":\"https://example.com\",\"html_url\":\"https://github.com/apps/octoapp\",\"created_at\":\"2017-07-08T16:18:44-04:00\",\"updated_at\":\"2017-07-08T16:18:44-04:00\",\"permissions\":{\"metadata\":\"read\",\"contents\":\"read\",\"issues\":\"write\",\"single_file\":\"write\"},\"events\":[\"push\",\"pull_request\"]},\"pull_requests\":[{\"url\":\"https://api.github.com/repos/github/hello-world/pulls/1\",\"id\":1934,\"number\":3956,\"head\":{\"ref\":\"say-hello\",\"sha\":\"3dca65fa3e8d4b3da3f3d056c59aee1c50f41390\",\"repo\":{\"id\":526,\"url\":\"https://api.github.com/repos/github/hello-world\",\"name\":\"hello-world\"}},\"base\":{\"ref\":\"master\",\"sha\":\"e7fdf7640066d71ad16a86fbcbb9c6a10a18af4f\",\"repo\":{\"id\":526,\"url\":\"https://api.github.com/repos/github/hello-world\",\"name\":\"hello-world\"}}}]}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Get a single check run",
    "scope": "checks",
    "id": "get",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/check-runs/{check_run_id}",
    "isDeprecated": false,
    "description": "**Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array.\n\nGets a single check run using its `id`. GitHub Apps must have the `checks:read` permission on a private repository or pull access to a public repository to get check runs. OAuth Apps and authenticated users must have the `repo` scope to get check runs in a private repository.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/checks/runs/#get-a-single-check-run",
    "previews": [{ "name": "antiope" }],
    "headers": [
      {
        "name": "accept",
        "value": "application/vnd.github.antiope-preview+json"
      }
    ],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "check_run_id",
        "description": "check_run_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":4,\"head_sha\":\"ce587453ced02b1526dfb4cb910479d431683101\",\"node_id\":\"MDg6Q2hlY2tSdW40\",\"external_id\":\"\",\"url\":\"https://api.github.com/repos/github/hello-world/check-runs/4\",\"html_url\":\"http://github.com/github/hello-world/runs/4\",\"details_url\":\"https://example.com\",\"status\":\"completed\",\"conclusion\":\"neutral\",\"started_at\":\"2018-05-04T01:14:52Z\",\"completed_at\":\"2018-05-04T01:14:52Z\",\"output\":{\"title\":\"Mighty Readme report\",\"summary\":\"There are 0 failures, 2 warnings, and 1 notice.\",\"text\":\"You may have some misspelled words on lines 2 and 4. You also may want to add a section in your README about how to install your app.\",\"annotations_count\":2,\"annotations_url\":\"https://api.github.com/repos/github/hello-world/check-runs/4/annotations\"},\"name\":\"mighty_readme\",\"check_suite\":{\"id\":5},\"app\":{\"id\":1,\"slug\":\"octoapp\",\"node_id\":\"MDExOkludGVncmF0aW9uMQ==\",\"owner\":{\"login\":\"github\",\"id\":1,\"node_id\":\"MDEyOk9yZ2FuaXphdGlvbjE=\",\"url\":\"https://api.github.com/orgs/github\",\"repos_url\":\"https://api.github.com/orgs/github/repos\",\"events_url\":\"https://api.github.com/orgs/github/events\",\"hooks_url\":\"https://api.github.com/orgs/github/hooks\",\"issues_url\":\"https://api.github.com/orgs/github/issues\",\"members_url\":\"https://api.github.com/orgs/github/members{/member}\",\"public_members_url\":\"https://api.github.com/orgs/github/public_members{/member}\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"description\":\"A great organization\"},\"name\":\"Octocat App\",\"description\":\"\",\"external_url\":\"https://example.com\",\"html_url\":\"https://github.com/apps/octoapp\",\"created_at\":\"2017-07-08T16:18:44-04:00\",\"updated_at\":\"2017-07-08T16:18:44-04:00\",\"permissions\":{\"metadata\":\"read\",\"contents\":\"read\",\"issues\":\"write\",\"single_file\":\"write\"},\"events\":[\"push\",\"pull_request\"]},\"pull_requests\":[{\"url\":\"https://api.github.com/repos/github/hello-world/pulls/1\",\"id\":1934,\"number\":3956,\"head\":{\"ref\":\"say-hello\",\"sha\":\"3dca65fa3e8d4b3da3f3d056c59aee1c50f41390\",\"repo\":{\"id\":526,\"url\":\"https://api.github.com/repos/github/hello-world\",\"name\":\"hello-world\"}},\"base\":{\"ref\":\"master\",\"sha\":\"e7fdf7640066d71ad16a86fbcbb9c6a10a18af4f\",\"repo\":{\"id\":526,\"url\":\"https://api.github.com/repos/github/hello-world\",\"name\":\"hello-world\"}}}]}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "List annotations for a check run",
    "scope": "checks",
    "id": "listAnnotations",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/check-runs/{check_run_id}/annotations",
    "isDeprecated": false,
    "description": "Lists annotations for a check run using the annotation `id`. GitHub Apps must have the `checks:read` permission on a private repository or pull access to a public repository to get annotations for a check run. OAuth Apps and authenticated users must have the `repo` scope to get annotations for a check run in a private repository.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/checks/runs/#list-annotations-for-a-check-run",
    "previews": [{ "name": "antiope" }],
    "headers": [
      {
        "name": "accept",
        "value": "application/vnd.github.antiope-preview+json"
      }
    ],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "check_run_id",
        "description": "check_run_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"path\":\"README.md\",\"start_line\":2,\"end_line\":2,\"start_column\":5,\"end_column\":10,\"annotation_level\":\"warning\",\"title\":\"Spell Checker\",\"message\":\"Check your spelling for 'banaas'.\",\"raw_details\":\"Do you mean 'bananas' or 'banana'?\"}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Create a check suite",
    "scope": "checks",
    "id": "createSuite",
    "method": "POST",
    "url": "/repos/{owner}/{repo}/check-suites",
    "isDeprecated": false,
    "description": "**Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array and a `null` value for `head_branch`.\n\nBy default, check suites are automatically created when you create a [check run](https://developer.github.com/enterprise/2.17/v3/checks/runs/). You only need to use this endpoint for manually creating check suites when you've disabled automatic creation using \"[Set preferences for check suites on a repository](https://developer.github.com/enterprise/2.17/v3/checks/suites/#set-preferences-for-check-suites-on-a-repository)\". Your GitHub App must have the `checks:write` permission to create check suites.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/checks/suites/#create-a-check-suite",
    "previews": [{ "name": "antiope" }],
    "headers": [
      {
        "name": "accept",
        "value": "application/vnd.github.antiope-preview+json"
      }
    ],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "head_sha",
        "description": "The sha of the head commit.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 201,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":5,\"node_id\":\"MDEwOkNoZWNrU3VpdGU1\",\"head_branch\":\"master\",\"head_sha\":\"d6fde92930d4715a2b49857d24b940956b26d2d3\",\"status\":\"completed\",\"conclusion\":\"neutral\",\"url\":\"https://api.github.com/repos/github/hello-world/check-suites/5\",\"before\":\"146e867f55c26428e5f9fade55a9bbf5e95a7912\",\"after\":\"d6fde92930d4715a2b49857d24b940956b26d2d3\",\"pull_requests\":[],\"app\":{\"id\":1,\"slug\":\"octoapp\",\"node_id\":\"MDExOkludGVncmF0aW9uMQ==\",\"owner\":{\"login\":\"github\",\"id\":1,\"node_id\":\"MDEyOk9yZ2FuaXphdGlvbjE=\",\"url\":\"https://api.github.com/orgs/github\",\"repos_url\":\"https://api.github.com/orgs/github/repos\",\"events_url\":\"https://api.github.com/orgs/github/events\",\"hooks_url\":\"https://api.github.com/orgs/github/hooks\",\"issues_url\":\"https://api.github.com/orgs/github/issues\",\"members_url\":\"https://api.github.com/orgs/github/members{/member}\",\"public_members_url\":\"https://api.github.com/orgs/github/public_members{/member}\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"description\":\"A great organization\"},\"name\":\"Octocat App\",\"description\":\"\",\"external_url\":\"https://example.com\",\"html_url\":\"https://github.com/apps/octoapp\",\"created_at\":\"2017-07-08T16:18:44-04:00\",\"updated_at\":\"2017-07-08T16:18:44-04:00\",\"permissions\":{\"metadata\":\"read\",\"contents\":\"read\",\"issues\":\"write\",\"single_file\":\"write\"},\"events\":[\"push\",\"pull_request\"]},\"repository\":{\"id\":1296269,\"node_id\":\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\"name\":\"Hello-World\",\"full_name\":\"octocat/Hello-World\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"private\":false,\"html_url\":\"https://github.com/octocat/Hello-World\",\"description\":\"This your first repo!\",\"fork\":false,\"url\":\"https://api.github.com/repos/octocat/Hello-World\",\"archive_url\":\"http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\"assignees_url\":\"http://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\"blobs_url\":\"http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\"branches_url\":\"http://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\"collaborators_url\":\"http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\"comments_url\":\"http://api.github.com/repos/octocat/Hello-World/comments{/number}\",\"commits_url\":\"http://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\"compare_url\":\"http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\"contents_url\":\"http://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\"contributors_url\":\"http://api.github.com/repos/octocat/Hello-World/contributors\",\"deployments_url\":\"http://api.github.com/repos/octocat/Hello-World/deployments\",\"downloads_url\":\"http://api.github.com/repos/octocat/Hello-World/downloads\",\"events_url\":\"http://api.github.com/repos/octocat/Hello-World/events\",\"forks_url\":\"http://api.github.com/repos/octocat/Hello-World/forks\",\"git_commits_url\":\"http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\"git_refs_url\":\"http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\"git_tags_url\":\"http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\"git_url\":\"git:github.com/octocat/Hello-World.git\",\"issue_comment_url\":\"http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\"issue_events_url\":\"http://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\"issues_url\":\"http://api.github.com/repos/octocat/Hello-World/issues{/number}\",\"keys_url\":\"http://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\"labels_url\":\"http://api.github.com/repos/octocat/Hello-World/labels{/name}\",\"languages_url\":\"http://api.github.com/repos/octocat/Hello-World/languages\",\"merges_url\":\"http://api.github.com/repos/octocat/Hello-World/merges\",\"milestones_url\":\"http://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\"notifications_url\":\"http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\"pulls_url\":\"http://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\"releases_url\":\"http://api.github.com/repos/octocat/Hello-World/releases{/id}\",\"ssh_url\":\"git@github.com:octocat/Hello-World.git\",\"stargazers_url\":\"http://api.github.com/repos/octocat/Hello-World/stargazers\",\"statuses_url\":\"http://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\"subscribers_url\":\"http://api.github.com/repos/octocat/Hello-World/subscribers\",\"subscription_url\":\"http://api.github.com/repos/octocat/Hello-World/subscription\",\"tags_url\":\"http://api.github.com/repos/octocat/Hello-World/tags\",\"teams_url\":\"http://api.github.com/repos/octocat/Hello-World/teams\",\"trees_url\":\"http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\"clone_url\":\"https://github.com/octocat/Hello-World.git\",\"mirror_url\":\"git:git.example.com/octocat/Hello-World\",\"hooks_url\":\"http://api.github.com/repos/octocat/Hello-World/hooks\",\"svn_url\":\"https://svn.github.com/octocat/Hello-World\",\"homepage\":\"https://github.com\",\"language\":null,\"forks_count\":9,\"stargazers_count\":80,\"watchers_count\":80,\"size\":108,\"default_branch\":\"master\",\"open_issues_count\":0,\"topics\":[\"octocat\",\"atom\",\"electron\",\"api\"],\"has_issues\":true,\"has_projects\":true,\"has_wiki\":true,\"has_pages\":false,\"has_downloads\":true,\"archived\":false,\"disabled\":false,\"pushed_at\":\"2011-01-26T19:06:43Z\",\"created_at\":\"2011-01-26T19:01:12Z\",\"updated_at\":\"2011-01-26T19:14:43Z\",\"permissions\":{\"admin\":false,\"push\":false,\"pull\":true},\"allow_rebase_merge\":true,\"allow_squash_merge\":true,\"allow_merge_commit\":true,\"subscribers_count\":42,\"network_count\":0,\"anonymous_access_enabled\":false}}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Set preferences for check suites on a repository",
    "scope": "checks",
    "id": "setSuitesPreferences",
    "method": "PATCH",
    "url": "/repos/{owner}/{repo}/check-suites/preferences",
    "isDeprecated": false,
    "description": "Changes the default automatic flow when creating check suites. By default, the CheckSuiteEvent is automatically created each time code is pushed to a repository. When you disable the automatic creation of check suites, you can manually [Create a check suite](https://developer.github.com/enterprise/2.17/v3/checks/suites/#create-a-check-suite). You must have admin permissions in the repository to set preferences for check suites.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/checks/suites/#set-preferences-for-check-suites-on-a-repository",
    "previews": [{ "name": "antiope" }],
    "headers": [
      {
        "name": "accept",
        "value": "application/vnd.github.antiope-preview+json"
      }
    ],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "auto_trigger_checks",
        "description": "Enables or disables automatic creation of CheckSuite events upon pushes to the repository. Enabled by default. See the [`auto_trigger_checks` object](https://developer.github.com/enterprise/2.17/v3/checks/suites/#auto_trigger_checks-object) description for details.",
        "in": "BODY",
        "type": "object[]",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "auto_trigger_checks[].app_id",
        "description": "The `id` of the GitHub App.",
        "in": "BODY",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "auto_trigger_checks[].setting",
        "description": "Set to `true` to enable automatic creation of CheckSuite events upon pushes to the repository, or `false` to disable them.",
        "in": "BODY",
        "type": "boolean",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"preferences\":{\"auto_trigger_checks\":[{\"app_id\":2,\"setting\":true},{\"app_id\":4,\"setting\":false}]},\"repository\":{\"id\":1296269,\"node_id\":\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\"name\":\"Hello-World\",\"full_name\":\"octocat/Hello-World\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"private\":false,\"html_url\":\"https://github.com/octocat/Hello-World\",\"description\":\"This your first repo!\",\"fork\":false,\"url\":\"https://api.github.com/repos/octocat/Hello-World\",\"archive_url\":\"http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\"assignees_url\":\"http://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\"blobs_url\":\"http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\"branches_url\":\"http://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\"collaborators_url\":\"http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\"comments_url\":\"http://api.github.com/repos/octocat/Hello-World/comments{/number}\",\"commits_url\":\"http://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\"compare_url\":\"http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\"contents_url\":\"http://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\"contributors_url\":\"http://api.github.com/repos/octocat/Hello-World/contributors\",\"deployments_url\":\"http://api.github.com/repos/octocat/Hello-World/deployments\",\"downloads_url\":\"http://api.github.com/repos/octocat/Hello-World/downloads\",\"events_url\":\"http://api.github.com/repos/octocat/Hello-World/events\",\"forks_url\":\"http://api.github.com/repos/octocat/Hello-World/forks\",\"git_commits_url\":\"http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\"git_refs_url\":\"http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\"git_tags_url\":\"http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\"git_url\":\"git:github.com/octocat/Hello-World.git\",\"issue_comment_url\":\"http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\"issue_events_url\":\"http://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\"issues_url\":\"http://api.github.com/repos/octocat/Hello-World/issues{/number}\",\"keys_url\":\"http://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\"labels_url\":\"http://api.github.com/repos/octocat/Hello-World/labels{/name}\",\"languages_url\":\"http://api.github.com/repos/octocat/Hello-World/languages\",\"merges_url\":\"http://api.github.com/repos/octocat/Hello-World/merges\",\"milestones_url\":\"http://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\"notifications_url\":\"http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\"pulls_url\":\"http://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\"releases_url\":\"http://api.github.com/repos/octocat/Hello-World/releases{/id}\",\"ssh_url\":\"git@github.com:octocat/Hello-World.git\",\"stargazers_url\":\"http://api.github.com/repos/octocat/Hello-World/stargazers\",\"statuses_url\":\"http://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\"subscribers_url\":\"http://api.github.com/repos/octocat/Hello-World/subscribers\",\"subscription_url\":\"http://api.github.com/repos/octocat/Hello-World/subscription\",\"tags_url\":\"http://api.github.com/repos/octocat/Hello-World/tags\",\"teams_url\":\"http://api.github.com/repos/octocat/Hello-World/teams\",\"trees_url\":\"http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\"clone_url\":\"https://github.com/octocat/Hello-World.git\",\"mirror_url\":\"git:git.example.com/octocat/Hello-World\",\"hooks_url\":\"http://api.github.com/repos/octocat/Hello-World/hooks\",\"svn_url\":\"https://svn.github.com/octocat/Hello-World\",\"homepage\":\"https://github.com\",\"language\":null,\"forks_count\":9,\"stargazers_count\":80,\"watchers_count\":80,\"size\":108,\"default_branch\":\"master\",\"open_issues_count\":0,\"topics\":[\"octocat\",\"atom\",\"electron\",\"api\"],\"has_issues\":true,\"has_projects\":true,\"has_wiki\":true,\"has_pages\":false,\"has_downloads\":true,\"archived\":false,\"disabled\":false,\"pushed_at\":\"2011-01-26T19:06:43Z\",\"created_at\":\"2011-01-26T19:01:12Z\",\"updated_at\":\"2011-01-26T19:14:43Z\",\"permissions\":{\"admin\":false,\"push\":false,\"pull\":true},\"allow_rebase_merge\":true,\"allow_squash_merge\":true,\"allow_merge_commit\":true,\"subscribers_count\":42,\"network_count\":0,\"anonymous_access_enabled\":false}}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Get a single check suite",
    "scope": "checks",
    "id": "getSuite",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/check-suites/{check_suite_id}",
    "isDeprecated": false,
    "description": "**Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array and a `null` value for `head_branch`.\n\nGets a single check suite using its `id`. GitHub Apps must have the `checks:read` permission on a private repository or pull access to a public repository to get check suites. OAuth Apps and authenticated users must have the `repo` scope to get check suites in a private repository.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/checks/suites/#get-a-single-check-suite",
    "previews": [{ "name": "antiope" }],
    "headers": [
      {
        "name": "accept",
        "value": "application/vnd.github.antiope-preview+json"
      }
    ],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "check_suite_id",
        "description": "check_suite_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":5,\"node_id\":\"MDEwOkNoZWNrU3VpdGU1\",\"head_branch\":\"master\",\"head_sha\":\"d6fde92930d4715a2b49857d24b940956b26d2d3\",\"status\":\"completed\",\"conclusion\":\"neutral\",\"url\":\"https://api.github.com/repos/github/hello-world/check-suites/5\",\"before\":\"146e867f55c26428e5f9fade55a9bbf5e95a7912\",\"after\":\"d6fde92930d4715a2b49857d24b940956b26d2d3\",\"pull_requests\":[],\"app\":{\"id\":1,\"slug\":\"octoapp\",\"node_id\":\"MDExOkludGVncmF0aW9uMQ==\",\"owner\":{\"login\":\"github\",\"id\":1,\"node_id\":\"MDEyOk9yZ2FuaXphdGlvbjE=\",\"url\":\"https://api.github.com/orgs/github\",\"repos_url\":\"https://api.github.com/orgs/github/repos\",\"events_url\":\"https://api.github.com/orgs/github/events\",\"hooks_url\":\"https://api.github.com/orgs/github/hooks\",\"issues_url\":\"https://api.github.com/orgs/github/issues\",\"members_url\":\"https://api.github.com/orgs/github/members{/member}\",\"public_members_url\":\"https://api.github.com/orgs/github/public_members{/member}\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"description\":\"A great organization\"},\"name\":\"Octocat App\",\"description\":\"\",\"external_url\":\"https://example.com\",\"html_url\":\"https://github.com/apps/octoapp\",\"created_at\":\"2017-07-08T16:18:44-04:00\",\"updated_at\":\"2017-07-08T16:18:44-04:00\",\"permissions\":{\"metadata\":\"read\",\"contents\":\"read\",\"issues\":\"write\",\"single_file\":\"write\"},\"events\":[\"push\",\"pull_request\"]},\"repository\":{\"id\":1296269,\"node_id\":\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\"name\":\"Hello-World\",\"full_name\":\"octocat/Hello-World\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"private\":false,\"html_url\":\"https://github.com/octocat/Hello-World\",\"description\":\"This your first repo!\",\"fork\":false,\"url\":\"https://api.github.com/repos/octocat/Hello-World\",\"archive_url\":\"http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\"assignees_url\":\"http://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\"blobs_url\":\"http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\"branches_url\":\"http://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\"collaborators_url\":\"http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\"comments_url\":\"http://api.github.com/repos/octocat/Hello-World/comments{/number}\",\"commits_url\":\"http://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\"compare_url\":\"http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\"contents_url\":\"http://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\"contributors_url\":\"http://api.github.com/repos/octocat/Hello-World/contributors\",\"deployments_url\":\"http://api.github.com/repos/octocat/Hello-World/deployments\",\"downloads_url\":\"http://api.github.com/repos/octocat/Hello-World/downloads\",\"events_url\":\"http://api.github.com/repos/octocat/Hello-World/events\",\"forks_url\":\"http://api.github.com/repos/octocat/Hello-World/forks\",\"git_commits_url\":\"http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\"git_refs_url\":\"http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\"git_tags_url\":\"http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\"git_url\":\"git:github.com/octocat/Hello-World.git\",\"issue_comment_url\":\"http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\"issue_events_url\":\"http://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\"issues_url\":\"http://api.github.com/repos/octocat/Hello-World/issues{/number}\",\"keys_url\":\"http://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\"labels_url\":\"http://api.github.com/repos/octocat/Hello-World/labels{/name}\",\"languages_url\":\"http://api.github.com/repos/octocat/Hello-World/languages\",\"merges_url\":\"http://api.github.com/repos/octocat/Hello-World/merges\",\"milestones_url\":\"http://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\"notifications_url\":\"http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\"pulls_url\":\"http://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\"releases_url\":\"http://api.github.com/repos/octocat/Hello-World/releases{/id}\",\"ssh_url\":\"git@github.com:octocat/Hello-World.git\",\"stargazers_url\":\"http://api.github.com/repos/octocat/Hello-World/stargazers\",\"statuses_url\":\"http://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\"subscribers_url\":\"http://api.github.com/repos/octocat/Hello-World/subscribers\",\"subscription_url\":\"http://api.github.com/repos/octocat/Hello-World/subscription\",\"tags_url\":\"http://api.github.com/repos/octocat/Hello-World/tags\",\"teams_url\":\"http://api.github.com/repos/octocat/Hello-World/teams\",\"trees_url\":\"http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\"clone_url\":\"https://github.com/octocat/Hello-World.git\",\"mirror_url\":\"git:git.example.com/octocat/Hello-World\",\"hooks_url\":\"http://api.github.com/repos/octocat/Hello-World/hooks\",\"svn_url\":\"https://svn.github.com/octocat/Hello-World\",\"homepage\":\"https://github.com\",\"language\":null,\"forks_count\":9,\"stargazers_count\":80,\"watchers_count\":80,\"size\":108,\"default_branch\":\"master\",\"open_issues_count\":0,\"topics\":[\"octocat\",\"atom\",\"electron\",\"api\"],\"has_issues\":true,\"has_projects\":true,\"has_wiki\":true,\"has_pages\":false,\"has_downloads\":true,\"archived\":false,\"disabled\":false,\"pushed_at\":\"2011-01-26T19:06:43Z\",\"created_at\":\"2011-01-26T19:01:12Z\",\"updated_at\":\"2011-01-26T19:14:43Z\",\"permissions\":{\"admin\":false,\"push\":false,\"pull\":true},\"allow_rebase_merge\":true,\"allow_squash_merge\":true,\"allow_merge_commit\":true,\"subscribers_count\":42,\"network_count\":0,\"anonymous_access_enabled\":false}}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "List check runs in a check suite",
    "scope": "checks",
    "id": "listForSuite",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs",
    "isDeprecated": false,
    "description": "**Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array.\n\nLists check runs for a check suite using its `id`. GitHub Apps must have the `checks:read` permission on a private repository or pull access to a public repository to get check runs. OAuth Apps and authenticated users must have the `repo` scope to get check runs in a private repository.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/checks/runs/#list-check-runs-in-a-check-suite",
    "previews": [{ "name": "antiope" }],
    "headers": [
      {
        "name": "accept",
        "value": "application/vnd.github.antiope-preview+json"
      }
    ],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "check_suite_id",
        "description": "check_suite_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "check_name",
        "description": "Returns check runs with the specified `name`.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "status",
        "description": "Returns check runs with the specified `status`. Can be one of `queued`, `in_progress`, or `completed`.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["queued", "in_progress", "completed"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "filter",
        "description": "Filters check runs by their `completed_at` timestamp. Can be one of `latest` (returning the most recent check runs) or `all`.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["latest", "all"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"total_count\":1,\"check_runs\":[{\"id\":4,\"head_sha\":\"ce587453ced02b1526dfb4cb910479d431683101\",\"node_id\":\"MDg6Q2hlY2tSdW40\",\"external_id\":\"\",\"url\":\"https://api.github.com/repos/github/hello-world/check-runs/4\",\"html_url\":\"http://github.com/github/hello-world/runs/4\",\"details_url\":\"https://example.com\",\"status\":\"completed\",\"conclusion\":\"neutral\",\"started_at\":\"2018-05-04T01:14:52Z\",\"completed_at\":\"2018-05-04T01:14:52Z\",\"output\":{\"title\":\"Mighty Readme report\",\"summary\":\"There are 0 failures, 2 warnings, and 1 notice.\",\"text\":\"You may have some misspelled words on lines 2 and 4. You also may want to add a section in your README about how to install your app.\",\"annotations_count\":2,\"annotations_url\":\"https://api.github.com/repos/github/hello-world/check-runs/4/annotations\"},\"name\":\"mighty_readme\",\"check_suite\":{\"id\":5},\"app\":{\"id\":1,\"slug\":\"octoapp\",\"node_id\":\"MDExOkludGVncmF0aW9uMQ==\",\"owner\":{\"login\":\"github\",\"id\":1,\"node_id\":\"MDEyOk9yZ2FuaXphdGlvbjE=\",\"url\":\"https://api.github.com/orgs/github\",\"repos_url\":\"https://api.github.com/orgs/github/repos\",\"events_url\":\"https://api.github.com/orgs/github/events\",\"hooks_url\":\"https://api.github.com/orgs/github/hooks\",\"issues_url\":\"https://api.github.com/orgs/github/issues\",\"members_url\":\"https://api.github.com/orgs/github/members{/member}\",\"public_members_url\":\"https://api.github.com/orgs/github/public_members{/member}\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"description\":\"A great organization\"},\"name\":\"Octocat App\",\"description\":\"\",\"external_url\":\"https://example.com\",\"html_url\":\"https://github.com/apps/octoapp\",\"created_at\":\"2017-07-08T16:18:44-04:00\",\"updated_at\":\"2017-07-08T16:18:44-04:00\",\"permissions\":{\"metadata\":\"read\",\"contents\":\"read\",\"issues\":\"write\",\"single_file\":\"write\"},\"events\":[\"push\",\"pull_request\"]},\"pull_requests\":[{\"url\":\"https://api.github.com/repos/github/hello-world/pulls/1\",\"id\":1934,\"number\":3956,\"head\":{\"ref\":\"say-hello\",\"sha\":\"3dca65fa3e8d4b3da3f3d056c59aee1c50f41390\",\"repo\":{\"id\":526,\"url\":\"https://api.github.com/repos/github/hello-world\",\"name\":\"hello-world\"}},\"base\":{\"ref\":\"master\",\"sha\":\"e7fdf7640066d71ad16a86fbcbb9c6a10a18af4f\",\"repo\":{\"id\":526,\"url\":\"https://api.github.com/repos/github/hello-world\",\"name\":\"hello-world\"}}}]}]}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Rerequest check suite",
    "scope": "checks",
    "id": "rerequestSuite",
    "method": "POST",
    "url": "/repos/{owner}/{repo}/check-suites/{check_suite_id}/rerequest",
    "isDeprecated": false,
    "description": "Triggers GitHub to rerequest an existing check suite, without pushing new code to a repository. This endpoint will trigger the [`check_suite` webhook](https://developer.github.com/enterprise/2.17/v3/activity/events/types/#checksuiteevent) event with the action `rerequested`. When a check suite is `rerequested`, its `status` is reset to `queued` and the `conclusion` is cleared.\n\nTo rerequest a check suite, your GitHub App must have the `checks:read` permission on a private repository or pull access to a public repository.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/checks/suites/#rerequest-check-suite",
    "previews": [{ "name": "antiope" }],
    "headers": [
      {
        "name": "accept",
        "value": "application/vnd.github.antiope-preview+json"
      }
    ],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "check_suite_id",
        "description": "check_suite_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [],
    "renamed": null
  },
  {
    "name": "List collaborators",
    "scope": "repos",
    "id": "listCollaborators",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/collaborators",
    "isDeprecated": false,
    "description": "For organization-owned repositories, the list of collaborators includes outside collaborators, organization members that are direct collaborators, organization members with access through team memberships, organization members with access through default organization permissions, and organization owners.\n\nIf you pass the `hellcat-preview` media type, team members will include the members of child teams.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/repos/collaborators/#list-collaborators",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "affiliation",
        "description": "Filter collaborators returned by their affiliation. Can be one of:  \n\\* `outside`: All outside collaborators of an organization-owned repository.  \n\\* `direct`: All collaborators with permissions to an organization-owned repository, regardless of organization membership status.  \n\\* `all`: All collaborators the authenticated user can see.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["outside", "direct", "all"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false,\"permissions\":{\"pull\":true,\"push\":true,\"admin\":false}}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Check if a user is a collaborator",
    "scope": "repos",
    "id": "checkCollaborator",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/collaborators/{username}",
    "isDeprecated": false,
    "description": "For organization-owned repositories, the list of collaborators includes outside collaborators, organization members that are direct collaborators, organization members with access through team memberships, organization members with access through default organization permissions, and organization owners.\n\nIf you pass the `hellcat-preview` media type, team members will include the members of child teams.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/repos/collaborators/#check-if-a-user-is-a-collaborator",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "username",
        "description": "username parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [],
    "renamed": null
  },
  {
    "name": "Add user as a collaborator",
    "scope": "repos",
    "id": "addCollaborator",
    "method": "PUT",
    "url": "/repos/{owner}/{repo}/collaborators/{username}",
    "isDeprecated": false,
    "description": "This endpoint triggers [notifications](https://help.github.com/articles/about-notifications/). Creating content too quickly using this endpoint may result in abuse rate limiting. See \"[Abuse rate limits](https://developer.github.com/enterprise/2.17/v3/#abuse-rate-limits)\" for details.\n\nNote that, if you choose not to pass any parameters, you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTTP verbs](https://developer.github.com/enterprise/2.17/v3/#http-verbs).\"",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/repos/collaborators/#add-user-as-a-collaborator",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "username",
        "description": "username parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "permission",
        "description": "The permission to grant the collaborator. **Only valid on organization-owned repositories.** Can be one of:  \n\\* `pull` - can pull, but not push to or administer this repository.  \n\\* `push` - can pull and push, but not administer this repository.  \n\\* `admin` - can pull, push and administer this repository.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": ["pull", "push", "admin"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [],
    "renamed": null
  },
  {
    "name": "Remove user as a collaborator",
    "scope": "repos",
    "id": "removeCollaborator",
    "method": "DELETE",
    "url": "/repos/{owner}/{repo}/collaborators/{username}",
    "isDeprecated": false,
    "description": "",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/repos/collaborators/#remove-user-as-a-collaborator",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "username",
        "description": "username parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [],
    "renamed": null
  },
  {
    "name": "Review a user's permission level",
    "scope": "repos",
    "id": "getCollaboratorPermissionLevel",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/collaborators/{username}/permission",
    "isDeprecated": false,
    "description": "Possible values for the `permission` key: `admin`, `write`, `read`, `none`.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/repos/collaborators/#review-a-users-permission-level",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "username",
        "description": "username parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "Response if user has admin permissions",
        "examples": [
          {
            "data": "{\"permission\":\"admin\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false}}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "List commit comments for a repository",
    "scope": "repos",
    "id": "listCommitComments",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/comments",
    "isDeprecated": false,
    "description": "Commit Comments use [these custom media types](https://developer.github.com/enterprise/2.17/v3/repos/comments/#custom-media-types). You can read more about the use of media types in the API [here](https://developer.github.com/enterprise/2.17/v3/media/).\n\nComments are ordered by ascending ID.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/repos/comments/#list-commit-comments-for-a-repository",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"html_url\":\"https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e#commitcomment-1\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/comments/1\",\"id\":1,\"node_id\":\"MDEzOkNvbW1pdENvbW1lbnQx\",\"body\":\"Great stuff\",\"path\":\"file1.txt\",\"position\":4,\"line\":14,\"commit_id\":\"6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"created_at\":\"2011-04-14T16:00:49Z\",\"updated_at\":\"2011-04-14T16:00:49Z\"}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Get a single commit comment",
    "scope": "repos",
    "id": "getCommitComment",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/comments/{comment_id}",
    "isDeprecated": false,
    "description": "",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/repos/comments/#get-a-single-commit-comment",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "comment_id",
        "description": "comment_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"html_url\":\"https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e#commitcomment-1\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/comments/1\",\"id\":1,\"node_id\":\"MDEzOkNvbW1pdENvbW1lbnQx\",\"body\":\"Great stuff\",\"path\":\"file1.txt\",\"position\":4,\"line\":14,\"commit_id\":\"6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"created_at\":\"2011-04-14T16:00:49Z\",\"updated_at\":\"2011-04-14T16:00:49Z\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Update a commit comment",
    "scope": "repos",
    "id": "updateCommitComment",
    "method": "PATCH",
    "url": "/repos/{owner}/{repo}/comments/{comment_id}",
    "isDeprecated": false,
    "description": "",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/repos/comments/#update-a-commit-comment",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "comment_id",
        "description": "comment_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "body",
        "description": "The contents of the comment",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"html_url\":\"https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e#commitcomment-1\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/comments/1\",\"id\":1,\"node_id\":\"MDEzOkNvbW1pdENvbW1lbnQx\",\"body\":\"Nice change\",\"path\":\"file1.txt\",\"position\":4,\"line\":14,\"commit_id\":\"6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"created_at\":\"2011-04-14T16:00:49Z\",\"updated_at\":\"2011-04-14T16:00:49Z\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Delete a commit comment",
    "scope": "repos",
    "id": "deleteCommitComment",
    "method": "DELETE",
    "url": "/repos/{owner}/{repo}/comments/{comment_id}",
    "isDeprecated": false,
    "description": "",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/repos/comments/#delete-a-commit-comment",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "comment_id",
        "description": "comment_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [],
    "renamed": null
  },
  {
    "name": "List reactions for a commit comment",
    "scope": "reactions",
    "id": "listForCommitComment",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/comments/{comment_id}/reactions",
    "isDeprecated": false,
    "description": "List the reactions to a [commit comment](https://developer.github.com/enterprise/2.17/v3/repos/comments/).",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/reactions/#list-reactions-for-a-commit-comment",
    "previews": [{ "name": "squirrel-girl" }],
    "headers": [
      {
        "name": "accept",
        "value": "application/vnd.github.squirrel-girl-preview+json"
      }
    ],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "comment_id",
        "description": "comment_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "content",
        "description": "Returns a single [reaction type](https://developer.github.com/enterprise/2.17/v3/reactions/#reaction-types). Omit this parameter to list all reactions to a commit comment.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": [
          "+1",
          "-1",
          "laugh",
          "confused",
          "heart",
          "hooray",
          "rocket",
          "eyes"
        ],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"id\":1,\"node_id\":\"MDg6UmVhY3Rpb24x\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"content\":\"heart\",\"created_at\":\"2016-05-20T20:09:31Z\"}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Create reaction for a commit comment",
    "scope": "reactions",
    "id": "createForCommitComment",
    "method": "POST",
    "url": "/repos/{owner}/{repo}/comments/{comment_id}/reactions",
    "isDeprecated": false,
    "description": "Create a reaction to a [commit comment](https://developer.github.com/enterprise/2.17/v3/repos/comments/). A response with a `Status: 200 OK` means that you already added the reaction type to this commit comment.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/reactions/#create-reaction-for-a-commit-comment",
    "previews": [{ "name": "squirrel-girl" }],
    "headers": [
      {
        "name": "accept",
        "value": "application/vnd.github.squirrel-girl-preview+json"
      }
    ],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "comment_id",
        "description": "comment_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "content",
        "description": "The [reaction type](https://developer.github.com/enterprise/2.17/v3/reactions/#reaction-types) to add to the commit comment.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": [
          "+1",
          "-1",
          "laugh",
          "confused",
          "heart",
          "hooray",
          "rocket",
          "eyes"
        ],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 201,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":1,\"node_id\":\"MDg6UmVhY3Rpb24x\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"content\":\"heart\",\"created_at\":\"2016-05-20T20:09:31Z\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "List commits on a repository",
    "scope": "repos",
    "id": "listCommits",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/commits",
    "isDeprecated": false,
    "description": "**Signature verification object**\n\nThe response will include a `verification` object that describes the result of verifying the commit's signature. The following fields are included in the `verification` object:\n\nThese are the possible values for `reason` in the `verification` object:\n\n| Value                    | Description                                                                                                                       |\n| ------------------------ | --------------------------------------------------------------------------------------------------------------------------------- |\n| `expired_key`            | The key that made the signature is expired.                                                                                       |\n| `not_signing_key`        | The \"signing\" flag is not among the usage flags in the GPG key that made the signature.                                           |\n| `gpgverify_error`        | There was an error communicating with the signature verification service.                                                         |\n| `gpgverify_unavailable`  | The signature verification service is currently unavailable.                                                                      |\n| `unsigned`               | The object does not include a signature.                                                                                          |\n| `unknown_signature_type` | A non-PGP signature was found in the commit.                                                                                      |\n| `no_user`                | No user was associated with the `committer` email address in the commit.                                                          |\n| `unverified_email`       | The `committer` email address in the commit was associated with a user, but the email address is not verified on her/his account. |\n| `bad_email`              | The `committer` email address in the commit is not included in the identities of the PGP key that made the signature.             |\n| `unknown_key`            | The key that made the signature has not been registered with any user's account.                                                  |\n| `malformed_signature`    | There was an error parsing the signature.                                                                                         |\n| `invalid`                | The signature could not be cryptographically verified using the key whose key-id was found in the signature.                      |\n| `valid`                  | None of the above errors applied, so the signature is considered to be verified.                                                  |",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/repos/commits/#list-commits-on-a-repository",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "sha",
        "description": "SHA or branch to start listing commits from. Default: the repository’s default branch (usually `master`).",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "path",
        "description": "Only commits containing this file path will be returned.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "author",
        "description": "GitHub login or email address by which to filter by commit author.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "since",
        "description": "Only commits after this date will be returned. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "until",
        "description": "Only commits before this date will be returned. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"url\":\"https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"sha\":\"6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"node_id\":\"MDY6Q29tbWl0NmRjYjA5YjViNTc4NzVmMzM0ZjYxYWViZWQ2OTVlMmU0MTkzZGI1ZQ==\",\"html_url\":\"https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e/comments\",\"commit\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"author\":{\"name\":\"Monalisa Octocat\",\"email\":\"support@github.com\",\"date\":\"2011-04-14T16:00:49Z\"},\"committer\":{\"name\":\"Monalisa Octocat\",\"email\":\"support@github.com\",\"date\":\"2011-04-14T16:00:49Z\"},\"message\":\"Fix all the bugs\",\"tree\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/tree/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"sha\":\"6dcb09b5b57875f334f61aebed695e2e4193db5e\"},\"comment_count\":0,\"verification\":{\"verified\":false,\"reason\":\"unsigned\",\"signature\":null,\"payload\":null}},\"author\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"committer\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"parents\":[{\"url\":\"https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"sha\":\"6dcb09b5b57875f334f61aebed695e2e4193db5e\"}]}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "List branches for HEAD commit",
    "scope": "repos",
    "id": "listBranchesForHeadCommit",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/commits/{commit_sha}/branches-where-head",
    "isDeprecated": false,
    "description": "Returns all branches where the given commit SHA is the HEAD, or latest commit for the branch.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/repos/commits/#list-branches-for-head-commit",
    "previews": [{ "name": "groot" }],
    "headers": [
      { "name": "accept", "value": "application/vnd.github.groot-preview+json" }
    ],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "commit_sha",
        "description": "commit_sha parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"name\":\"branch_5\",\"commit\":{\"sha\":\"c5b97d5ae6c19d5c5df71a34c7fbeeda2479ccbc\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/commits/c5b97d5ae6c19d5c5df71a34c7fbeeda2479ccbc\"},\"protected\":\"false\"}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "List comments for a single commit",
    "scope": "repos",
    "id": "listCommentsForCommit",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/commits/{commit_sha}/comments",
    "isDeprecated": false,
    "description": "Use the `:commit_sha` to specify the commit that will have its comments listed.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/repos/comments/#list-comments-for-a-single-commit",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "commit_sha",
        "description": "commit_sha parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "ref",
        "description": null,
        "in": null,
        "type": null,
        "required": null,
        "enum": null,
        "allowNull": null,
        "mapToData": null,
        "validation": null,
        "alias": "commit_sha",
        "deprecated": true
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"html_url\":\"https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e#commitcomment-1\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/comments/1\",\"id\":1,\"node_id\":\"MDEzOkNvbW1pdENvbW1lbnQx\",\"body\":\"Great stuff\",\"path\":\"file1.txt\",\"position\":4,\"line\":14,\"commit_id\":\"6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"created_at\":\"2011-04-14T16:00:49Z\",\"updated_at\":\"2011-04-14T16:00:49Z\"}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Create a commit comment",
    "scope": "repos",
    "id": "createCommitComment",
    "method": "POST",
    "url": "/repos/{owner}/{repo}/commits/{commit_sha}/comments",
    "isDeprecated": false,
    "description": "Create a comment for a commit using its `:commit_sha`.\n\nThis endpoint triggers [notifications](https://help.github.com/articles/about-notifications/). Creating content too quickly using this endpoint may result in abuse rate limiting. See \"[Abuse rate limits](https://developer.github.com/enterprise/2.17/v3/#abuse-rate-limits)\" for details.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/repos/comments/#create-a-commit-comment",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "commit_sha",
        "description": "commit_sha parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "body",
        "description": "The contents of the comment.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "path",
        "description": "Relative path of the file to comment on.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "position",
        "description": "Line index in the diff to comment on.",
        "in": "BODY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "line",
        "description": "**Deprecated**. Use **position** parameter instead. Line number in the file to comment on.",
        "in": "BODY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "sha",
        "description": null,
        "in": null,
        "type": null,
        "required": null,
        "enum": null,
        "allowNull": null,
        "mapToData": null,
        "validation": null,
        "alias": "commit_sha",
        "deprecated": true
      }
    ],
    "responses": [
      {
        "code": 201,
        "description": "response",
        "examples": [
          {
            "data": "{\"html_url\":\"https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e#commitcomment-1\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/comments/1\",\"id\":1,\"node_id\":\"MDEzOkNvbW1pdENvbW1lbnQx\",\"body\":\"Great stuff\",\"path\":\"file1.txt\",\"position\":4,\"line\":14,\"commit_id\":\"6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"created_at\":\"2011-04-14T16:00:49Z\",\"updated_at\":\"2011-04-14T16:00:49Z\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "List pull requests associated with commit",
    "scope": "repos",
    "id": "listPullRequestsAssociatedWithCommit",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/commits/{commit_sha}/pulls",
    "isDeprecated": false,
    "description": "Lists all pull requests containing the provided commit SHA, which can be from any point in the commit history. The results will include open and closed pull requests. Additional preview headers may be required to see certain details for associated pull requests, such as whether a pull request is in a draft state. For more information about previews that might affect this endpoint, see the [List pull requests](https://developer.github.com/enterprise/2.17/v3/pulls/#list-pull-requests) endpoint.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/repos/commits/#list-pull-requests-associated-with-commit",
    "previews": [{ "name": "groot" }],
    "headers": [
      { "name": "accept", "value": "application/vnd.github.groot-preview+json" }
    ],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "commit_sha",
        "description": "commit_sha parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"url\":\"https://api.github.com/repos/octocat/Hello-World/pulls/1347\",\"id\":1,\"node_id\":\"MDExOlB1bGxSZXF1ZXN0MQ==\",\"html_url\":\"https://github.com/octocat/Hello-World/pull/1347\",\"diff_url\":\"https://github.com/octocat/Hello-World/pull/1347.diff\",\"patch_url\":\"https://github.com/octocat/Hello-World/pull/1347.patch\",\"issue_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347\",\"commits_url\":\"https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits\",\"review_comments_url\":\"https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments\",\"review_comment_url\":\"https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347/comments\",\"statuses_url\":\"https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"number\":1347,\"state\":\"open\",\"locked\":true,\"title\":\"Amazing new feature\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"body\":\"Please pull these awesome changes in!\",\"labels\":[{\"id\":208045946,\"node_id\":\"MDU6TGFiZWwyMDgwNDU5NDY=\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/labels/bug\",\"name\":\"bug\",\"description\":\"Something isn't working\",\"color\":\"f29513\",\"default\":true}],\"milestone\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/milestones/1\",\"html_url\":\"https://github.com/octocat/Hello-World/milestones/v1.0\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/milestones/1/labels\",\"id\":1002604,\"node_id\":\"MDk6TWlsZXN0b25lMTAwMjYwNA==\",\"number\":1,\"state\":\"open\",\"title\":\"v1.0\",\"description\":\"Tracking milestone for version 1.0\",\"creator\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"open_issues\":4,\"closed_issues\":8,\"created_at\":\"2011-04-10T20:09:31Z\",\"updated_at\":\"2014-03-03T18:58:10Z\",\"closed_at\":\"2013-02-12T13:22:01Z\",\"due_on\":\"2012-10-09T23:39:01Z\"},\"active_lock_reason\":\"too heated\",\"created_at\":\"2011-01-26T19:01:12Z\",\"updated_at\":\"2011-01-26T19:01:12Z\",\"closed_at\":\"2011-01-26T19:01:12Z\",\"merged_at\":\"2011-01-26T19:01:12Z\",\"merge_commit_sha\":\"e5bd3914e2e596debea16f433f57875b5b90bcd6\",\"assignee\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"assignees\":[{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},{\"login\":\"hubot\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/hubot_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hubot\",\"html_url\":\"https://github.com/hubot\",\"followers_url\":\"https://api.github.com/users/hubot/followers\",\"following_url\":\"https://api.github.com/users/hubot/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hubot/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hubot/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hubot/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hubot/orgs\",\"repos_url\":\"https://api.github.com/users/hubot/repos\",\"events_url\":\"https://api.github.com/users/hubot/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hubot/received_events\",\"type\":\"User\",\"site_admin\":true}],\"requested_reviewers\":[{\"login\":\"other_user\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/other_user_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/other_user\",\"html_url\":\"https://github.com/other_user\",\"followers_url\":\"https://api.github.com/users/other_user/followers\",\"following_url\":\"https://api.github.com/users/other_user/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/other_user/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/other_user/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/other_user/subscriptions\",\"organizations_url\":\"https://api.github.com/users/other_user/orgs\",\"repos_url\":\"https://api.github.com/users/other_user/repos\",\"events_url\":\"https://api.github.com/users/other_user/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/other_user/received_events\",\"type\":\"User\",\"site_admin\":false}],\"requested_teams\":[{\"id\":1,\"node_id\":\"MDQ6VGVhbTE=\",\"url\":\"https://api.github.com/teams/1\",\"html_url\":\"https://api.github.com/teams/justice-league\",\"name\":\"Justice League\",\"slug\":\"justice-league\",\"description\":\"A great team.\",\"privacy\":\"closed\",\"permission\":\"admin\",\"members_url\":\"https://api.github.com/teams/1/members{/member}\",\"repositories_url\":\"https://api.github.com/teams/1/repos\",\"parent\":null}],\"head\":{\"label\":\"octocat:new-topic\",\"ref\":\"new-topic\",\"sha\":\"6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"repo\":{\"id\":1296269,\"node_id\":\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\"name\":\"Hello-World\",\"full_name\":\"octocat/Hello-World\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"private\":false,\"html_url\":\"https://github.com/octocat/Hello-World\",\"description\":\"This your first repo!\",\"fork\":false,\"url\":\"https://api.github.com/repos/octocat/Hello-World\",\"archive_url\":\"http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\"assignees_url\":\"http://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\"blobs_url\":\"http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\"branches_url\":\"http://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\"collaborators_url\":\"http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\"comments_url\":\"http://api.github.com/repos/octocat/Hello-World/comments{/number}\",\"commits_url\":\"http://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\"compare_url\":\"http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\"contents_url\":\"http://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\"contributors_url\":\"http://api.github.com/repos/octocat/Hello-World/contributors\",\"deployments_url\":\"http://api.github.com/repos/octocat/Hello-World/deployments\",\"downloads_url\":\"http://api.github.com/repos/octocat/Hello-World/downloads\",\"events_url\":\"http://api.github.com/repos/octocat/Hello-World/events\",\"forks_url\":\"http://api.github.com/repos/octocat/Hello-World/forks\",\"git_commits_url\":\"http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\"git_refs_url\":\"http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\"git_tags_url\":\"http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\"git_url\":\"git:github.com/octocat/Hello-World.git\",\"issue_comment_url\":\"http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\"issue_events_url\":\"http://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\"issues_url\":\"http://api.github.com/repos/octocat/Hello-World/issues{/number}\",\"keys_url\":\"http://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\"labels_url\":\"http://api.github.com/repos/octocat/Hello-World/labels{/name}\",\"languages_url\":\"http://api.github.com/repos/octocat/Hello-World/languages\",\"merges_url\":\"http://api.github.com/repos/octocat/Hello-World/merges\",\"milestones_url\":\"http://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\"notifications_url\":\"http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\"pulls_url\":\"http://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\"releases_url\":\"http://api.github.com/repos/octocat/Hello-World/releases{/id}\",\"ssh_url\":\"git@github.com:octocat/Hello-World.git\",\"stargazers_url\":\"http://api.github.com/repos/octocat/Hello-World/stargazers\",\"statuses_url\":\"http://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\"subscribers_url\":\"http://api.github.com/repos/octocat/Hello-World/subscribers\",\"subscription_url\":\"http://api.github.com/repos/octocat/Hello-World/subscription\",\"tags_url\":\"http://api.github.com/repos/octocat/Hello-World/tags\",\"teams_url\":\"http://api.github.com/repos/octocat/Hello-World/teams\",\"trees_url\":\"http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\"clone_url\":\"https://github.com/octocat/Hello-World.git\",\"mirror_url\":\"git:git.example.com/octocat/Hello-World\",\"hooks_url\":\"http://api.github.com/repos/octocat/Hello-World/hooks\",\"svn_url\":\"https://svn.github.com/octocat/Hello-World\",\"homepage\":\"https://github.com\",\"language\":null,\"forks_count\":9,\"stargazers_count\":80,\"watchers_count\":80,\"size\":108,\"default_branch\":\"master\",\"open_issues_count\":0,\"topics\":[\"octocat\",\"atom\",\"electron\",\"api\"],\"has_issues\":true,\"has_projects\":true,\"has_wiki\":true,\"has_pages\":false,\"has_downloads\":true,\"archived\":false,\"disabled\":false,\"pushed_at\":\"2011-01-26T19:06:43Z\",\"created_at\":\"2011-01-26T19:01:12Z\",\"updated_at\":\"2011-01-26T19:14:43Z\",\"permissions\":{\"admin\":false,\"push\":false,\"pull\":true},\"allow_rebase_merge\":true,\"allow_squash_merge\":true,\"allow_merge_commit\":true,\"subscribers_count\":42,\"network_count\":0,\"anonymous_access_enabled\":false}},\"base\":{\"label\":\"octocat:master\",\"ref\":\"master\",\"sha\":\"6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"repo\":{\"id\":1296269,\"node_id\":\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\"name\":\"Hello-World\",\"full_name\":\"octocat/Hello-World\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"private\":false,\"html_url\":\"https://github.com/octocat/Hello-World\",\"description\":\"This your first repo!\",\"fork\":false,\"url\":\"https://api.github.com/repos/octocat/Hello-World\",\"archive_url\":\"http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\"assignees_url\":\"http://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\"blobs_url\":\"http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\"branches_url\":\"http://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\"collaborators_url\":\"http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\"comments_url\":\"http://api.github.com/repos/octocat/Hello-World/comments{/number}\",\"commits_url\":\"http://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\"compare_url\":\"http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\"contents_url\":\"http://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\"contributors_url\":\"http://api.github.com/repos/octocat/Hello-World/contributors\",\"deployments_url\":\"http://api.github.com/repos/octocat/Hello-World/deployments\",\"downloads_url\":\"http://api.github.com/repos/octocat/Hello-World/downloads\",\"events_url\":\"http://api.github.com/repos/octocat/Hello-World/events\",\"forks_url\":\"http://api.github.com/repos/octocat/Hello-World/forks\",\"git_commits_url\":\"http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\"git_refs_url\":\"http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\"git_tags_url\":\"http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\"git_url\":\"git:github.com/octocat/Hello-World.git\",\"issue_comment_url\":\"http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\"issue_events_url\":\"http://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\"issues_url\":\"http://api.github.com/repos/octocat/Hello-World/issues{/number}\",\"keys_url\":\"http://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\"labels_url\":\"http://api.github.com/repos/octocat/Hello-World/labels{/name}\",\"languages_url\":\"http://api.github.com/repos/octocat/Hello-World/languages\",\"merges_url\":\"http://api.github.com/repos/octocat/Hello-World/merges\",\"milestones_url\":\"http://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\"notifications_url\":\"http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\"pulls_url\":\"http://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\"releases_url\":\"http://api.github.com/repos/octocat/Hello-World/releases{/id}\",\"ssh_url\":\"git@github.com:octocat/Hello-World.git\",\"stargazers_url\":\"http://api.github.com/repos/octocat/Hello-World/stargazers\",\"statuses_url\":\"http://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\"subscribers_url\":\"http://api.github.com/repos/octocat/Hello-World/subscribers\",\"subscription_url\":\"http://api.github.com/repos/octocat/Hello-World/subscription\",\"tags_url\":\"http://api.github.com/repos/octocat/Hello-World/tags\",\"teams_url\":\"http://api.github.com/repos/octocat/Hello-World/teams\",\"trees_url\":\"http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\"clone_url\":\"https://github.com/octocat/Hello-World.git\",\"mirror_url\":\"git:git.example.com/octocat/Hello-World\",\"hooks_url\":\"http://api.github.com/repos/octocat/Hello-World/hooks\",\"svn_url\":\"https://svn.github.com/octocat/Hello-World\",\"homepage\":\"https://github.com\",\"language\":null,\"forks_count\":9,\"stargazers_count\":80,\"watchers_count\":80,\"size\":108,\"default_branch\":\"master\",\"open_issues_count\":0,\"topics\":[\"octocat\",\"atom\",\"electron\",\"api\"],\"has_issues\":true,\"has_projects\":true,\"has_wiki\":true,\"has_pages\":false,\"has_downloads\":true,\"archived\":false,\"disabled\":false,\"pushed_at\":\"2011-01-26T19:06:43Z\",\"created_at\":\"2011-01-26T19:01:12Z\",\"updated_at\":\"2011-01-26T19:14:43Z\",\"permissions\":{\"admin\":false,\"push\":false,\"pull\":true},\"allow_rebase_merge\":true,\"allow_squash_merge\":true,\"allow_merge_commit\":true,\"subscribers_count\":42,\"network_count\":0,\"anonymous_access_enabled\":false}},\"_links\":{\"self\":{\"href\":\"https://api.github.com/repos/octocat/Hello-World/pulls/1347\"},\"html\":{\"href\":\"https://github.com/octocat/Hello-World/pull/1347\"},\"issue\":{\"href\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347\"},\"comments\":{\"href\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347/comments\"},\"review_comments\":{\"href\":\"https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments\"},\"review_comment\":{\"href\":\"https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}\"},\"commits\":{\"href\":\"https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits\"},\"statuses\":{\"href\":\"https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e\"}},\"author_association\":\"OWNER\",\"draft\":false}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Get a single commit",
    "scope": "repos",
    "id": "getCommit",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/commits/{ref}",
    "isDeprecated": false,
    "description": "Returns the contents of a single commit reference. You must have `read` access for the repository to use this endpoint.\n\nYou can pass the appropriate [media type](https://developer.github.com/enterprise/2.17/v3/media/#commits-commit-comparison-and-pull-requests) to fetch `diff` and `patch` formats. Diffs with binary data will have no `patch` property.\n\nTo return only the SHA-1 hash of the commit reference, you can provide the `sha` custom [media type](https://developer.github.com/enterprise/2.17/v3/media/#commits-commit-comparison-and-pull-requests) in the `Accept` header. You can use this endpoint to check if a remote reference's SHA-1 hash is the same as your local reference's SHA-1 hash by providing the local SHA-1 reference as the ETag.\n\n**Signature verification object**\n\nThe response will include a `verification` object that describes the result of verifying the commit's signature. The following fields are included in the `verification` object:\n\nThese are the possible values for `reason` in the `verification` object:\n\n| Value                    | Description                                                                                                                       |\n| ------------------------ | --------------------------------------------------------------------------------------------------------------------------------- |\n| `expired_key`            | The key that made the signature is expired.                                                                                       |\n| `not_signing_key`        | The \"signing\" flag is not among the usage flags in the GPG key that made the signature.                                           |\n| `gpgverify_error`        | There was an error communicating with the signature verification service.                                                         |\n| `gpgverify_unavailable`  | The signature verification service is currently unavailable.                                                                      |\n| `unsigned`               | The object does not include a signature.                                                                                          |\n| `unknown_signature_type` | A non-PGP signature was found in the commit.                                                                                      |\n| `no_user`                | No user was associated with the `committer` email address in the commit.                                                          |\n| `unverified_email`       | The `committer` email address in the commit was associated with a user, but the email address is not verified on her/his account. |\n| `bad_email`              | The `committer` email address in the commit is not included in the identities of the PGP key that made the signature.             |\n| `unknown_key`            | The key that made the signature has not been registered with any user's account.                                                  |\n| `malformed_signature`    | There was an error parsing the signature.                                                                                         |\n| `invalid`                | The signature could not be cryptographically verified using the key whose key-id was found in the signature.                      |\n| `valid`                  | None of the above errors applied, so the signature is considered to be verified.                                                  |\n\n",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/repos/commits/#get-a-single-commit",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "ref",
        "description": "ref parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "sha",
        "description": null,
        "in": null,
        "type": null,
        "required": null,
        "enum": null,
        "allowNull": null,
        "mapToData": null,
        "validation": null,
        "alias": "ref",
        "deprecated": true
      },
      {
        "name": "commit_sha",
        "description": null,
        "in": null,
        "type": null,
        "required": null,
        "enum": null,
        "allowNull": null,
        "mapToData": null,
        "validation": null,
        "alias": "ref",
        "deprecated": true
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"url\":\"https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"sha\":\"6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"node_id\":\"MDY6Q29tbWl0NmRjYjA5YjViNTc4NzVmMzM0ZjYxYWViZWQ2OTVlMmU0MTkzZGI1ZQ==\",\"html_url\":\"https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e/comments\",\"commit\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"author\":{\"name\":\"Monalisa Octocat\",\"email\":\"support@github.com\",\"date\":\"2011-04-14T16:00:49Z\"},\"committer\":{\"name\":\"Monalisa Octocat\",\"email\":\"support@github.com\",\"date\":\"2011-04-14T16:00:49Z\"},\"message\":\"Fix all the bugs\",\"tree\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/tree/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"sha\":\"6dcb09b5b57875f334f61aebed695e2e4193db5e\"},\"comment_count\":0,\"verification\":{\"verified\":false,\"reason\":\"unsigned\",\"signature\":null,\"payload\":null}},\"author\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"committer\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"parents\":[{\"url\":\"https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"sha\":\"6dcb09b5b57875f334f61aebed695e2e4193db5e\"}],\"stats\":{\"additions\":104,\"deletions\":4,\"total\":108},\"files\":[{\"filename\":\"file1.txt\",\"additions\":10,\"deletions\":2,\"changes\":12,\"status\":\"modified\",\"raw_url\":\"https://github.com/octocat/Hello-World/raw/7ca483543807a51b6079e54ac4cc392bc29ae284/file1.txt\",\"blob_url\":\"https://github.com/octocat/Hello-World/blob/7ca483543807a51b6079e54ac4cc392bc29ae284/file1.txt\",\"patch\":\"@@ -29,7 +29,7 @@\\n.....\"}]}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "List check runs for a specific ref",
    "scope": "checks",
    "id": "listForRef",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/commits/{ref}/check-runs",
    "isDeprecated": false,
    "description": "**Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array.\n\nLists check runs for a commit ref. The `ref` can be a SHA, branch name, or a tag name. GitHub Apps must have the `checks:read` permission on a private repository or pull access to a public repository to get check runs. OAuth Apps and authenticated users must have the `repo` scope to get check runs in a private repository.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/checks/runs/#list-check-runs-for-a-specific-ref",
    "previews": [{ "name": "antiope" }],
    "headers": [
      {
        "name": "accept",
        "value": "application/vnd.github.antiope-preview+json"
      }
    ],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "ref",
        "description": "ref parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "check_name",
        "description": "Returns check runs with the specified `name`.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "status",
        "description": "Returns check runs with the specified `status`. Can be one of `queued`, `in_progress`, or `completed`.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["queued", "in_progress", "completed"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "filter",
        "description": "Filters check runs by their `completed_at` timestamp. Can be one of `latest` (returning the most recent check runs) or `all`.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["latest", "all"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"total_count\":1,\"check_runs\":[{\"id\":4,\"head_sha\":\"ce587453ced02b1526dfb4cb910479d431683101\",\"node_id\":\"MDg6Q2hlY2tSdW40\",\"external_id\":\"\",\"url\":\"https://api.github.com/repos/github/hello-world/check-runs/4\",\"html_url\":\"http://github.com/github/hello-world/runs/4\",\"details_url\":\"https://example.com\",\"status\":\"completed\",\"conclusion\":\"neutral\",\"started_at\":\"2018-05-04T01:14:52Z\",\"completed_at\":\"2018-05-04T01:14:52Z\",\"output\":{\"title\":\"Mighty Readme report\",\"summary\":\"There are 0 failures, 2 warnings, and 1 notice.\",\"text\":\"You may have some misspelled words on lines 2 and 4. You also may want to add a section in your README about how to install your app.\",\"annotations_count\":2,\"annotations_url\":\"https://api.github.com/repos/github/hello-world/check-runs/4/annotations\"},\"name\":\"mighty_readme\",\"check_suite\":{\"id\":5},\"app\":{\"id\":1,\"slug\":\"octoapp\",\"node_id\":\"MDExOkludGVncmF0aW9uMQ==\",\"owner\":{\"login\":\"github\",\"id\":1,\"node_id\":\"MDEyOk9yZ2FuaXphdGlvbjE=\",\"url\":\"https://api.github.com/orgs/github\",\"repos_url\":\"https://api.github.com/orgs/github/repos\",\"events_url\":\"https://api.github.com/orgs/github/events\",\"hooks_url\":\"https://api.github.com/orgs/github/hooks\",\"issues_url\":\"https://api.github.com/orgs/github/issues\",\"members_url\":\"https://api.github.com/orgs/github/members{/member}\",\"public_members_url\":\"https://api.github.com/orgs/github/public_members{/member}\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"description\":\"A great organization\"},\"name\":\"Octocat App\",\"description\":\"\",\"external_url\":\"https://example.com\",\"html_url\":\"https://github.com/apps/octoapp\",\"created_at\":\"2017-07-08T16:18:44-04:00\",\"updated_at\":\"2017-07-08T16:18:44-04:00\",\"permissions\":{\"metadata\":\"read\",\"contents\":\"read\",\"issues\":\"write\",\"single_file\":\"write\"},\"events\":[\"push\",\"pull_request\"]},\"pull_requests\":[{\"url\":\"https://api.github.com/repos/github/hello-world/pulls/1\",\"id\":1934,\"number\":3956,\"head\":{\"ref\":\"say-hello\",\"sha\":\"3dca65fa3e8d4b3da3f3d056c59aee1c50f41390\",\"repo\":{\"id\":526,\"url\":\"https://api.github.com/repos/github/hello-world\",\"name\":\"hello-world\"}},\"base\":{\"ref\":\"master\",\"sha\":\"e7fdf7640066d71ad16a86fbcbb9c6a10a18af4f\",\"repo\":{\"id\":526,\"url\":\"https://api.github.com/repos/github/hello-world\",\"name\":\"hello-world\"}}}]}]}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "List check suites for a specific ref",
    "scope": "checks",
    "id": "listSuitesForRef",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/commits/{ref}/check-suites",
    "isDeprecated": false,
    "description": "**Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array and a `null` value for `head_branch`.\n\nLists check suites for a commit `ref`. The `ref` can be a SHA, branch name, or a tag name. GitHub Apps must have the `checks:read` permission on a private repository or pull access to a public repository to list check suites. OAuth Apps and authenticated users must have the `repo` scope to get check suites in a private repository.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/checks/suites/#list-check-suites-for-a-specific-ref",
    "previews": [{ "name": "antiope" }],
    "headers": [
      {
        "name": "accept",
        "value": "application/vnd.github.antiope-preview+json"
      }
    ],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "ref",
        "description": "ref parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "app_id",
        "description": "Filters check suites by GitHub App `id`.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "check_name",
        "description": "Filters checks suites by the name of the [check run](https://developer.github.com/enterprise/2.17/v3/checks/runs/).",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"total_count\":1,\"check_suites\":[{\"id\":5,\"node_id\":\"MDEwOkNoZWNrU3VpdGU1\",\"head_branch\":\"master\",\"head_sha\":\"d6fde92930d4715a2b49857d24b940956b26d2d3\",\"status\":\"completed\",\"conclusion\":\"neutral\",\"url\":\"https://api.github.com/repos/github/hello-world/check-suites/5\",\"before\":\"146e867f55c26428e5f9fade55a9bbf5e95a7912\",\"after\":\"d6fde92930d4715a2b49857d24b940956b26d2d3\",\"pull_requests\":[],\"app\":{\"id\":1,\"slug\":\"octoapp\",\"node_id\":\"MDExOkludGVncmF0aW9uMQ==\",\"owner\":{\"login\":\"github\",\"id\":1,\"node_id\":\"MDEyOk9yZ2FuaXphdGlvbjE=\",\"url\":\"https://api.github.com/orgs/github\",\"repos_url\":\"https://api.github.com/orgs/github/repos\",\"events_url\":\"https://api.github.com/orgs/github/events\",\"hooks_url\":\"https://api.github.com/orgs/github/hooks\",\"issues_url\":\"https://api.github.com/orgs/github/issues\",\"members_url\":\"https://api.github.com/orgs/github/members{/member}\",\"public_members_url\":\"https://api.github.com/orgs/github/public_members{/member}\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"description\":\"A great organization\"},\"name\":\"Octocat App\",\"description\":\"\",\"external_url\":\"https://example.com\",\"html_url\":\"https://github.com/apps/octoapp\",\"created_at\":\"2017-07-08T16:18:44-04:00\",\"updated_at\":\"2017-07-08T16:18:44-04:00\",\"permissions\":{\"metadata\":\"read\",\"contents\":\"read\",\"issues\":\"write\",\"single_file\":\"write\"},\"events\":[\"push\",\"pull_request\"]},\"repository\":{\"id\":1296269,\"node_id\":\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\"name\":\"Hello-World\",\"full_name\":\"octocat/Hello-World\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"private\":false,\"html_url\":\"https://github.com/octocat/Hello-World\",\"description\":\"This your first repo!\",\"fork\":false,\"url\":\"https://api.github.com/repos/octocat/Hello-World\",\"archive_url\":\"http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\"assignees_url\":\"http://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\"blobs_url\":\"http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\"branches_url\":\"http://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\"collaborators_url\":\"http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\"comments_url\":\"http://api.github.com/repos/octocat/Hello-World/comments{/number}\",\"commits_url\":\"http://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\"compare_url\":\"http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\"contents_url\":\"http://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\"contributors_url\":\"http://api.github.com/repos/octocat/Hello-World/contributors\",\"deployments_url\":\"http://api.github.com/repos/octocat/Hello-World/deployments\",\"downloads_url\":\"http://api.github.com/repos/octocat/Hello-World/downloads\",\"events_url\":\"http://api.github.com/repos/octocat/Hello-World/events\",\"forks_url\":\"http://api.github.com/repos/octocat/Hello-World/forks\",\"git_commits_url\":\"http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\"git_refs_url\":\"http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\"git_tags_url\":\"http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\"git_url\":\"git:github.com/octocat/Hello-World.git\",\"issue_comment_url\":\"http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\"issue_events_url\":\"http://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\"issues_url\":\"http://api.github.com/repos/octocat/Hello-World/issues{/number}\",\"keys_url\":\"http://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\"labels_url\":\"http://api.github.com/repos/octocat/Hello-World/labels{/name}\",\"languages_url\":\"http://api.github.com/repos/octocat/Hello-World/languages\",\"merges_url\":\"http://api.github.com/repos/octocat/Hello-World/merges\",\"milestones_url\":\"http://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\"notifications_url\":\"http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\"pulls_url\":\"http://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\"releases_url\":\"http://api.github.com/repos/octocat/Hello-World/releases{/id}\",\"ssh_url\":\"git@github.com:octocat/Hello-World.git\",\"stargazers_url\":\"http://api.github.com/repos/octocat/Hello-World/stargazers\",\"statuses_url\":\"http://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\"subscribers_url\":\"http://api.github.com/repos/octocat/Hello-World/subscribers\",\"subscription_url\":\"http://api.github.com/repos/octocat/Hello-World/subscription\",\"tags_url\":\"http://api.github.com/repos/octocat/Hello-World/tags\",\"teams_url\":\"http://api.github.com/repos/octocat/Hello-World/teams\",\"trees_url\":\"http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\"clone_url\":\"https://github.com/octocat/Hello-World.git\",\"mirror_url\":\"git:git.example.com/octocat/Hello-World\",\"hooks_url\":\"http://api.github.com/repos/octocat/Hello-World/hooks\",\"svn_url\":\"https://svn.github.com/octocat/Hello-World\",\"homepage\":\"https://github.com\",\"language\":null,\"forks_count\":9,\"stargazers_count\":80,\"watchers_count\":80,\"size\":108,\"default_branch\":\"master\",\"open_issues_count\":0,\"topics\":[\"octocat\",\"atom\",\"electron\",\"api\"],\"has_issues\":true,\"has_projects\":true,\"has_wiki\":true,\"has_pages\":false,\"has_downloads\":true,\"archived\":false,\"disabled\":false,\"pushed_at\":\"2011-01-26T19:06:43Z\",\"created_at\":\"2011-01-26T19:01:12Z\",\"updated_at\":\"2011-01-26T19:14:43Z\",\"permissions\":{\"admin\":false,\"push\":false,\"pull\":true},\"allow_rebase_merge\":true,\"allow_squash_merge\":true,\"allow_merge_commit\":true,\"subscribers_count\":42,\"network_count\":0,\"anonymous_access_enabled\":false}}]}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Get the combined status for a specific ref",
    "scope": "repos",
    "id": "getCombinedStatusForRef",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/commits/{ref}/status",
    "isDeprecated": false,
    "description": "Users with pull access in a repository can access a combined view of commit statuses for a given ref. The ref can be a SHA, a branch name, or a tag name.\n\nThe most recent status for each context is returned, up to 100. This field [paginates](https://developer.github.com/enterprise/2.17/v3/#pagination) if there are over 100 contexts.\n\nAdditionally, a combined `state` is returned. The `state` is one of:\n\n*   **failure** if any of the contexts report as `error` or `failure`\n*   **pending** if there are no statuses or a context is `pending`\n*   **success** if the latest status for all contexts is `success`",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/repos/statuses/#get-the-combined-status-for-a-specific-ref",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "ref",
        "description": "ref parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"state\":\"success\",\"statuses\":[{\"url\":\"https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"avatar_url\":\"https://github.com/images/error/hubot_happy.gif\",\"id\":1,\"node_id\":\"MDY6U3RhdHVzMQ==\",\"state\":\"success\",\"description\":\"Build has completed successfully\",\"target_url\":\"https://ci.example.com/1000/output\",\"context\":\"continuous-integration/jenkins\",\"created_at\":\"2012-07-20T01:19:13Z\",\"updated_at\":\"2012-07-20T01:19:13Z\"},{\"url\":\"https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"avatar_url\":\"https://github.com/images/error/other_user_happy.gif\",\"id\":2,\"node_id\":\"MDY6U3RhdHVzMg==\",\"state\":\"success\",\"description\":\"Testing has completed successfully\",\"target_url\":\"https://ci.example.com/2000/output\",\"context\":\"security/brakeman\",\"created_at\":\"2012-08-20T01:19:13Z\",\"updated_at\":\"2012-08-20T01:19:13Z\"}],\"sha\":\"6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"total_count\":2,\"repository\":{\"id\":1296269,\"node_id\":\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\"name\":\"Hello-World\",\"full_name\":\"octocat/Hello-World\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"private\":false,\"html_url\":\"https://github.com/octocat/Hello-World\",\"description\":\"This your first repo!\",\"fork\":false,\"url\":\"https://api.github.com/repos/octocat/Hello-World\",\"archive_url\":\"http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\"assignees_url\":\"http://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\"blobs_url\":\"http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\"branches_url\":\"http://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\"collaborators_url\":\"http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\"comments_url\":\"http://api.github.com/repos/octocat/Hello-World/comments{/number}\",\"commits_url\":\"http://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\"compare_url\":\"http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\"contents_url\":\"http://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\"contributors_url\":\"http://api.github.com/repos/octocat/Hello-World/contributors\",\"deployments_url\":\"http://api.github.com/repos/octocat/Hello-World/deployments\",\"downloads_url\":\"http://api.github.com/repos/octocat/Hello-World/downloads\",\"events_url\":\"http://api.github.com/repos/octocat/Hello-World/events\",\"forks_url\":\"http://api.github.com/repos/octocat/Hello-World/forks\",\"git_commits_url\":\"http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\"git_refs_url\":\"http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\"git_tags_url\":\"http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\"git_url\":\"git:github.com/octocat/Hello-World.git\",\"issue_comment_url\":\"http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\"issue_events_url\":\"http://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\"issues_url\":\"http://api.github.com/repos/octocat/Hello-World/issues{/number}\",\"keys_url\":\"http://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\"labels_url\":\"http://api.github.com/repos/octocat/Hello-World/labels{/name}\",\"languages_url\":\"http://api.github.com/repos/octocat/Hello-World/languages\",\"merges_url\":\"http://api.github.com/repos/octocat/Hello-World/merges\",\"milestones_url\":\"http://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\"notifications_url\":\"http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\"pulls_url\":\"http://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\"releases_url\":\"http://api.github.com/repos/octocat/Hello-World/releases{/id}\",\"ssh_url\":\"git@github.com:octocat/Hello-World.git\",\"stargazers_url\":\"http://api.github.com/repos/octocat/Hello-World/stargazers\",\"statuses_url\":\"http://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\"subscribers_url\":\"http://api.github.com/repos/octocat/Hello-World/subscribers\",\"subscription_url\":\"http://api.github.com/repos/octocat/Hello-World/subscription\",\"tags_url\":\"http://api.github.com/repos/octocat/Hello-World/tags\",\"teams_url\":\"http://api.github.com/repos/octocat/Hello-World/teams\",\"trees_url\":\"http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\"},\"commit_url\":\"https://api.github.com/repos/octocat/Hello-World/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/6dcb09b5b57875f334f61aebed695e2e4193db5e/status\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "List statuses for a specific ref",
    "scope": "repos",
    "id": "listStatusesForRef",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/commits/{ref}/statuses",
    "isDeprecated": false,
    "description": "Users with pull access in a repository can view commit statuses for a given ref. The ref can be a SHA, a branch name, or a tag name. Statuses are returned in reverse chronological order. The first status in the list will be the latest one.\n\nThis resource is also available via a legacy route: `GET /repos/:owner/:repo/statuses/:ref`.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/repos/statuses/#list-statuses-for-a-specific-ref",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "ref",
        "description": "ref parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"url\":\"https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"avatar_url\":\"https://github.com/images/error/hubot_happy.gif\",\"id\":1,\"node_id\":\"MDY6U3RhdHVzMQ==\",\"state\":\"success\",\"description\":\"Build has completed successfully\",\"target_url\":\"https://ci.example.com/1000/output\",\"context\":\"continuous-integration/jenkins\",\"created_at\":\"2012-07-20T01:19:13Z\",\"updated_at\":\"2012-07-20T01:19:13Z\",\"creator\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false}}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Get the contents of a repository's code of conduct",
    "scope": "codesOfConduct",
    "id": "getForRepo",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/community/code_of_conduct",
    "isDeprecated": false,
    "description": "This method returns the contents of the repository's code of conduct file, if one is detected.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/codes_of_conduct/#get-the-contents-of-a-repositorys-code-of-conduct",
    "previews": [{ "name": "scarlet-witch" }],
    "headers": [
      {
        "name": "accept",
        "value": "application/vnd.github.scarlet-witch-preview+json"
      }
    ],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"key\":\"contributor_covenant\",\"name\":\"Contributor Covenant\",\"url\":\"https://github.com/LindseyB/cosee/blob/master/CODE_OF_CONDUCT.md\",\"body\":\"# Contributor Covenant Code of Conduct\\n\\n## Our Pledge\\n\\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.\\n\\n## Our Standards\\n\\nExamples of behavior that contributes to creating a positive environment include=>\\n\\n* Using welcoming and inclusive language\\n* Being respectful of differing viewpoints and experiences\\n* Gracefully accepting constructive criticism\\n* Focusing on what is best for the community\\n* Showing empathy towards other community members\\n\\nExamples of unacceptable behavior by participants include=>\\n\\n* The use of sexualized language or imagery and unwelcome sexual attention or advances\\n* Trolling, insulting/derogatory comments, and personal or political attacks\\n* Public or private harassment\\n* Publishing others' private information, such as a physical or electronic address, without explicit permission\\n* Other conduct which could reasonably be considered inappropriate in a professional setting\\n\\n## Our Responsibilities\\n\\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response\\nto any instances of unacceptable behavior.\\n\\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\\n\\n## Scope\\n\\nThis Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address,\\nposting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\\n\\n## Enforcement\\n\\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at lindseyb@github.com. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.\\n\\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.\\n\\n## Attribution\\n\\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]\\n\\n[homepage]: http://contributor-covenant.org\\n[version]: http://contributor-covenant.org/version/1/4/\\n\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Compare two commits",
    "scope": "repos",
    "id": "compareCommits",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/compare/{base}...{head}",
    "isDeprecated": false,
    "description": "Both `:base` and `:head` must be branch names in `:repo`. To compare branches across other repositories in the same network as `:repo`, use the format `<USERNAME>:branch`.\n\nThe response from the API is equivalent to running the `git log base..head` command; however, commits are returned in chronological order. Pass the appropriate [media type](https://developer.github.com/enterprise/2.17/v3/media/#commits-commit-comparison-and-pull-requests) to fetch diff and patch formats.\n\nThe response also includes details on the files that were changed between the two commits. This includes the status of the change (for example, if a file was added, removed, modified, or renamed), and details of the change itself. For example, files with a `renamed` status have a `previous_filename` field showing the previous filename of the file, and files with a `modified` status have a `patch` field showing the changes made to the file.\n\n**Working with large comparisons**\n\nThe response will include a comparison of up to 250 commits. If you are working with a larger commit range, you can use the [Commit List API](https://developer.github.com/enterprise/2.17/v3/repos/commits/#list-commits-on-a-repository) to enumerate all commits in the range.\n\nFor comparisons with extremely large diffs, you may receive an error response indicating that the diff took too long to generate. You can typically resolve this error by using a smaller commit range.\n\n**Signature verification object**\n\nThe response will include a `verification` object that describes the result of verifying the commit's signature. The following fields are included in the `verification` object:\n\nThese are the possible values for `reason` in the `verification` object:\n\n| Value                    | Description                                                                                                                       |\n| ------------------------ | --------------------------------------------------------------------------------------------------------------------------------- |\n| `expired_key`            | The key that made the signature is expired.                                                                                       |\n| `not_signing_key`        | The \"signing\" flag is not among the usage flags in the GPG key that made the signature.                                           |\n| `gpgverify_error`        | There was an error communicating with the signature verification service.                                                         |\n| `gpgverify_unavailable`  | The signature verification service is currently unavailable.                                                                      |\n| `unsigned`               | The object does not include a signature.                                                                                          |\n| `unknown_signature_type` | A non-PGP signature was found in the commit.                                                                                      |\n| `no_user`                | No user was associated with the `committer` email address in the commit.                                                          |\n| `unverified_email`       | The `committer` email address in the commit was associated with a user, but the email address is not verified on her/his account. |\n| `bad_email`              | The `committer` email address in the commit is not included in the identities of the PGP key that made the signature.             |\n| `unknown_key`            | The key that made the signature has not been registered with any user's account.                                                  |\n| `malformed_signature`    | There was an error parsing the signature.                                                                                         |\n| `invalid`                | The signature could not be cryptographically verified using the key whose key-id was found in the signature.                      |\n| `valid`                  | None of the above errors applied, so the signature is considered to be verified.                                                  |",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/repos/commits/#compare-two-commits",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "base",
        "description": "base parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "head",
        "description": "head parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"url\":\"https://api.github.com/repos/octocat/Hello-World/compare/master...topic\",\"html_url\":\"https://github.com/octocat/Hello-World/compare/master...topic\",\"permalink_url\":\"https://github.com/octocat/Hello-World/compare/octocat:bbcd538c8e72b8c175046e27cc8f907076331401...octocat:0328041d1152db8ae77652d1618a02e57f745f17\",\"diff_url\":\"https://github.com/octocat/Hello-World/compare/master...topic.diff\",\"patch_url\":\"https://github.com/octocat/Hello-World/compare/master...topic.patch\",\"base_commit\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"sha\":\"6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"node_id\":\"MDY6Q29tbWl0NmRjYjA5YjViNTc4NzVmMzM0ZjYxYWViZWQ2OTVlMmU0MTkzZGI1ZQ==\",\"html_url\":\"https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e/comments\",\"commit\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"author\":{\"name\":\"Monalisa Octocat\",\"email\":\"support@github.com\",\"date\":\"2011-04-14T16:00:49Z\"},\"committer\":{\"name\":\"Monalisa Octocat\",\"email\":\"support@github.com\",\"date\":\"2011-04-14T16:00:49Z\"},\"message\":\"Fix all the bugs\",\"tree\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/tree/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"sha\":\"6dcb09b5b57875f334f61aebed695e2e4193db5e\"},\"comment_count\":0,\"verification\":{\"verified\":false,\"reason\":\"unsigned\",\"signature\":null,\"payload\":null}},\"author\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"committer\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"parents\":[{\"url\":\"https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"sha\":\"6dcb09b5b57875f334f61aebed695e2e4193db5e\"}]},\"merge_base_commit\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"sha\":\"6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"node_id\":\"MDY6Q29tbWl0NmRjYjA5YjViNTc4NzVmMzM0ZjYxYWViZWQ2OTVlMmU0MTkzZGI1ZQ==\",\"html_url\":\"https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e/comments\",\"commit\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"author\":{\"name\":\"Monalisa Octocat\",\"email\":\"support@github.com\",\"date\":\"2011-04-14T16:00:49Z\"},\"committer\":{\"name\":\"Monalisa Octocat\",\"email\":\"support@github.com\",\"date\":\"2011-04-14T16:00:49Z\"},\"message\":\"Fix all the bugs\",\"tree\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/tree/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"sha\":\"6dcb09b5b57875f334f61aebed695e2e4193db5e\"},\"comment_count\":0,\"verification\":{\"verified\":false,\"reason\":\"unsigned\",\"signature\":null,\"payload\":null}},\"author\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"committer\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"parents\":[{\"url\":\"https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"sha\":\"6dcb09b5b57875f334f61aebed695e2e4193db5e\"}]},\"status\":\"behind\",\"ahead_by\":1,\"behind_by\":2,\"total_commits\":1,\"commits\":[{\"url\":\"https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"sha\":\"6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"node_id\":\"MDY6Q29tbWl0NmRjYjA5YjViNTc4NzVmMzM0ZjYxYWViZWQ2OTVlMmU0MTkzZGI1ZQ==\",\"html_url\":\"https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e/comments\",\"commit\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"author\":{\"name\":\"Monalisa Octocat\",\"email\":\"support@github.com\",\"date\":\"2011-04-14T16:00:49Z\"},\"committer\":{\"name\":\"Monalisa Octocat\",\"email\":\"support@github.com\",\"date\":\"2011-04-14T16:00:49Z\"},\"message\":\"Fix all the bugs\",\"tree\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/tree/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"sha\":\"6dcb09b5b57875f334f61aebed695e2e4193db5e\"},\"comment_count\":0,\"verification\":{\"verified\":false,\"reason\":\"unsigned\",\"signature\":null,\"payload\":null}},\"author\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"committer\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"parents\":[{\"url\":\"https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"sha\":\"6dcb09b5b57875f334f61aebed695e2e4193db5e\"}]}],\"files\":[{\"sha\":\"bbcd538c8e72b8c175046e27cc8f907076331401\",\"filename\":\"file1.txt\",\"status\":\"added\",\"additions\":103,\"deletions\":21,\"changes\":124,\"blob_url\":\"https://github.com/octocat/Hello-World/blob/6dcb09b5b57875f334f61aebed695e2e4193db5e/file1.txt\",\"raw_url\":\"https://github.com/octocat/Hello-World/raw/6dcb09b5b57875f334f61aebed695e2e4193db5e/file1.txt\",\"contents_url\":\"https://api.github.com/repos/octocat/Hello-World/contents/file1.txt?ref=6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"patch\":\"@@ -132,7 +132,7 @@ module Test @@ -1000,7 +1000,7 @@ module Test\"}]}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Get contents",
    "scope": "repos",
    "id": "getContents",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/contents/{path}",
    "isDeprecated": false,
    "description": "Gets the contents of a file or directory in a repository. Specify the file path or directory in `:path`. If you omit `:path`, you will receive the contents of all files in the repository.\n\nFiles and symlinks support [a custom media type](https://developer.github.com/enterprise/2.17/v3/repos/contents/#custom-media-types) for retrieving the raw content or rendered HTML (when supported). All content types support [a custom media type](https://developer.github.com/enterprise/2.17/v3/repos/contents/#custom-media-types) to ensure the content is returned in a consistent object format.\n\n**Note**:\n\n*   To get a repository's contents recursively, you can [recursively get the tree](https://developer.github.com/enterprise/2.17/v3/git/trees/).\n*   This API has an upper limit of 1,000 files for a directory. If you need to retrieve more files, use the [Git Trees API](https://developer.github.com/enterprise/2.17/v3/git/trees/#get-a-tree).\n*   This API supports files up to 1 megabyte in size.\n\nThe response will be an array of objects, one object for each item in the directory.\n\nWhen listing the contents of a directory, submodules have their \"type\" specified as \"file\". Logically, the value _should_ be \"submodule\". This behavior exists in API v3 [for backwards compatibility purposes](https://git.io/v1YCW). In the next major version of the API, the type will be returned as \"submodule\".\n\nIf the requested `:path` points to a symlink, and the symlink's target is a normal file in the repository, then the API responds with the content of the file (in the [format shown above](https://developer.github.com/enterprise/2.17/v3/repos/contents/#response-if-content-is-a-file)).\n\nOtherwise, the API responds with an object describing the symlink itself:\n\nThe `submodule_git_url` identifies the location of the submodule repository, and the `sha` identifies a specific commit within the submodule repository. Git uses the given URL when cloning the submodule repository, and checks out the submodule at that specific commit.\n\nIf the submodule repository is not hosted on github.com, the Git URLs (`git_url` and `_links[\"git\"]`) and the github.com URLs (`html_url` and `_links[\"html\"]`) will have null values.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/repos/contents/#get-contents",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "path",
        "description": "path parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "ref",
        "description": "The name of the commit/branch/tag. Default: the repository’s default branch (usually `master`)",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"type\":\"file\",\"encoding\":\"base64\",\"size\":5362,\"name\":\"README.md\",\"path\":\"README.md\",\"content\":\"encoded content ...\",\"sha\":\"3d21ec53a331a6f037a91c368710b99387d012c1\",\"url\":\"https://api.github.com/repos/octokit/octokit.rb/contents/README.md\",\"git_url\":\"https://api.github.com/repos/octokit/octokit.rb/git/blobs/3d21ec53a331a6f037a91c368710b99387d012c1\",\"html_url\":\"https://github.com/octokit/octokit.rb/blob/master/README.md\",\"download_url\":\"https://raw.githubusercontent.com/octokit/octokit.rb/master/README.md\",\"_links\":{\"git\":\"https://api.github.com/repos/octokit/octokit.rb/git/blobs/3d21ec53a331a6f037a91c368710b99387d012c1\",\"self\":\"https://api.github.com/repos/octokit/octokit.rb/contents/README.md\",\"html\":\"https://github.com/octokit/octokit.rb/blob/master/README.md\"}}"
          },
          {
            "data": "[{\"type\":\"file\",\"size\":625,\"name\":\"octokit.rb\",\"path\":\"lib/octokit.rb\",\"sha\":\"fff6fe3a23bf1c8ea0692b4a883af99bee26fd3b\",\"url\":\"https://api.github.com/repos/octokit/octokit.rb/contents/lib/octokit.rb\",\"git_url\":\"https://api.github.com/repos/octokit/octokit.rb/git/blobs/fff6fe3a23bf1c8ea0692b4a883af99bee26fd3b\",\"html_url\":\"https://github.com/octokit/octokit.rb/blob/master/lib/octokit.rb\",\"download_url\":\"https://raw.githubusercontent.com/octokit/octokit.rb/master/lib/octokit.rb\",\"_links\":{\"self\":\"https://api.github.com/repos/octokit/octokit.rb/contents/lib/octokit.rb\",\"git\":\"https://api.github.com/repos/octokit/octokit.rb/git/blobs/fff6fe3a23bf1c8ea0692b4a883af99bee26fd3b\",\"html\":\"https://github.com/octokit/octokit.rb/blob/master/lib/octokit.rb\"}},{\"type\":\"dir\",\"size\":0,\"name\":\"octokit\",\"path\":\"lib/octokit\",\"sha\":\"a84d88e7554fc1fa21bcbc4efae3c782a70d2b9d\",\"url\":\"https://api.github.com/repos/octokit/octokit.rb/contents/lib/octokit\",\"git_url\":\"https://api.github.com/repos/octokit/octokit.rb/git/trees/a84d88e7554fc1fa21bcbc4efae3c782a70d2b9d\",\"html_url\":\"https://github.com/octokit/octokit.rb/tree/master/lib/octokit\",\"download_url\":null,\"_links\":{\"self\":\"https://api.github.com/repos/octokit/octokit.rb/contents/lib/octokit\",\"git\":\"https://api.github.com/repos/octokit/octokit.rb/git/trees/a84d88e7554fc1fa21bcbc4efae3c782a70d2b9d\",\"html\":\"https://github.com/octokit/octokit.rb/tree/master/lib/octokit\"}}]"
          },
          {
            "data": "{\"type\":\"symlink\",\"target\":\"/path/to/symlink/target\",\"size\":23,\"name\":\"some-symlink\",\"path\":\"bin/some-symlink\",\"sha\":\"452a98979c88e093d682cab404a3ec82babebb48\",\"url\":\"https://api.github.com/repos/octokit/octokit.rb/contents/bin/some-symlink\",\"git_url\":\"https://api.github.com/repos/octokit/octokit.rb/git/blobs/452a98979c88e093d682cab404a3ec82babebb48\",\"html_url\":\"https://github.com/octokit/octokit.rb/blob/master/bin/some-symlink\",\"download_url\":\"https://raw.githubusercontent.com/octokit/octokit.rb/master/bin/some-symlink\",\"_links\":{\"git\":\"https://api.github.com/repos/octokit/octokit.rb/git/blobs/452a98979c88e093d682cab404a3ec82babebb48\",\"self\":\"https://api.github.com/repos/octokit/octokit.rb/contents/bin/some-symlink\",\"html\":\"https://github.com/octokit/octokit.rb/blob/master/bin/some-symlink\"}}"
          },
          {
            "data": "{\"type\":\"submodule\",\"submodule_git_url\":\"git://github.com/jquery/qunit.git\",\"size\":0,\"name\":\"qunit\",\"path\":\"test/qunit\",\"sha\":\"6ca3721222109997540bd6d9ccd396902e0ad2f9\",\"url\":\"https://api.github.com/repos/jquery/jquery/contents/test/qunit?ref=master\",\"git_url\":\"https://api.github.com/repos/jquery/qunit/git/trees/6ca3721222109997540bd6d9ccd396902e0ad2f9\",\"html_url\":\"https://github.com/jquery/qunit/tree/6ca3721222109997540bd6d9ccd396902e0ad2f9\",\"download_url\":null,\"_links\":{\"git\":\"https://api.github.com/repos/jquery/qunit/git/trees/6ca3721222109997540bd6d9ccd396902e0ad2f9\",\"self\":\"https://api.github.com/repos/jquery/jquery/contents/test/qunit?ref=master\",\"html\":\"https://github.com/jquery/qunit/tree/6ca3721222109997540bd6d9ccd396902e0ad2f9\"}}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Create or update a file",
    "scope": "repos",
    "id": "createOrUpdateFile",
    "method": "PUT",
    "url": "/repos/{owner}/{repo}/contents/{path}",
    "isDeprecated": false,
    "description": "Creates a new file or updates an existing file in a repository.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/repos/contents/#create-or-update-a-file",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "path",
        "description": "path parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "message",
        "description": "The commit message.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "content",
        "description": "The new file content, using Base64 encoding.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "sha",
        "description": "**Required if you are updating a file**. The blob SHA of the file being replaced.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "branch",
        "description": "The branch name. Default: the repository’s default branch (usually `master`)",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "committer",
        "description": "The person that committed the file. Default: the authenticated user.",
        "in": "BODY",
        "type": "object",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "committer.name",
        "description": "The name of the author or committer of the commit. You'll receive a `422` status code if `name` is omitted.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "committer.email",
        "description": "The email of the author or committer of the commit. You'll receive a `422` status code if `email` is omitted.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "author",
        "description": "The author of the file. Default: The `committer` or the authenticated user if you omit `committer`.",
        "in": "BODY",
        "type": "object",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "author.name",
        "description": "The name of the author or committer of the commit. You'll receive a `422` status code if `name` is omitted.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "author.email",
        "description": "The email of the author or committer of the commit. You'll receive a `422` status code if `email` is omitted.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"content\":{\"name\":\"hello.txt\",\"path\":\"notes/hello.txt\",\"sha\":\"a56507ed892d05a37c6d6128c260937ea4d287bd\",\"size\":9,\"url\":\"https://api.github.com/repos/octocat/Hello-World/contents/notes/hello.txt\",\"html_url\":\"https://github.com/octocat/Hello-World/blob/master/notes/hello.txt\",\"git_url\":\"https://api.github.com/repos/octocat/Hello-World/git/blobs/a56507ed892d05a37c6d6128c260937ea4d287bd\",\"download_url\":\"https://raw.githubusercontent.com/octocat/HelloWorld/master/notes/hello.txt\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/octocat/Hello-World/contents/notes/hello.txt\",\"git\":\"https://api.github.com/repos/octocat/Hello-World/git/blobs/a56507ed892d05a37c6d6128c260937ea4d287bd\",\"html\":\"https://github.com/octocat/Hello-World/blob/master/notes/hello.txt\"}},\"commit\":{\"sha\":\"18a43cd8e1e3a79c786e3d808a73d23b6d212b16\",\"node_id\":\"MDY6Q29tbWl0MThhNDNjZDhlMWUzYTc5Yzc4NmUzZDgwOGE3M2QyM2I2ZDIxMmIxNg==\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits/18a43cd8e1e3a79c786e3d808a73d23b6d212b16\",\"html_url\":\"https://github.com/octocat/Hello-World/git/commit/18a43cd8e1e3a79c786e3d808a73d23b6d212b16\",\"author\":{\"date\":\"2014-11-07T22:01:45Z\",\"name\":\"Monalisa Octocat\",\"email\":\"octocat@github.com\"},\"committer\":{\"date\":\"2014-11-07T22:01:45Z\",\"name\":\"Monalisa Octocat\",\"email\":\"octocat@github.com\"},\"message\":\"my commit message\",\"tree\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/git/trees/9a21f8e2018f42ffcf369b24d2cd20bc25c9e66f\",\"sha\":\"9a21f8e2018f42ffcf369b24d2cd20bc25c9e66f\"},\"parents\":[{\"url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits/da5a433788da5c255edad7979b328b67d79f53f6\",\"html_url\":\"https://github.com/octocat/Hello-World/git/commit/da5a433788da5c255edad7979b328b67d79f53f6\",\"sha\":\"da5a433788da5c255edad7979b328b67d79f53f6\"}],\"verification\":{\"verified\":false,\"reason\":\"unsigned\",\"signature\":null,\"payload\":null}}}"
          }
        ]
      },
      {
        "code": 201,
        "description": "response",
        "examples": [
          {
            "data": "{\"content\":{\"name\":\"hello.txt\",\"path\":\"notes/hello.txt\",\"sha\":\"95b966ae1c166bd92f8ae7d1c313e738c731dfc3\",\"size\":9,\"url\":\"https://api.github.com/repos/octocat/Hello-World/contents/notes/hello.txt\",\"html_url\":\"https://github.com/octocat/Hello-World/blob/master/notes/hello.txt\",\"git_url\":\"https://api.github.com/repos/octocat/Hello-World/git/blobs/95b966ae1c166bd92f8ae7d1c313e738c731dfc3\",\"download_url\":\"https://raw.githubusercontent.com/octocat/HelloWorld/master/notes/hello.txt\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/octocat/Hello-World/contents/notes/hello.txt\",\"git\":\"https://api.github.com/repos/octocat/Hello-World/git/blobs/95b966ae1c166bd92f8ae7d1c313e738c731dfc3\",\"html\":\"https://github.com/octocat/Hello-World/blob/master/notes/hello.txt\"}},\"commit\":{\"sha\":\"7638417db6d59f3c431d3e1f261cc637155684cd\",\"node_id\":\"MDY6Q29tbWl0NzYzODQxN2RiNmQ1OWYzYzQzMWQzZTFmMjYxY2M2MzcxNTU2ODRjZA==\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits/7638417db6d59f3c431d3e1f261cc637155684cd\",\"html_url\":\"https://github.com/octocat/Hello-World/git/commit/7638417db6d59f3c431d3e1f261cc637155684cd\",\"author\":{\"date\":\"2014-11-07T22:01:45Z\",\"name\":\"Monalisa Octocat\",\"email\":\"octocat@github.com\"},\"committer\":{\"date\":\"2014-11-07T22:01:45Z\",\"name\":\"Monalisa Octocat\",\"email\":\"octocat@github.com\"},\"message\":\"my commit message\",\"tree\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/git/trees/691272480426f78a0138979dd3ce63b77f706feb\",\"sha\":\"691272480426f78a0138979dd3ce63b77f706feb\"},\"parents\":[{\"url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits/1acc419d4d6a9ce985db7be48c6349a0475975b5\",\"html_url\":\"https://github.com/octocat/Hello-World/git/commit/1acc419d4d6a9ce985db7be48c6349a0475975b5\",\"sha\":\"1acc419d4d6a9ce985db7be48c6349a0475975b5\"}],\"verification\":{\"verified\":false,\"reason\":\"unsigned\",\"signature\":null,\"payload\":null}}}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Create or update a file",
    "scope": "repos",
    "id": "createFile",
    "method": "PUT",
    "url": "/repos/{owner}/{repo}/contents/{path}",
    "isDeprecated": false,
    "description": "Creates a new file or updates an existing file in a repository.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/repos/contents/#create-or-update-a-file",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "path",
        "description": "path parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "message",
        "description": "The commit message.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "content",
        "description": "The new file content, using Base64 encoding.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "sha",
        "description": "**Required if you are updating a file**. The blob SHA of the file being replaced.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "branch",
        "description": "The branch name. Default: the repository’s default branch (usually `master`)",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "committer",
        "description": "The person that committed the file. Default: the authenticated user.",
        "in": "BODY",
        "type": "object",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "committer.name",
        "description": "The name of the author or committer of the commit. You'll receive a `422` status code if `name` is omitted.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "committer.email",
        "description": "The email of the author or committer of the commit. You'll receive a `422` status code if `email` is omitted.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "author",
        "description": "The author of the file. Default: The `committer` or the authenticated user if you omit `committer`.",
        "in": "BODY",
        "type": "object",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "author.name",
        "description": "The name of the author or committer of the commit. You'll receive a `422` status code if `name` is omitted.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "author.email",
        "description": "The email of the author or committer of the commit. You'll receive a `422` status code if `email` is omitted.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"content\":{\"name\":\"hello.txt\",\"path\":\"notes/hello.txt\",\"sha\":\"a56507ed892d05a37c6d6128c260937ea4d287bd\",\"size\":9,\"url\":\"https://api.github.com/repos/octocat/Hello-World/contents/notes/hello.txt\",\"html_url\":\"https://github.com/octocat/Hello-World/blob/master/notes/hello.txt\",\"git_url\":\"https://api.github.com/repos/octocat/Hello-World/git/blobs/a56507ed892d05a37c6d6128c260937ea4d287bd\",\"download_url\":\"https://raw.githubusercontent.com/octocat/HelloWorld/master/notes/hello.txt\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/octocat/Hello-World/contents/notes/hello.txt\",\"git\":\"https://api.github.com/repos/octocat/Hello-World/git/blobs/a56507ed892d05a37c6d6128c260937ea4d287bd\",\"html\":\"https://github.com/octocat/Hello-World/blob/master/notes/hello.txt\"}},\"commit\":{\"sha\":\"18a43cd8e1e3a79c786e3d808a73d23b6d212b16\",\"node_id\":\"MDY6Q29tbWl0MThhNDNjZDhlMWUzYTc5Yzc4NmUzZDgwOGE3M2QyM2I2ZDIxMmIxNg==\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits/18a43cd8e1e3a79c786e3d808a73d23b6d212b16\",\"html_url\":\"https://github.com/octocat/Hello-World/git/commit/18a43cd8e1e3a79c786e3d808a73d23b6d212b16\",\"author\":{\"date\":\"2014-11-07T22:01:45Z\",\"name\":\"Monalisa Octocat\",\"email\":\"octocat@github.com\"},\"committer\":{\"date\":\"2014-11-07T22:01:45Z\",\"name\":\"Monalisa Octocat\",\"email\":\"octocat@github.com\"},\"message\":\"my commit message\",\"tree\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/git/trees/9a21f8e2018f42ffcf369b24d2cd20bc25c9e66f\",\"sha\":\"9a21f8e2018f42ffcf369b24d2cd20bc25c9e66f\"},\"parents\":[{\"url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits/da5a433788da5c255edad7979b328b67d79f53f6\",\"html_url\":\"https://github.com/octocat/Hello-World/git/commit/da5a433788da5c255edad7979b328b67d79f53f6\",\"sha\":\"da5a433788da5c255edad7979b328b67d79f53f6\"}],\"verification\":{\"verified\":false,\"reason\":\"unsigned\",\"signature\":null,\"payload\":null}}}"
          }
        ]
      },
      {
        "code": 201,
        "description": "response",
        "examples": [
          {
            "data": "{\"content\":{\"name\":\"hello.txt\",\"path\":\"notes/hello.txt\",\"sha\":\"95b966ae1c166bd92f8ae7d1c313e738c731dfc3\",\"size\":9,\"url\":\"https://api.github.com/repos/octocat/Hello-World/contents/notes/hello.txt\",\"html_url\":\"https://github.com/octocat/Hello-World/blob/master/notes/hello.txt\",\"git_url\":\"https://api.github.com/repos/octocat/Hello-World/git/blobs/95b966ae1c166bd92f8ae7d1c313e738c731dfc3\",\"download_url\":\"https://raw.githubusercontent.com/octocat/HelloWorld/master/notes/hello.txt\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/octocat/Hello-World/contents/notes/hello.txt\",\"git\":\"https://api.github.com/repos/octocat/Hello-World/git/blobs/95b966ae1c166bd92f8ae7d1c313e738c731dfc3\",\"html\":\"https://github.com/octocat/Hello-World/blob/master/notes/hello.txt\"}},\"commit\":{\"sha\":\"7638417db6d59f3c431d3e1f261cc637155684cd\",\"node_id\":\"MDY6Q29tbWl0NzYzODQxN2RiNmQ1OWYzYzQzMWQzZTFmMjYxY2M2MzcxNTU2ODRjZA==\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits/7638417db6d59f3c431d3e1f261cc637155684cd\",\"html_url\":\"https://github.com/octocat/Hello-World/git/commit/7638417db6d59f3c431d3e1f261cc637155684cd\",\"author\":{\"date\":\"2014-11-07T22:01:45Z\",\"name\":\"Monalisa Octocat\",\"email\":\"octocat@github.com\"},\"committer\":{\"date\":\"2014-11-07T22:01:45Z\",\"name\":\"Monalisa Octocat\",\"email\":\"octocat@github.com\"},\"message\":\"my commit message\",\"tree\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/git/trees/691272480426f78a0138979dd3ce63b77f706feb\",\"sha\":\"691272480426f78a0138979dd3ce63b77f706feb\"},\"parents\":[{\"url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits/1acc419d4d6a9ce985db7be48c6349a0475975b5\",\"html_url\":\"https://github.com/octocat/Hello-World/git/commit/1acc419d4d6a9ce985db7be48c6349a0475975b5\",\"sha\":\"1acc419d4d6a9ce985db7be48c6349a0475975b5\"}],\"verification\":{\"verified\":false,\"reason\":\"unsigned\",\"signature\":null,\"payload\":null}}}"
          }
        ]
      }
    ],
    "renamed": {
      "before": { "scope": "repos", "id": "createFile" },
      "after": { "scope": "repos", "id": "createOrUpdateFile" },
      "date": "2019-06-07",
      "note": "\"Create a file\" replaced by \"Create or update a file\""
    }
  },
  {
    "name": "Create or update a file",
    "scope": "repos",
    "id": "updateFile",
    "method": "PUT",
    "url": "/repos/{owner}/{repo}/contents/{path}",
    "isDeprecated": false,
    "description": "Creates a new file or updates an existing file in a repository.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/repos/contents/#create-or-update-a-file",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "path",
        "description": "path parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "message",
        "description": "The commit message.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "content",
        "description": "The new file content, using Base64 encoding.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "sha",
        "description": "**Required if you are updating a file**. The blob SHA of the file being replaced.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "branch",
        "description": "The branch name. Default: the repository’s default branch (usually `master`)",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "committer",
        "description": "The person that committed the file. Default: the authenticated user.",
        "in": "BODY",
        "type": "object",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "committer.name",
        "description": "The name of the author or committer of the commit. You'll receive a `422` status code if `name` is omitted.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "committer.email",
        "description": "The email of the author or committer of the commit. You'll receive a `422` status code if `email` is omitted.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "author",
        "description": "The author of the file. Default: The `committer` or the authenticated user if you omit `committer`.",
        "in": "BODY",
        "type": "object",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "author.name",
        "description": "The name of the author or committer of the commit. You'll receive a `422` status code if `name` is omitted.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "author.email",
        "description": "The email of the author or committer of the commit. You'll receive a `422` status code if `email` is omitted.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"content\":{\"name\":\"hello.txt\",\"path\":\"notes/hello.txt\",\"sha\":\"a56507ed892d05a37c6d6128c260937ea4d287bd\",\"size\":9,\"url\":\"https://api.github.com/repos/octocat/Hello-World/contents/notes/hello.txt\",\"html_url\":\"https://github.com/octocat/Hello-World/blob/master/notes/hello.txt\",\"git_url\":\"https://api.github.com/repos/octocat/Hello-World/git/blobs/a56507ed892d05a37c6d6128c260937ea4d287bd\",\"download_url\":\"https://raw.githubusercontent.com/octocat/HelloWorld/master/notes/hello.txt\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/octocat/Hello-World/contents/notes/hello.txt\",\"git\":\"https://api.github.com/repos/octocat/Hello-World/git/blobs/a56507ed892d05a37c6d6128c260937ea4d287bd\",\"html\":\"https://github.com/octocat/Hello-World/blob/master/notes/hello.txt\"}},\"commit\":{\"sha\":\"18a43cd8e1e3a79c786e3d808a73d23b6d212b16\",\"node_id\":\"MDY6Q29tbWl0MThhNDNjZDhlMWUzYTc5Yzc4NmUzZDgwOGE3M2QyM2I2ZDIxMmIxNg==\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits/18a43cd8e1e3a79c786e3d808a73d23b6d212b16\",\"html_url\":\"https://github.com/octocat/Hello-World/git/commit/18a43cd8e1e3a79c786e3d808a73d23b6d212b16\",\"author\":{\"date\":\"2014-11-07T22:01:45Z\",\"name\":\"Monalisa Octocat\",\"email\":\"octocat@github.com\"},\"committer\":{\"date\":\"2014-11-07T22:01:45Z\",\"name\":\"Monalisa Octocat\",\"email\":\"octocat@github.com\"},\"message\":\"my commit message\",\"tree\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/git/trees/9a21f8e2018f42ffcf369b24d2cd20bc25c9e66f\",\"sha\":\"9a21f8e2018f42ffcf369b24d2cd20bc25c9e66f\"},\"parents\":[{\"url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits/da5a433788da5c255edad7979b328b67d79f53f6\",\"html_url\":\"https://github.com/octocat/Hello-World/git/commit/da5a433788da5c255edad7979b328b67d79f53f6\",\"sha\":\"da5a433788da5c255edad7979b328b67d79f53f6\"}],\"verification\":{\"verified\":false,\"reason\":\"unsigned\",\"signature\":null,\"payload\":null}}}"
          }
        ]
      },
      {
        "code": 201,
        "description": "response",
        "examples": [
          {
            "data": "{\"content\":{\"name\":\"hello.txt\",\"path\":\"notes/hello.txt\",\"sha\":\"95b966ae1c166bd92f8ae7d1c313e738c731dfc3\",\"size\":9,\"url\":\"https://api.github.com/repos/octocat/Hello-World/contents/notes/hello.txt\",\"html_url\":\"https://github.com/octocat/Hello-World/blob/master/notes/hello.txt\",\"git_url\":\"https://api.github.com/repos/octocat/Hello-World/git/blobs/95b966ae1c166bd92f8ae7d1c313e738c731dfc3\",\"download_url\":\"https://raw.githubusercontent.com/octocat/HelloWorld/master/notes/hello.txt\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/octocat/Hello-World/contents/notes/hello.txt\",\"git\":\"https://api.github.com/repos/octocat/Hello-World/git/blobs/95b966ae1c166bd92f8ae7d1c313e738c731dfc3\",\"html\":\"https://github.com/octocat/Hello-World/blob/master/notes/hello.txt\"}},\"commit\":{\"sha\":\"7638417db6d59f3c431d3e1f261cc637155684cd\",\"node_id\":\"MDY6Q29tbWl0NzYzODQxN2RiNmQ1OWYzYzQzMWQzZTFmMjYxY2M2MzcxNTU2ODRjZA==\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits/7638417db6d59f3c431d3e1f261cc637155684cd\",\"html_url\":\"https://github.com/octocat/Hello-World/git/commit/7638417db6d59f3c431d3e1f261cc637155684cd\",\"author\":{\"date\":\"2014-11-07T22:01:45Z\",\"name\":\"Monalisa Octocat\",\"email\":\"octocat@github.com\"},\"committer\":{\"date\":\"2014-11-07T22:01:45Z\",\"name\":\"Monalisa Octocat\",\"email\":\"octocat@github.com\"},\"message\":\"my commit message\",\"tree\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/git/trees/691272480426f78a0138979dd3ce63b77f706feb\",\"sha\":\"691272480426f78a0138979dd3ce63b77f706feb\"},\"parents\":[{\"url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits/1acc419d4d6a9ce985db7be48c6349a0475975b5\",\"html_url\":\"https://github.com/octocat/Hello-World/git/commit/1acc419d4d6a9ce985db7be48c6349a0475975b5\",\"sha\":\"1acc419d4d6a9ce985db7be48c6349a0475975b5\"}],\"verification\":{\"verified\":false,\"reason\":\"unsigned\",\"signature\":null,\"payload\":null}}}"
          }
        ]
      }
    ],
    "renamed": {
      "before": { "scope": "repos", "id": "updateFile" },
      "after": { "scope": "repos", "id": "createOrUpdateFile" },
      "date": "2019-06-07",
      "note": "\"Update a file\" replaced by \"Create or update a file\""
    }
  },
  {
    "name": "Delete a file",
    "scope": "repos",
    "id": "deleteFile",
    "method": "DELETE",
    "url": "/repos/{owner}/{repo}/contents/{path}",
    "isDeprecated": false,
    "description": "Deletes a file in a repository.\n\nYou can provide an additional `committer` parameter, which is an object containing information about the committer. Or, you can provide an `author` parameter, which is an object containing information about the author.\n\nThe `author` section is optional and is filled in with the `committer` information if omitted. If the `committer` information is omitted, the authenticated user's information is used.\n\nYou must provide values for both `name` and `email`, whether you choose to use `author` or `committer`. Otherwise, you'll receive a `422` status code.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/repos/contents/#delete-a-file",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "path",
        "description": "path parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "message",
        "description": "The commit message.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "sha",
        "description": "The blob SHA of the file being replaced.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "branch",
        "description": "The branch name. Default: the repository’s default branch (usually `master`)",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "committer",
        "description": "object containing information about the committer.",
        "in": "BODY",
        "type": "object",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "committer.name",
        "description": "The name of the author (or committer) of the commit",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "committer.email",
        "description": "The email of the author (or committer) of the commit",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "author",
        "description": "object containing information about the author.",
        "in": "BODY",
        "type": "object",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "author.name",
        "description": "The name of the author (or committer) of the commit",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "author.email",
        "description": "The email of the author (or committer) of the commit",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"content\":null,\"commit\":{\"sha\":\"7638417db6d59f3c431d3e1f261cc637155684cd\",\"node_id\":\"MDY6Q29tbWl0NzYzODQxN2RiNmQ1OWYzYzQzMWQzZTFmMjYxY2M2MzcxNTU2ODRjZA==\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits/7638417db6d59f3c431d3e1f261cc637155684cd\",\"html_url\":\"https://github.com/octocat/Hello-World/git/commit/7638417db6d59f3c431d3e1f261cc637155684cd\",\"author\":{\"date\":\"2014-11-07T22:01:45Z\",\"name\":\"Monalisa Octocat\",\"email\":\"octocat@github.com\"},\"committer\":{\"date\":\"2014-11-07T22:01:45Z\",\"name\":\"Monalisa Octocat\",\"email\":\"octocat@github.com\"},\"message\":\"my commit message\",\"tree\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/git/trees/691272480426f78a0138979dd3ce63b77f706feb\",\"sha\":\"691272480426f78a0138979dd3ce63b77f706feb\"},\"parents\":[{\"url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits/1acc419d4d6a9ce985db7be48c6349a0475975b5\",\"html_url\":\"https://github.com/octocat/Hello-World/git/commit/1acc419d4d6a9ce985db7be48c6349a0475975b5\",\"sha\":\"1acc419d4d6a9ce985db7be48c6349a0475975b5\"}],\"verification\":{\"verified\":false,\"reason\":\"unsigned\",\"signature\":null,\"payload\":null}}}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "List contributors",
    "scope": "repos",
    "id": "listContributors",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/contributors",
    "isDeprecated": false,
    "description": "Lists contributors to the specified repository and sorts them by the number of commits per contributor in descending order. This endpoint may return information that is a few hours old because the GitHub REST API v3 caches contributor data to improve performance.\n\nGitHub identifies contributors by author email address. This endpoint groups contribution counts by GitHub user, which includes all associated email addresses. To improve performance, only the first 500 author email addresses in the repository link to GitHub users. The rest will appear as anonymous contributors without associated GitHub user information.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/repos/#list-contributors",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "anon",
        "description": "Set to `1` or `true` to include anonymous contributors in results.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "Response if repository contains content",
        "examples": [
          {
            "data": "[{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false,\"contributions\":32}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "List deployments",
    "scope": "repos",
    "id": "listDeployments",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/deployments",
    "isDeprecated": false,
    "description": "Simple filtering of deployments is available via query parameters:",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/repos/deployments/#list-deployments",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "sha",
        "description": "The SHA recorded at creation time.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "ref",
        "description": "The name of the ref. This can be a branch, tag, or SHA.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "task",
        "description": "The name of the task for the deployment (e.g., `deploy` or `deploy:migrations`).",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "environment",
        "description": "The name of the environment that was deployed to (e.g., `staging` or `production`).",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"url\":\"https://api.github.com/repos/octocat/example/deployments/1\",\"id\":1,\"node_id\":\"MDEwOkRlcGxveW1lbnQx\",\"sha\":\"a84d88e7554fc1fa21bcbc4efae3c782a70d2b9d\",\"ref\":\"topic-branch\",\"task\":\"deploy\",\"payload\":{\"deploy\":\"migrate\"},\"original_environment\":\"staging\",\"environment\":\"production\",\"description\":\"Deploy request from hubot\",\"creator\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"created_at\":\"2012-07-20T01:19:13Z\",\"updated_at\":\"2012-07-20T01:19:13Z\",\"statuses_url\":\"https://api.github.com/repos/octocat/example/deployments/1/statuses\",\"repository_url\":\"https://api.github.com/repos/octocat/example\",\"transient_environment\":false,\"production_environment\":true}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Create a deployment",
    "scope": "repos",
    "id": "createDeployment",
    "method": "POST",
    "url": "/repos/{owner}/{repo}/deployments",
    "isDeprecated": false,
    "description": "Deployments offer a few configurable parameters with sane defaults.\n\nThe `ref` parameter can be any named branch, tag, or SHA. At GitHub we often deploy branches and verify them before we merge a pull request.\n\nThe `environment` parameter allows deployments to be issued to different runtime environments. Teams often have multiple environments for verifying their applications, such as `production`, `staging`, and `qa`. This parameter makes it easier to track which environments have requested deployments. The default environment is `production`.\n\nThe `auto_merge` parameter is used to ensure that the requested ref is not behind the repository's default branch. If the ref _is_ behind the default branch for the repository, we will attempt to merge it for you. If the merge succeeds, the API will return a successful merge commit. If merge conflicts prevent the merge from succeeding, the API will return a failure response.\n\nBy default, [commit statuses](https://developer.github.com/enterprise/2.17/v3/repos/statuses) for every submitted context must be in a `success` state. The `required_contexts` parameter allows you to specify a subset of contexts that must be `success`, or to specify contexts that have not yet been submitted. You are not required to use commit statuses to deploy. If you do not require any contexts or create any commit statuses, the deployment will always succeed.\n\nThe `payload` parameter is available for any extra information that a deployment system might need. It is a JSON text field that will be passed on when a deployment event is dispatched.\n\nThe `task` parameter is used by the deployment system to allow different execution paths. In the web world this might be `deploy:migrations` to run schema changes on the system. In the compiled world this could be a flag to compile an application with debugging enabled.\n\nUsers with `repo` or `repo_deployment` scopes can create a deployment for a given ref:\n\nA simple example putting the user and room into the payload to notify back to chat networks.\n\nA more advanced example specifying required commit statuses and bypassing auto-merging.\n\nYou will see this response when GitHub automatically merges the base branch into the topic branch instead of creating a deployment. This auto-merge happens when:\n\n*   Auto-merge option is enabled in the repository\n*   Topic branch does not include the latest changes on the base branch, which is `master`in the response example\n*   There are no merge conflicts\n\nIf there are no new commits in the base branch, a new request to create a deployment should give a successful response.\n\nThis error happens when the `auto_merge` option is enabled and when the default branch (in this case `master`), can't be merged into the branch that's being deployed (in this case `topic-branch`), due to merge conflicts.\n\nThis error happens when the `required_contexts` parameter indicates that one or more contexts need to have a `success` status for the commit to be deployed, but one or more of the required contexts do not have a state of `success`.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/repos/deployments/#create-a-deployment",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "ref",
        "description": "The ref to deploy. This can be a branch, tag, or SHA.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "task",
        "description": "Specifies a task to execute (e.g., `deploy` or `deploy:migrations`).",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "auto_merge",
        "description": "Attempts to automatically merge the default branch into the requested ref, if it's behind the default branch.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "required_contexts",
        "description": "The [status](https://developer.github.com/enterprise/2.17/v3/repos/statuses/) contexts to verify against commit status checks. If you omit this parameter, GitHub verifies all unique contexts before creating a deployment. To bypass checking entirely, pass an empty array. Defaults to all unique contexts.",
        "in": "BODY",
        "type": "string[]",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "payload",
        "description": "JSON payload with extra information about the deployment.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "environment",
        "description": "Name for the target deployment environment (e.g., `production`, `staging`, `qa`).",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "description",
        "description": "Short description of the deployment.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "transient_environment",
        "description": "Specifies if the given environment is specific to the deployment and will no longer exist at some point in the future.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "production_environment",
        "description": "Specifies if the given environment is one that end-users directly interact with. Default: `true` when `environment` is `production` and `false` otherwise.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 201,
        "description": "response",
        "examples": [
          {
            "data": "{\"url\":\"https://api.github.com/repos/octocat/example/deployments/1\",\"id\":1,\"node_id\":\"MDEwOkRlcGxveW1lbnQx\",\"sha\":\"a84d88e7554fc1fa21bcbc4efae3c782a70d2b9d\",\"ref\":\"topic-branch\",\"task\":\"deploy\",\"payload\":{\"deploy\":\"migrate\"},\"original_environment\":\"staging\",\"environment\":\"production\",\"description\":\"Deploy request from hubot\",\"creator\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"created_at\":\"2012-07-20T01:19:13Z\",\"updated_at\":\"2012-07-20T01:19:13Z\",\"statuses_url\":\"https://api.github.com/repos/octocat/example/deployments/1/statuses\",\"repository_url\":\"https://api.github.com/repos/octocat/example\",\"transient_environment\":false,\"production_environment\":true}"
          },
          {
            "data": "{\"url\":\"https://api.github.com/repos/octocat/example/deployments/1\",\"id\":1,\"node_id\":\"MDEwOkRlcGxveW1lbnQx\",\"sha\":\"a84d88e7554fc1fa21bcbc4efae3c782a70d2b9d\",\"ref\":\"topic-branch\",\"task\":\"deploy\",\"payload\":{\"deploy\":\"migrate\"},\"original_environment\":\"staging\",\"environment\":\"production\",\"description\":\"Deploy request from hubot\",\"creator\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"created_at\":\"2012-07-20T01:19:13Z\",\"updated_at\":\"2012-07-20T01:19:13Z\",\"statuses_url\":\"https://api.github.com/repos/octocat/example/deployments/1/statuses\",\"repository_url\":\"https://api.github.com/repos/octocat/example\",\"transient_environment\":false,\"production_environment\":true}"
          }
        ]
      },
      {
        "code": 202,
        "description": "Merged branch response",
        "examples": [
          {
            "data": "{\"message\":\"Auto-merged master into topic-branch on deployment.\"}"
          }
        ]
      },
      {
        "code": 409,
        "description": "response",
        "examples": [
          {
            "data": "{\"message\":\"Conflict merging master into topic-branch\"}"
          },
          {
            "data": "{\"message\":\"Conflict: Commit status checks failed for topic-branch.\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Get a single deployment",
    "scope": "repos",
    "id": "getDeployment",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/deployments/{deployment_id}",
    "isDeprecated": false,
    "description": "",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/repos/deployments/#get-a-single-deployment",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "deployment_id",
        "description": "deployment_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"url\":\"https://api.github.com/repos/octocat/example/deployments/1\",\"id\":1,\"node_id\":\"MDEwOkRlcGxveW1lbnQx\",\"sha\":\"a84d88e7554fc1fa21bcbc4efae3c782a70d2b9d\",\"ref\":\"topic-branch\",\"task\":\"deploy\",\"payload\":{\"deploy\":\"migrate\"},\"original_environment\":\"staging\",\"environment\":\"production\",\"description\":\"Deploy request from hubot\",\"creator\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"created_at\":\"2012-07-20T01:19:13Z\",\"updated_at\":\"2012-07-20T01:19:13Z\",\"statuses_url\":\"https://api.github.com/repos/octocat/example/deployments/1/statuses\",\"repository_url\":\"https://api.github.com/repos/octocat/example\",\"transient_environment\":false,\"production_environment\":true}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "List deployment statuses",
    "scope": "repos",
    "id": "listDeploymentStatuses",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/deployments/{deployment_id}/statuses",
    "isDeprecated": false,
    "description": "Users with pull access can view deployment statuses for a deployment:",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/repos/deployments/#list-deployment-statuses",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "deployment_id",
        "description": "deployment_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"url\":\"https://api.github.com/repos/octocat/example/deployments/42/statuses/1\",\"id\":1,\"node_id\":\"MDE2OkRlcGxveW1lbnRTdGF0dXMx\",\"state\":\"success\",\"creator\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"description\":\"Deployment finished successfully.\",\"environment\":\"production\",\"target_url\":\"https://example.com/deployment/42/output\",\"created_at\":\"2012-07-20T01:19:13Z\",\"updated_at\":\"2012-07-20T01:19:13Z\",\"deployment_url\":\"https://api.github.com/repos/octocat/example/deployments/42\",\"repository_url\":\"https://api.github.com/repos/octocat/example\",\"environment_url\":\"\",\"log_url\":\"https://example.com/deployment/42/output\"}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Create a deployment status",
    "scope": "repos",
    "id": "createDeploymentStatus",
    "method": "POST",
    "url": "/repos/{owner}/{repo}/deployments/{deployment_id}/statuses",
    "isDeprecated": false,
    "description": "Users with `push` access can create deployment statuses for a given deployment.\n\nGitHub Apps require `read & write` access to \"Deployments\" and `read-only` access to \"Repo contents\" (for private repos). OAuth Apps require the `repo_deployment` scope.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/repos/deployments/#create-a-deployment-status",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "deployment_id",
        "description": "deployment_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "state",
        "description": "The state of the status. Can be one of `error`, `failure`, `inactive`, `in_progress`, `queued` `pending`, or `success`. **Note:** To use the `inactive` state, you must provide the [`application/vnd.github.ant-man-preview+json`](https://developer.github.com/enterprise/2.17/v3/previews/#enhanced-deployments) custom media type. To use the `in_progress` and `queued` states, you must provide the [`application/vnd.github.flash-preview+json`](https://developer.github.com/enterprise/2.17/v3/previews/#deployment-statuses) custom media type.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": [
          "error",
          "failure",
          "inactive",
          "in_progress",
          "queued",
          "pending",
          "success"
        ],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "target_url",
        "description": "The target URL to associate with this status. This URL should contain output to keep the user updated while the task is running or serve as historical information for what happened in the deployment. **Note:** It's recommended to use the `log_url` parameter, which replaces `target_url`.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "log_url",
        "description": "The full URL of the deployment's output. This parameter replaces `target_url`. We will continue to accept `target_url` to support legacy uses, but we recommend replacing `target_url` with `log_url`. Setting `log_url` will automatically set `target_url` to the same value.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "description",
        "description": "A short description of the status. The maximum description length is 140 characters.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "environment",
        "description": "Name for the target deployment environment, which can be changed when setting a deploy status. For example, `production`, `staging`, or `qa`. **Note:** This parameter requires you to use the [`application/vnd.github.flash-preview+json`](https://developer.github.com/enterprise/2.17/v3/previews/#deployment-statuses) custom media type.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": ["production", "staging", "qa"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "environment_url",
        "description": "Sets the URL for accessing your environment.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "auto_inactive",
        "description": "Adds a new `inactive` status to all prior non-transient, non-production environment deployments with the same repository and `environment` name as the created status's deployment. An `inactive` status is only added to deployments that had a `success` state. Default: `true`  \n**Note:** To add an `inactive` status to `production` environments, you must use the [`application/vnd.github.flash-preview+json`](https://developer.github.com/enterprise/2.17/v3/previews/#deployment-statuses) custom media type. **Note:** To add an `inactive` status to `production` environments, you must use the [`application/vnd.github.flash-preview+json`](https://developer.github.com/enterprise/2.17/v3/previews/#deployment-statuses) custom media type.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 201,
        "description": "response",
        "examples": [
          {
            "data": "{\"url\":\"https://api.github.com/repos/octocat/example/deployments/42/statuses/1\",\"id\":1,\"node_id\":\"MDE2OkRlcGxveW1lbnRTdGF0dXMx\",\"state\":\"success\",\"creator\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"description\":\"Deployment finished successfully.\",\"environment\":\"production\",\"target_url\":\"https://example.com/deployment/42/output\",\"created_at\":\"2012-07-20T01:19:13Z\",\"updated_at\":\"2012-07-20T01:19:13Z\",\"deployment_url\":\"https://api.github.com/repos/octocat/example/deployments/42\",\"repository_url\":\"https://api.github.com/repos/octocat/example\",\"environment_url\":\"\",\"log_url\":\"https://example.com/deployment/42/output\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Get a single deployment status",
    "scope": "repos",
    "id": "getDeploymentStatus",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/deployments/{deployment_id}/statuses/{status_id}",
    "isDeprecated": false,
    "description": "Users with pull access can view a deployment status for a deployment:",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/repos/deployments/#get-a-single-deployment-status",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "deployment_id",
        "description": "deployment_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "status_id",
        "description": "status_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"url\":\"https://api.github.com/repos/octocat/example/deployments/42/statuses/1\",\"id\":1,\"node_id\":\"MDE2OkRlcGxveW1lbnRTdGF0dXMx\",\"state\":\"success\",\"creator\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"description\":\"Deployment finished successfully.\",\"environment\":\"production\",\"target_url\":\"https://example.com/deployment/42/output\",\"created_at\":\"2012-07-20T01:19:13Z\",\"updated_at\":\"2012-07-20T01:19:13Z\",\"deployment_url\":\"https://api.github.com/repos/octocat/example/deployments/42\",\"repository_url\":\"https://api.github.com/repos/octocat/example\",\"environment_url\":\"\",\"log_url\":\"https://example.com/deployment/42/output\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "List downloads for a repository",
    "scope": "repos",
    "id": "listDownloads",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/downloads",
    "isDeprecated": false,
    "description": "",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/repos/downloads/#list-downloads-for-a-repository",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"url\":\"https://api.github.com/repos/octocat/Hello-World/downloads/1\",\"html_url\":\"https://github.com/repos/octocat/Hello-World/downloads/new_file.jpg\",\"id\":1,\"name\":\"new_file.jpg\",\"description\":\"Description of your download\",\"size\":1024,\"download_count\":40,\"content_type\":\".jpg\"}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Get a single download",
    "scope": "repos",
    "id": "getDownload",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/downloads/{download_id}",
    "isDeprecated": false,
    "description": "",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/repos/downloads/#get-a-single-download",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "download_id",
        "description": "download_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"url\":\"https://api.github.com/repos/octocat/Hello-World/downloads/1\",\"html_url\":\"https://github.com/repos/octocat/Hello-World/downloads/new_file.jpg\",\"id\":1,\"name\":\"new_file.jpg\",\"description\":\"Description of your download\",\"size\":1024,\"download_count\":40,\"content_type\":\".jpg\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Delete a download",
    "scope": "repos",
    "id": "deleteDownload",
    "method": "DELETE",
    "url": "/repos/{owner}/{repo}/downloads/{download_id}",
    "isDeprecated": false,
    "description": "",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/repos/downloads/#delete-a-download",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "download_id",
        "description": "download_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [],
    "renamed": null
  },
  {
    "name": "List repository events",
    "scope": "activity",
    "id": "listRepoEvents",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/events",
    "isDeprecated": false,
    "description": "",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/activity/events/#list-repository-events",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [],
    "renamed": null
  },
  {
    "name": "List forks",
    "scope": "repos",
    "id": "listForks",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/forks",
    "isDeprecated": false,
    "description": "",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/repos/forks/#list-forks",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "sort",
        "description": "The sort order. Can be either `newest`, `oldest`, or `stargazers`.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["newest", "oldest", "stargazers"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"id\":1296269,\"node_id\":\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\"name\":\"Hello-World\",\"full_name\":\"octocat/Hello-World\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"private\":false,\"html_url\":\"https://github.com/octocat/Hello-World\",\"description\":\"This your first repo!\",\"fork\":true,\"url\":\"https://api.github.com/repos/octocat/Hello-World\",\"archive_url\":\"http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\"assignees_url\":\"http://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\"blobs_url\":\"http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\"branches_url\":\"http://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\"collaborators_url\":\"http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\"comments_url\":\"http://api.github.com/repos/octocat/Hello-World/comments{/number}\",\"commits_url\":\"http://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\"compare_url\":\"http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\"contents_url\":\"http://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\"contributors_url\":\"http://api.github.com/repos/octocat/Hello-World/contributors\",\"deployments_url\":\"http://api.github.com/repos/octocat/Hello-World/deployments\",\"downloads_url\":\"http://api.github.com/repos/octocat/Hello-World/downloads\",\"events_url\":\"http://api.github.com/repos/octocat/Hello-World/events\",\"forks_url\":\"http://api.github.com/repos/octocat/Hello-World/forks\",\"git_commits_url\":\"http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\"git_refs_url\":\"http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\"git_tags_url\":\"http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\"git_url\":\"git:github.com/octocat/Hello-World.git\",\"issue_comment_url\":\"http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\"issue_events_url\":\"http://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\"issues_url\":\"http://api.github.com/repos/octocat/Hello-World/issues{/number}\",\"keys_url\":\"http://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\"labels_url\":\"http://api.github.com/repos/octocat/Hello-World/labels{/name}\",\"languages_url\":\"http://api.github.com/repos/octocat/Hello-World/languages\",\"merges_url\":\"http://api.github.com/repos/octocat/Hello-World/merges\",\"milestones_url\":\"http://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\"notifications_url\":\"http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\"pulls_url\":\"http://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\"releases_url\":\"http://api.github.com/repos/octocat/Hello-World/releases{/id}\",\"ssh_url\":\"git@github.com:octocat/Hello-World.git\",\"stargazers_url\":\"http://api.github.com/repos/octocat/Hello-World/stargazers\",\"statuses_url\":\"http://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\"subscribers_url\":\"http://api.github.com/repos/octocat/Hello-World/subscribers\",\"subscription_url\":\"http://api.github.com/repos/octocat/Hello-World/subscription\",\"tags_url\":\"http://api.github.com/repos/octocat/Hello-World/tags\",\"teams_url\":\"http://api.github.com/repos/octocat/Hello-World/teams\",\"trees_url\":\"http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\"clone_url\":\"https://github.com/octocat/Hello-World.git\",\"mirror_url\":\"git:git.example.com/octocat/Hello-World\",\"hooks_url\":\"http://api.github.com/repos/octocat/Hello-World/hooks\",\"svn_url\":\"https://svn.github.com/octocat/Hello-World\",\"homepage\":\"https://github.com\",\"language\":null,\"forks_count\":9,\"stargazers_count\":80,\"watchers_count\":80,\"size\":108,\"default_branch\":\"master\",\"open_issues_count\":0,\"topics\":[\"octocat\",\"atom\",\"electron\",\"api\"],\"has_issues\":true,\"has_projects\":true,\"has_wiki\":true,\"has_pages\":false,\"has_downloads\":true,\"archived\":false,\"disabled\":false,\"pushed_at\":\"2011-01-26T19:06:43Z\",\"created_at\":\"2011-01-26T19:01:12Z\",\"updated_at\":\"2011-01-26T19:14:43Z\",\"permissions\":{\"admin\":false,\"push\":false,\"pull\":true},\"subscribers_count\":42,\"network_count\":0,\"anonymous_access_enabled\":false,\"license\":{\"key\":\"mit\",\"name\":\"MIT License\",\"spdx_id\":\"MIT\",\"url\":\"https://api.github.com/licenses/mit\",\"node_id\":\"MDc6TGljZW5zZW1pdA==\"}}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Create a fork",
    "scope": "repos",
    "id": "createFork",
    "method": "POST",
    "url": "/repos/{owner}/{repo}/forks",
    "isDeprecated": false,
    "description": "Create a fork for the authenticated user.\n\n**Note**: Forking a Repository happens asynchronously. You may have to wait a short period of time before you can access the git objects. If this takes longer than 5 minutes, be sure to contact [GitHub Enterprise Support](https://enterprise.github.com/support).",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/repos/forks/#create-a-fork",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "organization",
        "description": "Optional parameter to specify the organization name if forking into an organization.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 202,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":1296269,\"node_id\":\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\"name\":\"Hello-World\",\"full_name\":\"octocat/Hello-World\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"private\":false,\"html_url\":\"https://github.com/octocat/Hello-World\",\"description\":\"This your first repo!\",\"fork\":true,\"url\":\"https://api.github.com/repos/octocat/Hello-World\",\"archive_url\":\"http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\"assignees_url\":\"http://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\"blobs_url\":\"http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\"branches_url\":\"http://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\"collaborators_url\":\"http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\"comments_url\":\"http://api.github.com/repos/octocat/Hello-World/comments{/number}\",\"commits_url\":\"http://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\"compare_url\":\"http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\"contents_url\":\"http://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\"contributors_url\":\"http://api.github.com/repos/octocat/Hello-World/contributors\",\"deployments_url\":\"http://api.github.com/repos/octocat/Hello-World/deployments\",\"downloads_url\":\"http://api.github.com/repos/octocat/Hello-World/downloads\",\"events_url\":\"http://api.github.com/repos/octocat/Hello-World/events\",\"forks_url\":\"http://api.github.com/repos/octocat/Hello-World/forks\",\"git_commits_url\":\"http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\"git_refs_url\":\"http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\"git_tags_url\":\"http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\"git_url\":\"git:github.com/octocat/Hello-World.git\",\"issue_comment_url\":\"http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\"issue_events_url\":\"http://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\"issues_url\":\"http://api.github.com/repos/octocat/Hello-World/issues{/number}\",\"keys_url\":\"http://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\"labels_url\":\"http://api.github.com/repos/octocat/Hello-World/labels{/name}\",\"languages_url\":\"http://api.github.com/repos/octocat/Hello-World/languages\",\"merges_url\":\"http://api.github.com/repos/octocat/Hello-World/merges\",\"milestones_url\":\"http://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\"notifications_url\":\"http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\"pulls_url\":\"http://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\"releases_url\":\"http://api.github.com/repos/octocat/Hello-World/releases{/id}\",\"ssh_url\":\"git@github.com:octocat/Hello-World.git\",\"stargazers_url\":\"http://api.github.com/repos/octocat/Hello-World/stargazers\",\"statuses_url\":\"http://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\"subscribers_url\":\"http://api.github.com/repos/octocat/Hello-World/subscribers\",\"subscription_url\":\"http://api.github.com/repos/octocat/Hello-World/subscription\",\"tags_url\":\"http://api.github.com/repos/octocat/Hello-World/tags\",\"teams_url\":\"http://api.github.com/repos/octocat/Hello-World/teams\",\"trees_url\":\"http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\"clone_url\":\"https://github.com/octocat/Hello-World.git\",\"mirror_url\":\"git:git.example.com/octocat/Hello-World\",\"hooks_url\":\"http://api.github.com/repos/octocat/Hello-World/hooks\",\"svn_url\":\"https://svn.github.com/octocat/Hello-World\",\"homepage\":\"https://github.com\",\"language\":null,\"forks_count\":9,\"stargazers_count\":80,\"watchers_count\":80,\"size\":108,\"default_branch\":\"master\",\"open_issues_count\":0,\"topics\":[\"octocat\",\"atom\",\"electron\",\"api\"],\"has_issues\":true,\"has_projects\":true,\"has_wiki\":true,\"has_pages\":false,\"has_downloads\":true,\"archived\":false,\"disabled\":false,\"pushed_at\":\"2011-01-26T19:06:43Z\",\"created_at\":\"2011-01-26T19:01:12Z\",\"updated_at\":\"2011-01-26T19:14:43Z\",\"permissions\":{\"admin\":false,\"push\":false,\"pull\":true},\"allow_rebase_merge\":true,\"allow_squash_merge\":true,\"allow_merge_commit\":true,\"subscribers_count\":42,\"network_count\":0,\"anonymous_access_enabled\":false}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Create a blob",
    "scope": "git",
    "id": "createBlob",
    "method": "POST",
    "url": "/repos/{owner}/{repo}/git/blobs",
    "isDeprecated": false,
    "description": "",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/git/blobs/#create-a-blob",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "content",
        "description": "The new blob's content.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "encoding",
        "description": "The encoding used for `content`. Currently, `\"utf-8\"` and `\"base64\"` are supported.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 201,
        "description": "response",
        "examples": [
          {
            "data": "{\"url\":\"https://api.github.com/repos/octocat/example/git/blobs/3a0f86fb8db8eea7ccbb9a95f325ddbedfb25e15\",\"sha\":\"3a0f86fb8db8eea7ccbb9a95f325ddbedfb25e15\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Get a blob",
    "scope": "git",
    "id": "getBlob",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/git/blobs/{file_sha}",
    "isDeprecated": false,
    "description": "The `content` in the response will always be Base64 encoded.\n\n_Note_: This API supports blobs up to 100 megabytes in size.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/git/blobs/#get-a-blob",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "file_sha",
        "description": "file_sha parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"content\":\"Q29udGVudCBvZiB0aGUgYmxvYg==\\n\",\"encoding\":\"base64\",\"url\":\"https://api.github.com/repos/octocat/example/git/blobs/3a0f86fb8db8eea7ccbb9a95f325ddbedfb25e15\",\"sha\":\"3a0f86fb8db8eea7ccbb9a95f325ddbedfb25e15\",\"size\":19}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Create a commit",
    "scope": "git",
    "id": "createCommit",
    "method": "POST",
    "url": "/repos/{owner}/{repo}/git/commits",
    "isDeprecated": false,
    "description": "Creates a new Git [commit object](https://git-scm.com/book/en/v1/Git-Internals-Git-Objects#Commit-Objects).\n\nIn this example, the payload of the signature would be:\n\n\n\n**Signature verification object**\n\nThe response will include a `verification` object that describes the result of verifying the commit's signature. The following fields are included in the `verification` object:\n\nThese are the possible values for `reason` in the `verification` object:\n\n| Value                    | Description                                                                                                                       |\n| ------------------------ | --------------------------------------------------------------------------------------------------------------------------------- |\n| `expired_key`            | The key that made the signature is expired.                                                                                       |\n| `not_signing_key`        | The \"signing\" flag is not among the usage flags in the GPG key that made the signature.                                           |\n| `gpgverify_error`        | There was an error communicating with the signature verification service.                                                         |\n| `gpgverify_unavailable`  | The signature verification service is currently unavailable.                                                                      |\n| `unsigned`               | The object does not include a signature.                                                                                          |\n| `unknown_signature_type` | A non-PGP signature was found in the commit.                                                                                      |\n| `no_user`                | No user was associated with the `committer` email address in the commit.                                                          |\n| `unverified_email`       | The `committer` email address in the commit was associated with a user, but the email address is not verified on her/his account. |\n| `bad_email`              | The `committer` email address in the commit is not included in the identities of the PGP key that made the signature.             |\n| `unknown_key`            | The key that made the signature has not been registered with any user's account.                                                  |\n| `malformed_signature`    | There was an error parsing the signature.                                                                                         |\n| `invalid`                | The signature could not be cryptographically verified using the key whose key-id was found in the signature.                      |\n| `valid`                  | None of the above errors applied, so the signature is considered to be verified.                                                  |",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/git/commits/#create-a-commit",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "message",
        "description": "The commit message",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "tree",
        "description": "The SHA of the tree object this commit points to",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "parents",
        "description": "The SHAs of the commits that were the parents of this commit. If omitted or empty, the commit will be written as a root commit. For a single parent, an array of one SHA should be provided; for a merge commit, an array of more than one should be provided.",
        "in": "BODY",
        "type": "string[]",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "author",
        "description": "Information about the author of the commit. By default, the `author` will be the authenticated user and the current date. See the `author` and `committer` object below for details.",
        "in": "BODY",
        "type": "object",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "author.name",
        "description": "The name of the author (or committer) of the commit",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "author.email",
        "description": "The email of the author (or committer) of the commit",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "author.date",
        "description": "Indicates when this commit was authored (or committed). This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "committer",
        "description": "Information about the person who is making the commit. By default, `committer` will use the information set in `author`. See the `author` and `committer` object below for details.",
        "in": "BODY",
        "type": "object",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "committer.name",
        "description": "The name of the author (or committer) of the commit",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "committer.email",
        "description": "The email of the author (or committer) of the commit",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "committer.date",
        "description": "Indicates when this commit was authored (or committed). This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "signature",
        "description": "The [PGP signature](https://en.wikipedia.org/wiki/Pretty_Good_Privacy) of the commit. GitHub adds the signature to the `gpgsig` header of the created commit. For a commit signature to be verifiable by Git or GitHub, it must be an ASCII-armored detached PGP signature over the string commit as it would be written to the object database. To pass a `signature` parameter, you need to first manually create a valid PGP signature, which can be complicated. You may find it easier to [use the command line](https://git-scm.com/book/id/v2/Git-Tools-Signing-Your-Work) to create signed commits.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 201,
        "description": "response",
        "examples": [
          {
            "data": "{\"sha\":\"7638417db6d59f3c431d3e1f261cc637155684cd\",\"node_id\":\"MDY6Q29tbWl0NzYzODQxN2RiNmQ1OWYzYzQzMWQzZTFmMjYxY2M2MzcxNTU2ODRjZA==\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits/7638417db6d59f3c431d3e1f261cc637155684cd\",\"author\":{\"date\":\"2014-11-07T22:01:45Z\",\"name\":\"Monalisa Octocat\",\"email\":\"octocat@github.com\"},\"committer\":{\"date\":\"2014-11-07T22:01:45Z\",\"name\":\"Monalisa Octocat\",\"email\":\"octocat@github.com\"},\"message\":\"my commit message\",\"tree\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/git/trees/827efc6d56897b048c772eb4087f854f46256132\",\"sha\":\"827efc6d56897b048c772eb4087f854f46256132\"},\"parents\":[{\"url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits/7d1b31e74ee336d15cbd21741bc88a537ed063a0\",\"sha\":\"7d1b31e74ee336d15cbd21741bc88a537ed063a0\"}],\"verification\":{\"verified\":false,\"reason\":\"unsigned\",\"signature\":null,\"payload\":null}}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Get a commit",
    "scope": "git",
    "id": "getCommit",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/git/commits/{commit_sha}",
    "isDeprecated": false,
    "description": "Gets a Git [commit object](https://git-scm.com/book/en/v1/Git-Internals-Git-Objects#Commit-Objects).\n\n**Signature verification object**\n\nThe response will include a `verification` object that describes the result of verifying the commit's signature. The following fields are included in the `verification` object:\n\nThese are the possible values for `reason` in the `verification` object:\n\n| Value                    | Description                                                                                                                       |\n| ------------------------ | --------------------------------------------------------------------------------------------------------------------------------- |\n| `expired_key`            | The key that made the signature is expired.                                                                                       |\n| `not_signing_key`        | The \"signing\" flag is not among the usage flags in the GPG key that made the signature.                                           |\n| `gpgverify_error`        | There was an error communicating with the signature verification service.                                                         |\n| `gpgverify_unavailable`  | The signature verification service is currently unavailable.                                                                      |\n| `unsigned`               | The object does not include a signature.                                                                                          |\n| `unknown_signature_type` | A non-PGP signature was found in the commit.                                                                                      |\n| `no_user`                | No user was associated with the `committer` email address in the commit.                                                          |\n| `unverified_email`       | The `committer` email address in the commit was associated with a user, but the email address is not verified on her/his account. |\n| `bad_email`              | The `committer` email address in the commit is not included in the identities of the PGP key that made the signature.             |\n| `unknown_key`            | The key that made the signature has not been registered with any user's account.                                                  |\n| `malformed_signature`    | There was an error parsing the signature.                                                                                         |\n| `invalid`                | The signature could not be cryptographically verified using the key whose key-id was found in the signature.                      |\n| `valid`                  | None of the above errors applied, so the signature is considered to be verified.                                                  |",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/git/commits/#get-a-commit",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "commit_sha",
        "description": "commit_sha parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"sha\":\"7638417db6d59f3c431d3e1f261cc637155684cd\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits/7638417db6d59f3c431d3e1f261cc637155684cd\",\"author\":{\"date\":\"2014-11-07T22:01:45Z\",\"name\":\"Monalisa Octocat\",\"email\":\"octocat@github.com\"},\"committer\":{\"date\":\"2014-11-07T22:01:45Z\",\"name\":\"Monalisa Octocat\",\"email\":\"octocat@github.com\"},\"message\":\"added readme, because im a good github citizen\",\"tree\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/git/trees/691272480426f78a0138979dd3ce63b77f706feb\",\"sha\":\"691272480426f78a0138979dd3ce63b77f706feb\"},\"parents\":[{\"url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits/1acc419d4d6a9ce985db7be48c6349a0475975b5\",\"sha\":\"1acc419d4d6a9ce985db7be48c6349a0475975b5\"}],\"verification\":{\"verified\":false,\"reason\":\"unsigned\",\"signature\":null,\"payload\":null}}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Create a reference",
    "scope": "git",
    "id": "createRef",
    "method": "POST",
    "url": "/repos/{owner}/{repo}/git/refs",
    "isDeprecated": false,
    "description": "Creates a reference for your repository. You are unable to create new references for empty repositories, even if the commit SHA-1 hash used exists. Empty repositories are repositories without branches.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/git/refs/#create-a-reference",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "ref",
        "description": "The name of the fully qualified reference (ie: `refs/heads/master`). If it doesn't start with 'refs' and have at least two slashes, it will be rejected.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "sha",
        "description": "The SHA1 value for this reference.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 201,
        "description": "response",
        "examples": [
          {
            "data": "{\"ref\":\"refs/heads/featureA\",\"node_id\":\"MDM6UmVmcmVmcy9oZWFkcy9mZWF0dXJlQQ==\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/git/refs/heads/featureA\",\"object\":{\"type\":\"commit\",\"sha\":\"aa218f56b14c9653891f9e74264a383fa43fefbd\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits/aa218f56b14c9653891f9e74264a383fa43fefbd\"}}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Get a reference",
    "scope": "git",
    "id": "getRef",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/git/refs/{ref}",
    "isDeprecated": false,
    "description": "Returns a branch or tag reference. Other than the [REST API](https://developer.github.com/enterprise/2.17/v3/git/refs/#get-a-reference) it always returns a single reference. If the REST API returns with an array then the method responds with an error.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/git/refs/#get-a-reference",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "ref",
        "description": "Must be formatted as `heads/branch`, not just `branch`",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [{ "code": 200, "description": "response", "examples": null }],
    "renamed": null
  },
  {
    "name": "Update a reference",
    "scope": "git",
    "id": "updateRef",
    "method": "PATCH",
    "url": "/repos/{owner}/{repo}/git/refs/{ref}",
    "isDeprecated": false,
    "description": "",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/git/refs/#update-a-reference",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "ref",
        "description": "ref parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "sha",
        "description": "The SHA1 value to set this reference to",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "force",
        "description": "Indicates whether to force the update or to make sure the update is a fast-forward update. Leaving this out or setting it to `false` will make sure you're not overwriting work.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"ref\":\"refs/heads/featureA\",\"node_id\":\"MDM6UmVmcmVmcy9oZWFkcy9mZWF0dXJlQQ==\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/git/refs/heads/featureA\",\"object\":{\"type\":\"commit\",\"sha\":\"aa218f56b14c9653891f9e74264a383fa43fefbd\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits/aa218f56b14c9653891f9e74264a383fa43fefbd\"}}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Delete a reference",
    "scope": "git",
    "id": "deleteRef",
    "method": "DELETE",
    "url": "/repos/{owner}/{repo}/git/refs/{ref}",
    "isDeprecated": false,
    "description": "```\nDELETE /repos/octocat/Hello-World/git/refs/heads/feature-a\n```\n\n```\nDELETE /repos/octocat/Hello-World/git/refs/tags/v1.0\n```",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/git/refs/#delete-a-reference",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "ref",
        "description": "ref parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [],
    "renamed": null
  },
  {
    "name": "Create a tag object",
    "scope": "git",
    "id": "createTag",
    "method": "POST",
    "url": "/repos/{owner}/{repo}/git/tags",
    "isDeprecated": false,
    "description": "Note that creating a tag object does not create the reference that makes a tag in Git. If you want to create an annotated tag in Git, you have to do this call to create the tag object, and then [create](https://developer.github.com/enterprise/2.17/v3/git/refs/#create-a-reference) the `refs/tags/[tag]` reference. If you want to create a lightweight tag, you only have to [create](https://developer.github.com/enterprise/2.17/v3/git/refs/#create-a-reference) the tag reference - this call would be unnecessary.\n\n**Signature verification object**\n\nThe response will include a `verification` object that describes the result of verifying the commit's signature. The following fields are included in the `verification` object:\n\nThese are the possible values for `reason` in the `verification` object:\n\n| Value                    | Description                                                                                                                       |\n| ------------------------ | --------------------------------------------------------------------------------------------------------------------------------- |\n| `expired_key`            | The key that made the signature is expired.                                                                                       |\n| `not_signing_key`        | The \"signing\" flag is not among the usage flags in the GPG key that made the signature.                                           |\n| `gpgverify_error`        | There was an error communicating with the signature verification service.                                                         |\n| `gpgverify_unavailable`  | The signature verification service is currently unavailable.                                                                      |\n| `unsigned`               | The object does not include a signature.                                                                                          |\n| `unknown_signature_type` | A non-PGP signature was found in the commit.                                                                                      |\n| `no_user`                | No user was associated with the `committer` email address in the commit.                                                          |\n| `unverified_email`       | The `committer` email address in the commit was associated with a user, but the email address is not verified on her/his account. |\n| `bad_email`              | The `committer` email address in the commit is not included in the identities of the PGP key that made the signature.             |\n| `unknown_key`            | The key that made the signature has not been registered with any user's account.                                                  |\n| `malformed_signature`    | There was an error parsing the signature.                                                                                         |\n| `invalid`                | The signature could not be cryptographically verified using the key whose key-id was found in the signature.                      |\n| `valid`                  | None of the above errors applied, so the signature is considered to be verified.                                                  |",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/git/tags/#create-a-tag-object",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "tag",
        "description": "The tag's name. This is typically a version (e.g., \"v0.0.1\").",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "message",
        "description": "The tag message.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "object",
        "description": "The SHA of the git object this is tagging.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "type",
        "description": "The type of the object we're tagging. Normally this is a `commit` but it can also be a `tree` or a `blob`.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": ["commit", "tree", "blob"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "tagger",
        "description": "An object with information about the individual creating the tag.",
        "in": "BODY",
        "type": "object",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "tagger.name",
        "description": "The name of the author of the tag",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "tagger.email",
        "description": "The email of the author of the tag",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "tagger.date",
        "description": "When this object was tagged. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 201,
        "description": "response",
        "examples": [
          {
            "data": "{\"node_id\":\"MDM6VGFnOTQwYmQzMzYyNDhlZmFlMGY5ZWU1YmM3YjJkNWM5ODU4ODdiMTZhYw==\",\"tag\":\"v0.0.1\",\"sha\":\"940bd336248efae0f9ee5bc7b2d5c985887b16ac\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/git/tags/940bd336248efae0f9ee5bc7b2d5c985887b16ac\",\"message\":\"initial version\",\"tagger\":{\"name\":\"Monalisa Octocat\",\"email\":\"octocat@github.com\",\"date\":\"2014-11-07T22:01:45Z\"},\"object\":{\"type\":\"commit\",\"sha\":\"c3d0be41ecbe669545ee3e94d31ed9a4bc91ee3c\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits/c3d0be41ecbe669545ee3e94d31ed9a4bc91ee3c\"},\"verification\":{\"verified\":false,\"reason\":\"unsigned\",\"signature\":null,\"payload\":null}}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Get a tag",
    "scope": "git",
    "id": "getTag",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/git/tags/{tag_sha}",
    "isDeprecated": false,
    "description": "**Signature verification object**\n\nThe response will include a `verification` object that describes the result of verifying the commit's signature. The following fields are included in the `verification` object:\n\nThese are the possible values for `reason` in the `verification` object:\n\n| Value                    | Description                                                                                                                       |\n| ------------------------ | --------------------------------------------------------------------------------------------------------------------------------- |\n| `expired_key`            | The key that made the signature is expired.                                                                                       |\n| `not_signing_key`        | The \"signing\" flag is not among the usage flags in the GPG key that made the signature.                                           |\n| `gpgverify_error`        | There was an error communicating with the signature verification service.                                                         |\n| `gpgverify_unavailable`  | The signature verification service is currently unavailable.                                                                      |\n| `unsigned`               | The object does not include a signature.                                                                                          |\n| `unknown_signature_type` | A non-PGP signature was found in the commit.                                                                                      |\n| `no_user`                | No user was associated with the `committer` email address in the commit.                                                          |\n| `unverified_email`       | The `committer` email address in the commit was associated with a user, but the email address is not verified on her/his account. |\n| `bad_email`              | The `committer` email address in the commit is not included in the identities of the PGP key that made the signature.             |\n| `unknown_key`            | The key that made the signature has not been registered with any user's account.                                                  |\n| `malformed_signature`    | There was an error parsing the signature.                                                                                         |\n| `invalid`                | The signature could not be cryptographically verified using the key whose key-id was found in the signature.                      |\n| `valid`                  | None of the above errors applied, so the signature is considered to be verified.                                                  |",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/git/tags/#get-a-tag",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "tag_sha",
        "description": "tag_sha parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"node_id\":\"MDM6VGFnOTQwYmQzMzYyNDhlZmFlMGY5ZWU1YmM3YjJkNWM5ODU4ODdiMTZhYw==\",\"tag\":\"v0.0.1\",\"sha\":\"940bd336248efae0f9ee5bc7b2d5c985887b16ac\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/git/tags/940bd336248efae0f9ee5bc7b2d5c985887b16ac\",\"message\":\"initial version\",\"tagger\":{\"name\":\"Monalisa Octocat\",\"email\":\"octocat@github.com\",\"date\":\"2014-11-07T22:01:45Z\"},\"object\":{\"type\":\"commit\",\"sha\":\"c3d0be41ecbe669545ee3e94d31ed9a4bc91ee3c\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits/c3d0be41ecbe669545ee3e94d31ed9a4bc91ee3c\"},\"verification\":{\"verified\":false,\"reason\":\"unsigned\",\"signature\":null,\"payload\":null}}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Create a tree",
    "scope": "git",
    "id": "createTree",
    "method": "POST",
    "url": "/repos/{owner}/{repo}/git/trees",
    "isDeprecated": false,
    "description": "The tree creation API accepts nested entries. If you specify both a tree and a nested path modifying that tree, this endpoint will overwrite the contents of the tree with the new path contents, and create a new tree structure.\n\nIf you use this endpoint to add, delete, or modify the file contents in a tree, you will need to commit the tree and then update a branch to point to the commit. For more information see \"[Create a commit](https://developer.github.com/enterprise/2.17/v3/git/commits/#create-a-commit)\" and \"[Update a reference](https://developer.github.com/enterprise/2.17/v3/git/refs/#update-a-reference).\"",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/git/trees/#create-a-tree",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "tree",
        "description": "Objects (of `path`, `mode`, `type`, and `sha`) specifying a tree structure.",
        "in": "BODY",
        "type": "object[]",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "tree[].path",
        "description": "The file referenced in the tree.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "tree[].mode",
        "description": "The file mode; one of `100644` for file (blob), `100755` for executable (blob), `040000` for subdirectory (tree), `160000` for submodule (commit), or `120000` for a blob that specifies the path of a symlink.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": ["100644", "100755", "040000", "160000", "120000"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "tree[].type",
        "description": "Either `blob`, `tree`, or `commit`.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": ["blob", "tree", "commit"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "tree[].sha",
        "description": "The SHA1 checksum ID of the object in the tree. Also called `tree.sha`. If the value is `null` then the file will be deleted.  \n  \n**Note:** Use either `tree.sha` or `content` to specify the contents of the entry. Using both `tree.sha` and `content` will return an error.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": true,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "tree[].content",
        "description": "The content you want this file to have. GitHub will write this blob out and use that SHA for this entry. Use either this, or `tree.sha`.  \n  \n**Note:** Use either `tree.sha` or `content` to specify the contents of the entry. Using both `tree.sha` and `content` will return an error.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "base_tree",
        "description": "The SHA1 of the tree you want to update with new data. If you don't set this, the commit will be created on top of everything; however, it will only contain your change, the rest of your files will show up as deleted.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 201,
        "description": "response",
        "examples": [
          {
            "data": "{\"sha\":\"cd8274d15fa3ae2ab983129fb037999f264ba9a7\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/trees/cd8274d15fa3ae2ab983129fb037999f264ba9a7\",\"tree\":[{\"path\":\"file.rb\",\"mode\":\"100644\",\"type\":\"blob\",\"size\":132,\"sha\":\"7c258a9869f33c1e1e1f74fbb32f07c86cb5a75b\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/git/blobs/7c258a9869f33c1e1e1f74fbb32f07c86cb5a75b\"}]}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Get a tree",
    "scope": "git",
    "id": "getTree",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/git/trees/{tree_sha}",
    "isDeprecated": false,
    "description": "If `truncated` is `true`, the number of items in the `tree` array exceeded our maximum limit. If you need to fetch more items, you can clone the repository and iterate over the Git data locally.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/git/trees/#get-a-tree",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "tree_sha",
        "description": "tree_sha parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "recursive",
        "description": "recursive parameter",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": ["1"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "If `truncated` is `true`, the number of items in the `tree` array exceeded our maximum limit. If you need to fetch more items, you can clone the repository and iterate over the Git data locally.",
        "examples": null
      }
    ],
    "renamed": null
  },
  {
    "name": "List hooks",
    "scope": "repos",
    "id": "listHooks",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/hooks",
    "isDeprecated": false,
    "description": "",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/repos/hooks/#list-hooks",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"type\":\"Repository\",\"id\":12345678,\"name\":\"web\",\"active\":true,\"events\":[\"push\",\"pull_request\"],\"config\":{\"content_type\":\"json\",\"insecure_ssl\":\"0\",\"url\":\"https://example.com/webhook\"},\"updated_at\":\"2019-06-03T00:57:16Z\",\"created_at\":\"2019-06-03T00:57:16Z\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/hooks/12345678\",\"test_url\":\"https://api.github.com/repos/octocat/Hello-World/hooks/12345678/test\",\"ping_url\":\"https://api.github.com/repos/octocat/Hello-World/hooks/12345678/pings\",\"last_response\":{\"code\":null,\"status\":\"unused\",\"message\":null}}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Create a hook",
    "scope": "repos",
    "id": "createHook",
    "method": "POST",
    "url": "/repos/{owner}/{repo}/hooks",
    "isDeprecated": false,
    "description": "Repositories can have multiple webhooks installed. Each webhook should have a unique `config`. Multiple webhooks can share the same `config` as long as those webhooks do not have any `events` that overlap.\n\n**Note:** GitHub Enterprise release 2.17 and higher no longer allows admins to install new GitHub Services, and existing services will stop working in GitHub Enterprise release 2.20 and higher. You can use the [Replacing GitHub Services guide](https://developer.github.com/enterprise/2.17/v3/guides/replacing-github-services) to help you update your services to webhooks.\n\nHere's how you can create a hook that posts payloads in JSON format:",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/repos/hooks/#create-a-hook",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "name",
        "description": "Use `web` to create a webhook.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "config",
        "description": "Key/value pairs to provide settings for this webhook. [These are defined below](https://developer.github.com/enterprise/2.17/v3/repos/hooks/#create-hook-config-params).",
        "in": "BODY",
        "type": "object",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "config.url",
        "description": "The URL to which the payloads will be delivered.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "config.content_type",
        "description": "The media type used to serialize the payloads. Supported values include `json` and `form`. The default is `form`.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "config.secret",
        "description": "If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value in the [`X-Hub-Signature`](https://developer.github.com/enterprise/2.17/webhooks/#delivery-headers) header.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "config.insecure_ssl",
        "description": "Determines whether the SSL certificate of the host for `url` will be verified when delivering payloads. Supported values include `0` (verification is performed) and `1` (verification is not performed). The default is `0`. **We strongly recommend not setting this to `1` as you are subject to man-in-the-middle and other attacks.**",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "events",
        "description": "Determines what [events](https://developer.github.com/enterprise/2.17/v3/activity/events/types/) the hook is triggered for.",
        "in": "BODY",
        "type": "string[]",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "active",
        "description": "Determines if notifications are sent when the webhook is triggered. Set to `true` to send notifications.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 201,
        "description": "response",
        "examples": [
          {
            "data": "{\"type\":\"Repository\",\"id\":12345678,\"name\":\"web\",\"active\":true,\"events\":[\"push\",\"pull_request\"],\"config\":{\"content_type\":\"json\",\"insecure_ssl\":\"0\",\"url\":\"https://example.com/webhook\"},\"updated_at\":\"2019-06-03T00:57:16Z\",\"created_at\":\"2019-06-03T00:57:16Z\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/hooks/12345678\",\"test_url\":\"https://api.github.com/repos/octocat/Hello-World/hooks/12345678/test\",\"ping_url\":\"https://api.github.com/repos/octocat/Hello-World/hooks/12345678/pings\",\"last_response\":{\"code\":null,\"status\":\"unused\",\"message\":null}}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Get single hook",
    "scope": "repos",
    "id": "getHook",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/hooks/{hook_id}",
    "isDeprecated": false,
    "description": "",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/repos/hooks/#get-single-hook",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "hook_id",
        "description": "hook_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"type\":\"Repository\",\"id\":12345678,\"name\":\"web\",\"active\":true,\"events\":[\"push\",\"pull_request\"],\"config\":{\"content_type\":\"json\",\"insecure_ssl\":\"0\",\"url\":\"https://example.com/webhook\"},\"updated_at\":\"2019-06-03T00:57:16Z\",\"created_at\":\"2019-06-03T00:57:16Z\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/hooks/12345678\",\"test_url\":\"https://api.github.com/repos/octocat/Hello-World/hooks/12345678/test\",\"ping_url\":\"https://api.github.com/repos/octocat/Hello-World/hooks/12345678/pings\",\"last_response\":{\"code\":null,\"status\":\"unused\",\"message\":null}}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Edit a hook",
    "scope": "repos",
    "id": "updateHook",
    "method": "PATCH",
    "url": "/repos/{owner}/{repo}/hooks/{hook_id}",
    "isDeprecated": false,
    "description": "**Note:** GitHub Enterprise release 2.17 and higher no longer allows admins to install new GitHub Services, and existing services will stop working in GitHub Enterprise release 2.20 and higher. You can use the [Replacing GitHub Services guide](https://developer.github.com/enterprise/2.17/v3/guides/replacing-github-services) to help you update your services to webhooks.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/repos/hooks/#edit-a-hook",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "hook_id",
        "description": "hook_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "config",
        "description": "Key/value pairs to provide settings for this webhook. [These are defined below](https://developer.github.com/enterprise/2.17/v3/repos/hooks/#create-hook-config-params).",
        "in": "BODY",
        "type": "object",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "config.url",
        "description": "The URL to which the payloads will be delivered.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "config.content_type",
        "description": "The media type used to serialize the payloads. Supported values include `json` and `form`. The default is `form`.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "config.secret",
        "description": "If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value in the [`X-Hub-Signature`](https://developer.github.com/enterprise/2.17/webhooks/#delivery-headers) header.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "config.insecure_ssl",
        "description": "Determines whether the SSL certificate of the host for `url` will be verified when delivering payloads. Supported values include `0` (verification is performed) and `1` (verification is not performed). The default is `0`. **We strongly recommend not setting this to `1` as you are subject to man-in-the-middle and other attacks.**",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "events",
        "description": "Determines what [events](https://developer.github.com/enterprise/2.17/v3/activity/events/types/) the hook is triggered for. This replaces the entire array of events.",
        "in": "BODY",
        "type": "string[]",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "add_events",
        "description": "Determines a list of events to be added to the list of events that the Hook triggers for.",
        "in": "BODY",
        "type": "string[]",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "remove_events",
        "description": "Determines a list of events to be removed from the list of events that the Hook triggers for.",
        "in": "BODY",
        "type": "string[]",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "active",
        "description": "Determines if notifications are sent when the webhook is triggered. Set to `true` to send notifications.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"type\":\"Repository\",\"id\":12345678,\"name\":\"web\",\"active\":true,\"events\":[\"push\",\"pull_request\"],\"config\":{\"content_type\":\"json\",\"insecure_ssl\":\"0\",\"url\":\"https://example.com/webhook\"},\"updated_at\":\"2019-06-03T00:57:16Z\",\"created_at\":\"2019-06-03T00:57:16Z\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/hooks/12345678\",\"test_url\":\"https://api.github.com/repos/octocat/Hello-World/hooks/12345678/test\",\"ping_url\":\"https://api.github.com/repos/octocat/Hello-World/hooks/12345678/pings\",\"last_response\":{\"code\":null,\"status\":\"unused\",\"message\":null}}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Delete a hook",
    "scope": "repos",
    "id": "deleteHook",
    "method": "DELETE",
    "url": "/repos/{owner}/{repo}/hooks/{hook_id}",
    "isDeprecated": false,
    "description": "",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/repos/hooks/#delete-a-hook",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "hook_id",
        "description": "hook_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [],
    "renamed": null
  },
  {
    "name": "Ping a hook",
    "scope": "repos",
    "id": "pingHook",
    "method": "POST",
    "url": "/repos/{owner}/{repo}/hooks/{hook_id}/pings",
    "isDeprecated": false,
    "description": "**Note:** GitHub Enterprise release 2.17 and higher no longer allows admins to install new GitHub Services, and existing services will stop working in GitHub Enterprise release 2.20 and higher. You can use the [Replacing GitHub Services guide](https://developer.github.com/enterprise/2.17/v3/guides/replacing-github-services) to help you update your services to webhooks.\n\nThis will trigger a [ping event](https://developer.github.com/enterprise/2.17/webhooks/#ping-event) to be sent to the hook.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/repos/hooks/#ping-a-hook",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "hook_id",
        "description": "hook_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [],
    "renamed": null
  },
  {
    "name": "Test a push hook",
    "scope": "repos",
    "id": "testPushHook",
    "method": "POST",
    "url": "/repos/{owner}/{repo}/hooks/{hook_id}/tests",
    "isDeprecated": false,
    "description": "**Note:** GitHub Enterprise release 2.17 and higher no longer allows admins to install new GitHub Services, and existing services will stop working in GitHub Enterprise release 2.20 and higher. You can use the [Replacing GitHub Services guide](https://developer.github.com/enterprise/2.17/v3/guides/replacing-github-services) to help you update your services to webhooks.\n\nThis will trigger the hook with the latest push to the current repository if the hook is subscribed to `push` events. If the hook is not subscribed to `push` events, the server will respond with 204 but no test POST will be generated.\n\n**Note**: Previously `/repos/:owner/:repo/hooks/:hook_id/test`",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/repos/hooks/#test-a-push-hook",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "hook_id",
        "description": "hook_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [],
    "renamed": null
  },
  {
    "name": "Get a repository installation",
    "scope": "apps",
    "id": "getRepoInstallation",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/installation",
    "isDeprecated": false,
    "description": "Enables an authenticated GitHub App to find the repository's installation information. The installation's account type will be either an organization or a user account, depending which account the repository belongs to.\n\nYou must use a [JWT](https://developer.github.com/enterprise/2.17/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/apps/#get-a-repository-installation",
    "previews": [{ "name": "machine-man" }],
    "headers": [
      {
        "name": "accept",
        "value": "application/vnd.github.machine-man-preview+json"
      }
    ],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":1,\"account\":{\"login\":\"github\",\"id\":1,\"avatar_url\":\"https://github.com/images/error/hubot_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/orgs/github\",\"html_url\":\"https://github.com/github\",\"followers_url\":\"https://api.github.com/users/github/followers\",\"following_url\":\"https://api.github.com/users/github/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/github/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/github/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/github/subscriptions\",\"organizations_url\":\"https://api.github.com/users/github/orgs\",\"repos_url\":\"https://api.github.com/orgs/github/repos\",\"events_url\":\"https://api.github.com/orgs/github/events\",\"received_events_url\":\"https://api.github.com/users/github/received_events\",\"type\":\"Organization\",\"site_admin\":false},\"repository_selection\":\"all\",\"access_tokens_url\":\"https://api.github.com/installations/1/access_tokens\",\"repositories_url\":\"https://api.github.com/installation/repositories\",\"html_url\":\"https://github.com/organizations/github/settings/installations/1\",\"app_id\":1,\"target_id\":1,\"target_type\":\"Organization\",\"permissions\":{\"checks\":\"write\",\"metadata\":\"read\",\"contents\":\"read\"},\"events\":[\"push\",\"pull_request\"],\"created_at\":\"2018-02-09T20:51:14Z\",\"updated_at\":\"2018-02-09T20:51:14Z\",\"single_file_name\":null}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Get a repository installation",
    "scope": "apps",
    "id": "findRepoInstallation",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/installation",
    "isDeprecated": false,
    "description": "Enables an authenticated GitHub App to find the repository's installation information. The installation's account type will be either an organization or a user account, depending which account the repository belongs to.\n\nYou must use a [JWT](https://developer.github.com/enterprise/2.17/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/apps/#get-a-repository-installation",
    "previews": [{ "name": "machine-man" }],
    "headers": [
      {
        "name": "accept",
        "value": "application/vnd.github.machine-man-preview+json"
      }
    ],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":1,\"account\":{\"login\":\"github\",\"id\":1,\"avatar_url\":\"https://github.com/images/error/hubot_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/orgs/github\",\"html_url\":\"https://github.com/github\",\"followers_url\":\"https://api.github.com/users/github/followers\",\"following_url\":\"https://api.github.com/users/github/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/github/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/github/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/github/subscriptions\",\"organizations_url\":\"https://api.github.com/users/github/orgs\",\"repos_url\":\"https://api.github.com/orgs/github/repos\",\"events_url\":\"https://api.github.com/orgs/github/events\",\"received_events_url\":\"https://api.github.com/users/github/received_events\",\"type\":\"Organization\",\"site_admin\":false},\"repository_selection\":\"all\",\"access_tokens_url\":\"https://api.github.com/installations/1/access_tokens\",\"repositories_url\":\"https://api.github.com/installation/repositories\",\"html_url\":\"https://github.com/organizations/github/settings/installations/1\",\"app_id\":1,\"target_id\":1,\"target_type\":\"Organization\",\"permissions\":{\"checks\":\"write\",\"metadata\":\"read\",\"contents\":\"read\"},\"events\":[\"push\",\"pull_request\"],\"created_at\":\"2018-02-09T20:51:14Z\",\"updated_at\":\"2018-02-09T20:51:14Z\",\"single_file_name\":null}"
          }
        ]
      }
    ],
    "renamed": {
      "before": { "scope": "apps", "id": "findRepoInstallation" },
      "after": { "scope": "apps", "id": "getRepoInstallation" },
      "date": "2019-04-10",
      "note": "\"Find repository installation\" renamed to \"Get a repository installation\""
    }
  },
  {
    "name": "List invitations for a repository",
    "scope": "repos",
    "id": "listInvitations",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/invitations",
    "isDeprecated": false,
    "description": "When authenticating as a user with admin rights to a repository, this endpoint will list all currently open repository invitations.\n\n",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/repos/invitations/#list-invitations-for-a-repository",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"id\":1,\"repository\":{\"id\":1296269,\"node_id\":\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\"name\":\"Hello-World\",\"full_name\":\"octocat/Hello-World\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"private\":false,\"html_url\":\"https://github.com/octocat/Hello-World\",\"description\":\"This your first repo!\",\"fork\":false,\"url\":\"https://api.github.com/repos/octocat/Hello-World\",\"archive_url\":\"http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\"assignees_url\":\"http://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\"blobs_url\":\"http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\"branches_url\":\"http://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\"collaborators_url\":\"http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\"comments_url\":\"http://api.github.com/repos/octocat/Hello-World/comments{/number}\",\"commits_url\":\"http://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\"compare_url\":\"http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\"contents_url\":\"http://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\"contributors_url\":\"http://api.github.com/repos/octocat/Hello-World/contributors\",\"deployments_url\":\"http://api.github.com/repos/octocat/Hello-World/deployments\",\"downloads_url\":\"http://api.github.com/repos/octocat/Hello-World/downloads\",\"events_url\":\"http://api.github.com/repos/octocat/Hello-World/events\",\"forks_url\":\"http://api.github.com/repos/octocat/Hello-World/forks\",\"git_commits_url\":\"http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\"git_refs_url\":\"http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\"git_tags_url\":\"http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\"git_url\":\"git:github.com/octocat/Hello-World.git\",\"issue_comment_url\":\"http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\"issue_events_url\":\"http://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\"issues_url\":\"http://api.github.com/repos/octocat/Hello-World/issues{/number}\",\"keys_url\":\"http://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\"labels_url\":\"http://api.github.com/repos/octocat/Hello-World/labels{/name}\",\"languages_url\":\"http://api.github.com/repos/octocat/Hello-World/languages\",\"merges_url\":\"http://api.github.com/repos/octocat/Hello-World/merges\",\"milestones_url\":\"http://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\"notifications_url\":\"http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\"pulls_url\":\"http://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\"releases_url\":\"http://api.github.com/repos/octocat/Hello-World/releases{/id}\",\"ssh_url\":\"git@github.com:octocat/Hello-World.git\",\"stargazers_url\":\"http://api.github.com/repos/octocat/Hello-World/stargazers\",\"statuses_url\":\"http://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\"subscribers_url\":\"http://api.github.com/repos/octocat/Hello-World/subscribers\",\"subscription_url\":\"http://api.github.com/repos/octocat/Hello-World/subscription\",\"tags_url\":\"http://api.github.com/repos/octocat/Hello-World/tags\",\"teams_url\":\"http://api.github.com/repos/octocat/Hello-World/teams\",\"trees_url\":\"http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\"},\"invitee\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"inviter\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"permissions\":\"write\",\"created_at\":\"2016-06-13T14:52:50-05:00\",\"url\":\"https://api.github.com/user/repository_invitations/1296269\",\"html_url\":\"https://github.com/octocat/Hello-World/invitations\"}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Delete a repository invitation",
    "scope": "repos",
    "id": "deleteInvitation",
    "method": "DELETE",
    "url": "/repos/{owner}/{repo}/invitations/{invitation_id}",
    "isDeprecated": false,
    "description": "",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/repos/invitations/#delete-a-repository-invitation",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "invitation_id",
        "description": "invitation_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [],
    "renamed": null
  },
  {
    "name": "Update a repository invitation",
    "scope": "repos",
    "id": "updateInvitation",
    "method": "PATCH",
    "url": "/repos/{owner}/{repo}/invitations/{invitation_id}",
    "isDeprecated": false,
    "description": "",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/repos/invitations/#update-a-repository-invitation",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "invitation_id",
        "description": "invitation_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "permissions",
        "description": "The permissions that the associated user will have on the repository. Valid values are `read`, `write`, and `admin`.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": ["read", "write", "admin"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":1,\"repository\":{\"id\":1296269,\"node_id\":\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\"name\":\"Hello-World\",\"full_name\":\"octocat/Hello-World\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"private\":false,\"html_url\":\"https://github.com/octocat/Hello-World\",\"description\":\"This your first repo!\",\"fork\":false,\"url\":\"https://api.github.com/repos/octocat/Hello-World\",\"archive_url\":\"http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\"assignees_url\":\"http://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\"blobs_url\":\"http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\"branches_url\":\"http://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\"collaborators_url\":\"http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\"comments_url\":\"http://api.github.com/repos/octocat/Hello-World/comments{/number}\",\"commits_url\":\"http://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\"compare_url\":\"http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\"contents_url\":\"http://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\"contributors_url\":\"http://api.github.com/repos/octocat/Hello-World/contributors\",\"deployments_url\":\"http://api.github.com/repos/octocat/Hello-World/deployments\",\"downloads_url\":\"http://api.github.com/repos/octocat/Hello-World/downloads\",\"events_url\":\"http://api.github.com/repos/octocat/Hello-World/events\",\"forks_url\":\"http://api.github.com/repos/octocat/Hello-World/forks\",\"git_commits_url\":\"http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\"git_refs_url\":\"http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\"git_tags_url\":\"http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\"git_url\":\"git:github.com/octocat/Hello-World.git\",\"issue_comment_url\":\"http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\"issue_events_url\":\"http://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\"issues_url\":\"http://api.github.com/repos/octocat/Hello-World/issues{/number}\",\"keys_url\":\"http://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\"labels_url\":\"http://api.github.com/repos/octocat/Hello-World/labels{/name}\",\"languages_url\":\"http://api.github.com/repos/octocat/Hello-World/languages\",\"merges_url\":\"http://api.github.com/repos/octocat/Hello-World/merges\",\"milestones_url\":\"http://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\"notifications_url\":\"http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\"pulls_url\":\"http://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\"releases_url\":\"http://api.github.com/repos/octocat/Hello-World/releases{/id}\",\"ssh_url\":\"git@github.com:octocat/Hello-World.git\",\"stargazers_url\":\"http://api.github.com/repos/octocat/Hello-World/stargazers\",\"statuses_url\":\"http://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\"subscribers_url\":\"http://api.github.com/repos/octocat/Hello-World/subscribers\",\"subscription_url\":\"http://api.github.com/repos/octocat/Hello-World/subscription\",\"tags_url\":\"http://api.github.com/repos/octocat/Hello-World/tags\",\"teams_url\":\"http://api.github.com/repos/octocat/Hello-World/teams\",\"trees_url\":\"http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\"},\"invitee\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"inviter\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"permissions\":\"write\",\"created_at\":\"2016-06-13T14:52:50-05:00\",\"url\":\"https://api.github.com/user/repository_invitations/1296269\",\"html_url\":\"https://github.com/octocat/Hello-World/invitations\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "List issues for a repository",
    "scope": "issues",
    "id": "listForRepo",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/issues",
    "isDeprecated": false,
    "description": "**Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this reason, \"Issues\" endpoints may return both issues and pull requests in the response. You can identify pull requests by the `pull_request` key.\n\nBe aware that the `id` of a pull request returned from \"Issues\" endpoints will be an _issue id_. To find out the pull request id, use the \"[List pull requests](https://developer.github.com/enterprise/2.17/v3/pulls/#list-pull-requests)\" endpoint.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/issues/#list-issues-for-a-repository",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "milestone",
        "description": "If an `integer` is passed, it should refer to a milestone by its `number` field. If the string `*` is passed, issues with any milestone are accepted. If the string `none` is passed, issues without milestones are returned.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "state",
        "description": "Indicates the state of the issues to return. Can be either `open`, `closed`, or `all`.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["open", "closed", "all"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "assignee",
        "description": "Can be the name of a user. Pass in `none` for issues with no assigned user, and `*` for issues assigned to any user.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "creator",
        "description": "The user that created the issue.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "mentioned",
        "description": "A user that's mentioned in the issue.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "labels",
        "description": "A list of comma separated label names. Example: `bug,ui,@high`",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "sort",
        "description": "What to sort results by. Can be either `created`, `updated`, `comments`.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["created", "updated", "comments"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "direction",
        "description": "The direction of the sort. Can be either `asc` or `desc`.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["asc", "desc"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "since",
        "description": "Only issues updated at or after this time are returned. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"id\":1,\"node_id\":\"MDU6SXNzdWUx\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347\",\"repository_url\":\"https://api.github.com/repos/octocat/Hello-World\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347/comments\",\"events_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347/events\",\"html_url\":\"https://github.com/octocat/Hello-World/issues/1347\",\"number\":1347,\"state\":\"open\",\"title\":\"Found a bug\",\"body\":\"I'm having a problem with this.\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"labels\":[{\"id\":208045946,\"node_id\":\"MDU6TGFiZWwyMDgwNDU5NDY=\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/labels/bug\",\"name\":\"bug\",\"description\":\"Something isn't working\",\"color\":\"f29513\",\"default\":true}],\"assignee\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"assignees\":[{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false}],\"milestone\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/milestones/1\",\"html_url\":\"https://github.com/octocat/Hello-World/milestones/v1.0\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/milestones/1/labels\",\"id\":1002604,\"node_id\":\"MDk6TWlsZXN0b25lMTAwMjYwNA==\",\"number\":1,\"state\":\"open\",\"title\":\"v1.0\",\"description\":\"Tracking milestone for version 1.0\",\"creator\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"open_issues\":4,\"closed_issues\":8,\"created_at\":\"2011-04-10T20:09:31Z\",\"updated_at\":\"2014-03-03T18:58:10Z\",\"closed_at\":\"2013-02-12T13:22:01Z\",\"due_on\":\"2012-10-09T23:39:01Z\"},\"locked\":true,\"active_lock_reason\":\"too heated\",\"comments\":0,\"pull_request\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/pulls/1347\",\"html_url\":\"https://github.com/octocat/Hello-World/pull/1347\",\"diff_url\":\"https://github.com/octocat/Hello-World/pull/1347.diff\",\"patch_url\":\"https://github.com/octocat/Hello-World/pull/1347.patch\"},\"closed_at\":null,\"created_at\":\"2011-04-22T13:33:48Z\",\"updated_at\":\"2011-04-22T13:33:48Z\"}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Create an issue",
    "scope": "issues",
    "id": "create",
    "method": "POST",
    "url": "/repos/{owner}/{repo}/issues",
    "isDeprecated": false,
    "description": "Any user with pull access to a repository can create an issue. If [issues are disabled in the repository](https://help.github.com/articles/disabling-issues/), the API returns a `410 Gone` status.\n\nThis endpoint triggers [notifications](https://help.github.com/articles/about-notifications/). Creating content too quickly using this endpoint may result in abuse rate limiting. See \"[Abuse rate limits](https://developer.github.com/enterprise/2.17/v3/#abuse-rate-limits)\" for details.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/issues/#create-an-issue",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "title",
        "description": "The title of the issue.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "body",
        "description": "The contents of the issue.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "assignee",
        "description": "Login for the user that this issue should be assigned to. _NOTE: Only users with push access can set the assignee for new issues. The assignee is silently dropped otherwise. **This field is deprecated.**_",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "milestone",
        "description": "The `number` of the milestone to associate this issue with. _NOTE: Only users with push access can set the milestone for new issues. The milestone is silently dropped otherwise._",
        "in": "BODY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "labels",
        "description": "Labels to associate with this issue. _NOTE: Only users with push access can set labels for new issues. Labels are silently dropped otherwise._",
        "in": "BODY",
        "type": "string[]",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "assignees",
        "description": "Logins for Users to assign to this issue. _NOTE: Only users with push access can set assignees for new issues. Assignees are silently dropped otherwise._",
        "in": "BODY",
        "type": "string[]",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 201,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":1,\"node_id\":\"MDU6SXNzdWUx\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347\",\"repository_url\":\"https://api.github.com/repos/octocat/Hello-World\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347/comments\",\"events_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347/events\",\"html_url\":\"https://github.com/octocat/Hello-World/issues/1347\",\"number\":1347,\"state\":\"open\",\"title\":\"Found a bug\",\"body\":\"I'm having a problem with this.\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"labels\":[{\"id\":208045946,\"node_id\":\"MDU6TGFiZWwyMDgwNDU5NDY=\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/labels/bug\",\"name\":\"bug\",\"description\":\"Something isn't working\",\"color\":\"f29513\",\"default\":true}],\"assignee\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"assignees\":[{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false}],\"milestone\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/milestones/1\",\"html_url\":\"https://github.com/octocat/Hello-World/milestones/v1.0\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/milestones/1/labels\",\"id\":1002604,\"node_id\":\"MDk6TWlsZXN0b25lMTAwMjYwNA==\",\"number\":1,\"state\":\"open\",\"title\":\"v1.0\",\"description\":\"Tracking milestone for version 1.0\",\"creator\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"open_issues\":4,\"closed_issues\":8,\"created_at\":\"2011-04-10T20:09:31Z\",\"updated_at\":\"2014-03-03T18:58:10Z\",\"closed_at\":\"2013-02-12T13:22:01Z\",\"due_on\":\"2012-10-09T23:39:01Z\"},\"locked\":true,\"active_lock_reason\":\"too heated\",\"comments\":0,\"pull_request\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/pulls/1347\",\"html_url\":\"https://github.com/octocat/Hello-World/pull/1347\",\"diff_url\":\"https://github.com/octocat/Hello-World/pull/1347.diff\",\"patch_url\":\"https://github.com/octocat/Hello-World/pull/1347.patch\"},\"closed_at\":null,\"created_at\":\"2011-04-22T13:33:48Z\",\"updated_at\":\"2011-04-22T13:33:48Z\",\"closed_by\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false}}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "List comments in a repository",
    "scope": "issues",
    "id": "listCommentsForRepo",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/issues/comments",
    "isDeprecated": false,
    "description": "By default, Issue Comments are ordered by ascending ID.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/issues/comments/#list-comments-in-a-repository",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "sort",
        "description": "Either `created` or `updated`.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["created", "updated"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "direction",
        "description": "Either `asc` or `desc`. Ignored without the `sort` parameter.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["asc", "desc"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "since",
        "description": "Only comments updated at or after this time are returned. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"id\":1,\"node_id\":\"MDEyOklzc3VlQ29tbWVudDE=\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/issues/comments/1\",\"html_url\":\"https://github.com/octocat/Hello-World/issues/1347#issuecomment-1\",\"body\":\"Me too\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"created_at\":\"2011-04-14T16:00:49Z\",\"updated_at\":\"2011-04-14T16:00:49Z\"}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Get a single comment",
    "scope": "issues",
    "id": "getComment",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/issues/comments/{comment_id}",
    "isDeprecated": false,
    "description": "",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/issues/comments/#get-a-single-comment",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "comment_id",
        "description": "comment_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":1,\"node_id\":\"MDEyOklzc3VlQ29tbWVudDE=\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/issues/comments/1\",\"html_url\":\"https://github.com/octocat/Hello-World/issues/1347#issuecomment-1\",\"body\":\"Me too\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"created_at\":\"2011-04-14T16:00:49Z\",\"updated_at\":\"2011-04-14T16:00:49Z\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Edit a comment",
    "scope": "issues",
    "id": "updateComment",
    "method": "PATCH",
    "url": "/repos/{owner}/{repo}/issues/comments/{comment_id}",
    "isDeprecated": false,
    "description": "",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/issues/comments/#edit-a-comment",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "comment_id",
        "description": "comment_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "body",
        "description": "The contents of the comment.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":1,\"node_id\":\"MDEyOklzc3VlQ29tbWVudDE=\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/issues/comments/1\",\"html_url\":\"https://github.com/octocat/Hello-World/issues/1347#issuecomment-1\",\"body\":\"Me too\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"created_at\":\"2011-04-14T16:00:49Z\",\"updated_at\":\"2011-04-14T16:00:49Z\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Delete a comment",
    "scope": "issues",
    "id": "deleteComment",
    "method": "DELETE",
    "url": "/repos/{owner}/{repo}/issues/comments/{comment_id}",
    "isDeprecated": false,
    "description": "",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/issues/comments/#delete-a-comment",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "comment_id",
        "description": "comment_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [],
    "renamed": null
  },
  {
    "name": "List reactions for an issue comment",
    "scope": "reactions",
    "id": "listForIssueComment",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/issues/comments/{comment_id}/reactions",
    "isDeprecated": false,
    "description": "List the reactions to an [issue comment](https://developer.github.com/enterprise/2.17/v3/issues/comments/).",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/reactions/#list-reactions-for-an-issue-comment",
    "previews": [{ "name": "squirrel-girl" }],
    "headers": [
      {
        "name": "accept",
        "value": "application/vnd.github.squirrel-girl-preview+json"
      }
    ],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "comment_id",
        "description": "comment_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "content",
        "description": "Returns a single [reaction type](https://developer.github.com/enterprise/2.17/v3/reactions/#reaction-types). Omit this parameter to list all reactions to an issue comment.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": [
          "+1",
          "-1",
          "laugh",
          "confused",
          "heart",
          "hooray",
          "rocket",
          "eyes"
        ],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"id\":1,\"node_id\":\"MDg6UmVhY3Rpb24x\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"content\":\"heart\",\"created_at\":\"2016-05-20T20:09:31Z\"}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Create reaction for an issue comment",
    "scope": "reactions",
    "id": "createForIssueComment",
    "method": "POST",
    "url": "/repos/{owner}/{repo}/issues/comments/{comment_id}/reactions",
    "isDeprecated": false,
    "description": "Create a reaction to an [issue comment](https://developer.github.com/enterprise/2.17/v3/issues/comments/). A response with a `Status: 200 OK` means that you already added the reaction type to this issue comment.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/reactions/#create-reaction-for-an-issue-comment",
    "previews": [{ "name": "squirrel-girl" }],
    "headers": [
      {
        "name": "accept",
        "value": "application/vnd.github.squirrel-girl-preview+json"
      }
    ],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "comment_id",
        "description": "comment_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "content",
        "description": "The [reaction type](https://developer.github.com/enterprise/2.17/v3/reactions/#reaction-types) to add to the issue comment.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": [
          "+1",
          "-1",
          "laugh",
          "confused",
          "heart",
          "hooray",
          "rocket",
          "eyes"
        ],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 201,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":1,\"node_id\":\"MDg6UmVhY3Rpb24x\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"content\":\"heart\",\"created_at\":\"2016-05-20T20:09:31Z\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "List events for a repository",
    "scope": "issues",
    "id": "listEventsForRepo",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/issues/events",
    "isDeprecated": false,
    "description": "",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/issues/events/#list-events-for-a-repository",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"id\":1,\"node_id\":\"MDEwOklzc3VlRXZlbnQx\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/issues/events/1\",\"actor\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"event\":\"closed\",\"commit_id\":\"6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"commit_url\":\"https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"created_at\":\"2011-04-14T16:00:49Z\",\"issue\":{\"id\":1,\"node_id\":\"MDU6SXNzdWUx\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347\",\"repository_url\":\"https://api.github.com/repos/octocat/Hello-World\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347/comments\",\"events_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347/events\",\"html_url\":\"https://github.com/octocat/Hello-World/issues/1347\",\"number\":1347,\"state\":\"open\",\"title\":\"Found a bug\",\"body\":\"I'm having a problem with this.\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"labels\":[{\"id\":208045946,\"node_id\":\"MDU6TGFiZWwyMDgwNDU5NDY=\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/labels/bug\",\"name\":\"bug\",\"description\":\"Something isn't working\",\"color\":\"f29513\",\"default\":true}],\"assignee\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"assignees\":[{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false}],\"milestone\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/milestones/1\",\"html_url\":\"https://github.com/octocat/Hello-World/milestones/v1.0\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/milestones/1/labels\",\"id\":1002604,\"node_id\":\"MDk6TWlsZXN0b25lMTAwMjYwNA==\",\"number\":1,\"state\":\"open\",\"title\":\"v1.0\",\"description\":\"Tracking milestone for version 1.0\",\"creator\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"open_issues\":4,\"closed_issues\":8,\"created_at\":\"2011-04-10T20:09:31Z\",\"updated_at\":\"2014-03-03T18:58:10Z\",\"closed_at\":\"2013-02-12T13:22:01Z\",\"due_on\":\"2012-10-09T23:39:01Z\"},\"locked\":true,\"active_lock_reason\":\"too heated\",\"comments\":0,\"pull_request\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/pulls/1347\",\"html_url\":\"https://github.com/octocat/Hello-World/pull/1347\",\"diff_url\":\"https://github.com/octocat/Hello-World/pull/1347.diff\",\"patch_url\":\"https://github.com/octocat/Hello-World/pull/1347.patch\"},\"closed_at\":null,\"created_at\":\"2011-04-22T13:33:48Z\",\"updated_at\":\"2011-04-22T13:33:48Z\"}}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Get a single event",
    "scope": "issues",
    "id": "getEvent",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/issues/events/{event_id}",
    "isDeprecated": false,
    "description": "",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/issues/events/#get-a-single-event",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "event_id",
        "description": "event_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":1,\"node_id\":\"MDEwOklzc3VlRXZlbnQx\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/issues/events/1\",\"actor\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"event\":\"closed\",\"commit_id\":\"6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"commit_url\":\"https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"created_at\":\"2011-04-14T16:00:49Z\",\"issue\":{\"id\":1,\"node_id\":\"MDU6SXNzdWUx\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347\",\"repository_url\":\"https://api.github.com/repos/octocat/Hello-World\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347/comments\",\"events_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347/events\",\"html_url\":\"https://github.com/octocat/Hello-World/issues/1347\",\"number\":1347,\"state\":\"open\",\"title\":\"Found a bug\",\"body\":\"I'm having a problem with this.\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"labels\":[{\"id\":208045946,\"node_id\":\"MDU6TGFiZWwyMDgwNDU5NDY=\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/labels/bug\",\"name\":\"bug\",\"description\":\"Something isn't working\",\"color\":\"f29513\",\"default\":true}],\"assignee\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"assignees\":[{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false}],\"milestone\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/milestones/1\",\"html_url\":\"https://github.com/octocat/Hello-World/milestones/v1.0\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/milestones/1/labels\",\"id\":1002604,\"node_id\":\"MDk6TWlsZXN0b25lMTAwMjYwNA==\",\"number\":1,\"state\":\"open\",\"title\":\"v1.0\",\"description\":\"Tracking milestone for version 1.0\",\"creator\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"open_issues\":4,\"closed_issues\":8,\"created_at\":\"2011-04-10T20:09:31Z\",\"updated_at\":\"2014-03-03T18:58:10Z\",\"closed_at\":\"2013-02-12T13:22:01Z\",\"due_on\":\"2012-10-09T23:39:01Z\"},\"locked\":true,\"active_lock_reason\":\"too heated\",\"comments\":0,\"pull_request\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/pulls/1347\",\"html_url\":\"https://github.com/octocat/Hello-World/pull/1347\",\"diff_url\":\"https://github.com/octocat/Hello-World/pull/1347.diff\",\"patch_url\":\"https://github.com/octocat/Hello-World/pull/1347.patch\"},\"closed_at\":null,\"created_at\":\"2011-04-22T13:33:48Z\",\"updated_at\":\"2011-04-22T13:33:48Z\"}}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Get a single issue",
    "scope": "issues",
    "id": "get",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/issues/{issue_number}",
    "isDeprecated": false,
    "description": "The API returns a [`301 Moved Permanently` status](https://developer.github.com/enterprise/2.17/v3/#http-redirects) if the issue was [transferred](https://help.github.com/articles/transferring-an-issue-to-another-repository/) to another repository. If the issue was transferred to or deleted from a repository where the authenticated user lacks read access, the API returns a `404 Not Found` status. If the issue was deleted from a repository where the authenticated user has read access, the API returns a `410 Gone` status. To receive webhook events for transferred and deleted issues, subscribe to the [`issues`](https://developer.github.com/enterprise/2.17/v3/activity/events/types/#issuesevent) webhook.\n\n**Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this reason, \"Issues\" endpoints may return both issues and pull requests in the response. You can identify pull requests by the `pull_request` key.\n\nBe aware that the `id` of a pull request returned from \"Issues\" endpoints will be an _issue id_. To find out the pull request id, use the \"[List pull requests](https://developer.github.com/enterprise/2.17/v3/pulls/#list-pull-requests)\" endpoint.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/issues/#get-a-single-issue",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "issue_number",
        "description": "issue_number parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "number",
        "description": null,
        "in": null,
        "type": null,
        "required": null,
        "enum": null,
        "allowNull": null,
        "mapToData": null,
        "validation": null,
        "alias": "issue_number",
        "deprecated": true
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":1,\"node_id\":\"MDU6SXNzdWUx\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347\",\"repository_url\":\"https://api.github.com/repos/octocat/Hello-World\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347/comments\",\"events_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347/events\",\"html_url\":\"https://github.com/octocat/Hello-World/issues/1347\",\"number\":1347,\"state\":\"open\",\"title\":\"Found a bug\",\"body\":\"I'm having a problem with this.\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"labels\":[{\"id\":208045946,\"node_id\":\"MDU6TGFiZWwyMDgwNDU5NDY=\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/labels/bug\",\"name\":\"bug\",\"description\":\"Something isn't working\",\"color\":\"f29513\",\"default\":true}],\"assignee\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"assignees\":[{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false}],\"milestone\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/milestones/1\",\"html_url\":\"https://github.com/octocat/Hello-World/milestones/v1.0\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/milestones/1/labels\",\"id\":1002604,\"node_id\":\"MDk6TWlsZXN0b25lMTAwMjYwNA==\",\"number\":1,\"state\":\"open\",\"title\":\"v1.0\",\"description\":\"Tracking milestone for version 1.0\",\"creator\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"open_issues\":4,\"closed_issues\":8,\"created_at\":\"2011-04-10T20:09:31Z\",\"updated_at\":\"2014-03-03T18:58:10Z\",\"closed_at\":\"2013-02-12T13:22:01Z\",\"due_on\":\"2012-10-09T23:39:01Z\"},\"locked\":true,\"active_lock_reason\":\"too heated\",\"comments\":0,\"pull_request\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/pulls/1347\",\"html_url\":\"https://github.com/octocat/Hello-World/pull/1347\",\"diff_url\":\"https://github.com/octocat/Hello-World/pull/1347.diff\",\"patch_url\":\"https://github.com/octocat/Hello-World/pull/1347.patch\"},\"closed_at\":null,\"created_at\":\"2011-04-22T13:33:48Z\",\"updated_at\":\"2011-04-22T13:33:48Z\",\"closed_by\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false}}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Edit an issue",
    "scope": "issues",
    "id": "update",
    "method": "PATCH",
    "url": "/repos/{owner}/{repo}/issues/{issue_number}",
    "isDeprecated": false,
    "description": "Issue owners and users with push access can edit an issue.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/issues/#edit-an-issue",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "issue_number",
        "description": "issue_number parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "title",
        "description": "The title of the issue.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "body",
        "description": "The contents of the issue.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "assignee",
        "description": "Login for the user that this issue should be assigned to. **This field is deprecated.**",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "state",
        "description": "State of the issue. Either `open` or `closed`.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": ["open", "closed"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "milestone",
        "description": "The `number` of the milestone to associate this issue with or `null` to remove current. _NOTE: Only users with push access can set the milestone for issues. The milestone is silently dropped otherwise._",
        "in": "BODY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": true,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "labels",
        "description": "Labels to associate with this issue. Pass one or more Labels to _replace_ the set of Labels on this Issue. Send an empty array (`[]`) to clear all Labels from the Issue. _NOTE: Only users with push access can set labels for issues. Labels are silently dropped otherwise._",
        "in": "BODY",
        "type": "string[]",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "assignees",
        "description": "Logins for Users to assign to this issue. Pass one or more user logins to _replace_ the set of assignees on this Issue. Send an empty array (`[]`) to clear all assignees from the Issue. _NOTE: Only users with push access can set assignees for new issues. Assignees are silently dropped otherwise._",
        "in": "BODY",
        "type": "string[]",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "number",
        "description": null,
        "in": null,
        "type": null,
        "required": null,
        "enum": null,
        "allowNull": null,
        "mapToData": null,
        "validation": null,
        "alias": "issue_number",
        "deprecated": true
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":1,\"node_id\":\"MDU6SXNzdWUx\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347\",\"repository_url\":\"https://api.github.com/repos/octocat/Hello-World\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347/comments\",\"events_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347/events\",\"html_url\":\"https://github.com/octocat/Hello-World/issues/1347\",\"number\":1347,\"state\":\"open\",\"title\":\"Found a bug\",\"body\":\"I'm having a problem with this.\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"labels\":[{\"id\":208045946,\"node_id\":\"MDU6TGFiZWwyMDgwNDU5NDY=\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/labels/bug\",\"name\":\"bug\",\"description\":\"Something isn't working\",\"color\":\"f29513\",\"default\":true}],\"assignee\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"assignees\":[{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false}],\"milestone\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/milestones/1\",\"html_url\":\"https://github.com/octocat/Hello-World/milestones/v1.0\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/milestones/1/labels\",\"id\":1002604,\"node_id\":\"MDk6TWlsZXN0b25lMTAwMjYwNA==\",\"number\":1,\"state\":\"open\",\"title\":\"v1.0\",\"description\":\"Tracking milestone for version 1.0\",\"creator\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"open_issues\":4,\"closed_issues\":8,\"created_at\":\"2011-04-10T20:09:31Z\",\"updated_at\":\"2014-03-03T18:58:10Z\",\"closed_at\":\"2013-02-12T13:22:01Z\",\"due_on\":\"2012-10-09T23:39:01Z\"},\"locked\":true,\"active_lock_reason\":\"too heated\",\"comments\":0,\"pull_request\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/pulls/1347\",\"html_url\":\"https://github.com/octocat/Hello-World/pull/1347\",\"diff_url\":\"https://github.com/octocat/Hello-World/pull/1347.diff\",\"patch_url\":\"https://github.com/octocat/Hello-World/pull/1347.patch\"},\"closed_at\":null,\"created_at\":\"2011-04-22T13:33:48Z\",\"updated_at\":\"2011-04-22T13:33:48Z\",\"closed_by\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false}}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Add assignees to an issue",
    "scope": "issues",
    "id": "addAssignees",
    "method": "POST",
    "url": "/repos/{owner}/{repo}/issues/{issue_number}/assignees",
    "isDeprecated": false,
    "description": "Adds up to 10 assignees to an issue. Users already assigned to an issue are not replaced.\n\nThis example adds two assignees to the existing `octocat` assignee.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/issues/assignees/#add-assignees-to-an-issue",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "issue_number",
        "description": "issue_number parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "assignees",
        "description": "Usernames of people to assign this issue to. _NOTE: Only users with push access can add assignees to an issue. Assignees are silently ignored otherwise._",
        "in": "BODY",
        "type": "string[]",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "number",
        "description": null,
        "in": null,
        "type": null,
        "required": null,
        "enum": null,
        "allowNull": null,
        "mapToData": null,
        "validation": null,
        "alias": "issue_number",
        "deprecated": true
      }
    ],
    "responses": [
      {
        "code": 201,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":1,\"node_id\":\"MDU6SXNzdWUx\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347\",\"repository_url\":\"https://api.github.com/repos/octocat/Hello-World\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347/comments\",\"events_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347/events\",\"html_url\":\"https://github.com/octocat/Hello-World/issues/1347\",\"number\":1347,\"state\":\"open\",\"title\":\"Found a bug\",\"body\":\"I'm having a problem with this.\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"labels\":[{\"id\":208045946,\"node_id\":\"MDU6TGFiZWwyMDgwNDU5NDY=\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/labels/bug\",\"name\":\"bug\",\"description\":\"Something isn't working\",\"color\":\"f29513\",\"default\":true}],\"assignee\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"assignees\":[{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},{\"login\":\"hubot\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/hubot_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hubot\",\"html_url\":\"https://github.com/hubot\",\"followers_url\":\"https://api.github.com/users/hubot/followers\",\"following_url\":\"https://api.github.com/users/hubot/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hubot/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hubot/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hubot/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hubot/orgs\",\"repos_url\":\"https://api.github.com/users/hubot/repos\",\"events_url\":\"https://api.github.com/users/hubot/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hubot/received_events\",\"type\":\"User\",\"site_admin\":true},{\"login\":\"other_user\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/other_user_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/other_user\",\"html_url\":\"https://github.com/other_user\",\"followers_url\":\"https://api.github.com/users/other_user/followers\",\"following_url\":\"https://api.github.com/users/other_user/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/other_user/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/other_user/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/other_user/subscriptions\",\"organizations_url\":\"https://api.github.com/users/other_user/orgs\",\"repos_url\":\"https://api.github.com/users/other_user/repos\",\"events_url\":\"https://api.github.com/users/other_user/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/other_user/received_events\",\"type\":\"User\",\"site_admin\":false}],\"milestone\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/milestones/1\",\"html_url\":\"https://github.com/octocat/Hello-World/milestones/v1.0\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/milestones/1/labels\",\"id\":1002604,\"node_id\":\"MDk6TWlsZXN0b25lMTAwMjYwNA==\",\"number\":1,\"state\":\"open\",\"title\":\"v1.0\",\"description\":\"Tracking milestone for version 1.0\",\"creator\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"open_issues\":4,\"closed_issues\":8,\"created_at\":\"2011-04-10T20:09:31Z\",\"updated_at\":\"2014-03-03T18:58:10Z\",\"closed_at\":\"2013-02-12T13:22:01Z\",\"due_on\":\"2012-10-09T23:39:01Z\"},\"locked\":true,\"active_lock_reason\":\"too heated\",\"comments\":0,\"pull_request\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/pulls/1347\",\"html_url\":\"https://github.com/octocat/Hello-World/pull/1347\",\"diff_url\":\"https://github.com/octocat/Hello-World/pull/1347.diff\",\"patch_url\":\"https://github.com/octocat/Hello-World/pull/1347.patch\"},\"closed_at\":null,\"created_at\":\"2011-04-22T13:33:48Z\",\"updated_at\":\"2011-04-22T13:33:48Z\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Remove assignees from an issue",
    "scope": "issues",
    "id": "removeAssignees",
    "method": "DELETE",
    "url": "/repos/{owner}/{repo}/issues/{issue_number}/assignees",
    "isDeprecated": false,
    "description": "Removes one or more assignees from an issue.\n\nThis example removes two of three assignees, leaving the `octocat` assignee.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/issues/assignees/#remove-assignees-from-an-issue",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "issue_number",
        "description": "issue_number parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "assignees",
        "description": "Usernames of assignees to remove from an issue. _NOTE: Only users with push access can remove assignees from an issue. Assignees are silently ignored otherwise._",
        "in": "BODY",
        "type": "string[]",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "number",
        "description": null,
        "in": null,
        "type": null,
        "required": null,
        "enum": null,
        "allowNull": null,
        "mapToData": null,
        "validation": null,
        "alias": "issue_number",
        "deprecated": true
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":1,\"node_id\":\"MDU6SXNzdWUx\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347\",\"repository_url\":\"https://api.github.com/repos/octocat/Hello-World\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347/comments\",\"events_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347/events\",\"html_url\":\"https://github.com/octocat/Hello-World/issues/1347\",\"number\":1347,\"state\":\"open\",\"title\":\"Found a bug\",\"body\":\"I'm having a problem with this.\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"labels\":[{\"id\":208045946,\"node_id\":\"MDU6TGFiZWwyMDgwNDU5NDY=\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/labels/bug\",\"name\":\"bug\",\"description\":\"Something isn't working\",\"color\":\"f29513\",\"default\":true}],\"assignee\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"assignees\":[{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false}],\"milestone\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/milestones/1\",\"html_url\":\"https://github.com/octocat/Hello-World/milestones/v1.0\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/milestones/1/labels\",\"id\":1002604,\"node_id\":\"MDk6TWlsZXN0b25lMTAwMjYwNA==\",\"number\":1,\"state\":\"open\",\"title\":\"v1.0\",\"description\":\"Tracking milestone for version 1.0\",\"creator\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"open_issues\":4,\"closed_issues\":8,\"created_at\":\"2011-04-10T20:09:31Z\",\"updated_at\":\"2014-03-03T18:58:10Z\",\"closed_at\":\"2013-02-12T13:22:01Z\",\"due_on\":\"2012-10-09T23:39:01Z\"},\"locked\":true,\"active_lock_reason\":\"too heated\",\"comments\":0,\"pull_request\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/pulls/1347\",\"html_url\":\"https://github.com/octocat/Hello-World/pull/1347\",\"diff_url\":\"https://github.com/octocat/Hello-World/pull/1347.diff\",\"patch_url\":\"https://github.com/octocat/Hello-World/pull/1347.patch\"},\"closed_at\":null,\"created_at\":\"2011-04-22T13:33:48Z\",\"updated_at\":\"2011-04-22T13:33:48Z\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "List comments on an issue",
    "scope": "issues",
    "id": "listComments",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/issues/{issue_number}/comments",
    "isDeprecated": false,
    "description": "Issue Comments are ordered by ascending ID.",
    "documentationUrl": "https://developer.github.com/enterprise/2.17/v3/issues/comments/#list-comments-on-an-issue",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "owner parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "repo parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "issue_number",
        "description": "issue_number parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "since",
        "description": "Only comments updated at or after this time are returned. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        